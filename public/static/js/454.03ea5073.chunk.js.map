{"version":3,"file":"static/js/454.03ea5073.chunk.js","mappings":"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","sources":["commons/components/icons/FcDebt.tsx","apps/clinica/mora/services/EmpleadorService.ts","apps/clinica/mora/services/ListaMoraService.ts","apps/clinica/mora/components/ListaMoraFilterForm.tsx","apps/clinica/mora/policies/index.ts","apps/clinica/mora/policies/ListaMoraPolicy.ts","apps/clinica/mora/policies/Permisos.ts","apps/clinica/mora/components/RowOptions.tsx","apps/clinica/mora/components/ListaMoraIndex.tsx","apps/clinica/mora/components/EmpleadorChooser.tsx","apps/clinica/mora/components/ListaMoraItemForm.tsx","apps/clinica/solicitud_atencion_externa/services/SolicitudesAtencionExternaService.ts","apps/clinica/medicos/services/MedicoService.ts","apps/clinica/medicos/policies/index.ts","apps/clinica/medicos/policies/MedicoPolicy.ts","apps/clinica/medicos/policies/Permisos.ts","apps/clinica/medicos/components/MedicosFilterForm.tsx","apps/clinica/medicos/components/RowOptions.tsx","apps/clinica/medicos/components/MedicosIndex.tsx","apps/clinica/medicos/components/MedicoView.tsx","apps/clinica/medicos/components/MedicoForm.tsx","apps/clinica/medicos/components/MedicosTypeahead.tsx","apps/clinica/proveedores/policies/index.ts","apps/clinica/proveedores/policies/ProveedorPolicy.ts","apps/clinica/proveedores/policies/Permisos.ts","apps/clinica/proveedores/services/ProveedoresService.ts","apps/clinica/proveedores/components/ProveedoresFilterForm.tsx","apps/clinica/proveedores/components/RowOptions.tsx","apps/clinica/proveedores/components/ProveedoresIndex.tsx","apps/clinica/proveedores/components/ProveedorView.tsx","apps/clinica/proveedores/components/ProveedorEmpresaFieldset.tsx","apps/clinica/proveedores/components/ProveedorMedicoFieldset.tsx","apps/clinica/proveedores/components/ProveedorFieldset.tsx","apps/clinica/proveedores/components/ContactoFieldset.tsx","apps/clinica/proveedores/components/ProveedorForm.tsx","apps/clinica/proveedores/components/ProveedoresTypeahead.tsx","apps/clinica/solicitud_atencion_externa/policies/index.ts","apps/clinica/solicitud_atencion_externa/policies/SolicitudAtencionExternaPolicy.ts","apps/clinica/solicitud_atencion_externa/policies/Permisos.ts","apps/clinica/solicitud_atencion_externa/components/SolicitudAtencionExternaFilterForm.tsx","apps/clinica/solicitud_atencion_externa/components/RowOptions.tsx","apps/clinica/solicitud_atencion_externa/components/SolicitudAtencionExternaIndex.tsx","apps/clinica/solicitud_atencion_externa/components/AseguradoChooser.tsx","apps/clinica/solicitud_atencion_externa/services/AseguradosService.ts","apps/clinica/solicitud_atencion_externa/components/AseguradoCard.tsx","apps/clinica/solicitud_atencion_externa/utils/EstadosAfi.ts","apps/clinica/solicitud_atencion_externa/utils/EstadosEmp.ts","apps/clinica/solicitud_atencion_externa/components/SolicitudAtencionExternaForm.tsx","apps/clinica/ClinicaApp.tsx","commons/components/IndexTemplate.tsx","commons/click-outside-handler/useOnClickOutside.ts","commons/click-outside-handler/ClickOutsideHandler.tsx","commons/components/layouts/Sidebar.tsx","commons/components/layouts/SidebarLayout.tsx"],"sourcesContent":["import { GenIcon, IconBaseProps } from \"react-icons/lib\";\r\n\r\nexport const FcDebt = function FcDebt (props: IconBaseProps) {\r\n  //@ts-ignore\r\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"version\":\"1\",\"viewBox\":\"0 0 48 48\",\"enableBackground\":\"new 0 0 48 48\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M10,12c-2.8,0-5-2.2-5-5s2.2-5,5-5s5,2.2,5,5S12.8,12,10,12z\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M2,22v8l3,2l1,14h8l1-14l3-2v-8c0-4.4-3.6-8-8-8h0C5.6,14,2,17.6,2,22z\"}},{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M22.4,40.4c-0.6,2.5-1,3.6-2.4,3.6c-0.6,0-1.2-0.5-1.9-1.1c-1-0.8-2.2-1.9-4.1-1.9v2c1.1,0,1.9,0.7,2.8,1.4 c0.9,0.7,1.9,1.6,3.2,1.6c3.1,0,3.8-2.9,4.4-5.2C25,38.2,25.4,37,27,37v-2C23.7,35,22.9,38.1,22.4,40.4z\"}},{\"tag\":\"polygon\",\"attr\":{\"points\":\"14.4,40 10,40 10,44 14.1,44\"}}]},\r\n    //@ts-ignore\r\n    {\"tag\":\"circle\",\"attr\":{\"cx\":\"36\",\"cy\":\"36\",\"r\":\"10\"}},\r\n    //@ts-ignore\r\n    {\"tag\":\"path\",\"attr\":{\"fill\":\"#fff\",\"d\":\"M35,34c0.1,0.2,0.1,0.3,0.3,0.4c0.1,0.1,0.3,0.2,0.5,0.4c0.2,0.1,0.5,0.2,0.8,0.3c0.5,0.2,0.9,0.4,1.3,0.6 c0.4,0.2,0.7,0.4,1,0.7c0.3,0.3,0.5,0.6,0.7,0.9c0.2,0.4,0.2,0.8,0.2,1.3c0,0.4-0.1,0.8-0.2,1.2c-0.1,0.4-0.3,0.7-0.6,0.9 c-0.3,0.3-0.6,0.5-0.9,0.6c-0.4,0.2-0.8,0.3-1.2,0.3v1.5h-1.2v-1.5c-0.4,0-0.8-0.1-1.2-0.3c-0.4-0.2-0.7-0.4-1-0.6 c-0.3-0.3-0.5-0.6-0.7-1.1c-0.2-0.4-0.3-0.9-0.3-1.5h2.2c0,0.4,0,0.7,0.1,0.9c0.1,0.2,0.2,0.4,0.4,0.6c0.2,0.1,0.3,0.2,0.5,0.3 c0.2,0.1,0.4,0.1,0.6,0.1c0.2,0,0.4,0,0.6-0.1c0.2-0.1,0.3-0.2,0.4-0.3c0.1-0.1,0.2-0.3,0.3-0.4c0.1-0.2,0.1-0.3,0.1-0.5 c0-0.2,0-0.4-0.1-0.6c-0.1-0.2-0.1-0.3-0.3-0.4c-0.1-0.1-0.3-0.3-0.5-0.4c-0.2-0.1-0.4-0.2-0.7-0.3c-0.5-0.2-0.9-0.4-1.3-0.6 c-0.4-0.2-0.7-0.4-1-0.7c-0.3-0.3-0.5-0.6-0.7-0.9c-0.2-0.4-0.2-0.8-0.2-1.3c0-0.4,0.1-0.8,0.2-1.2c0.1-0.3,0.3-0.7,0.6-0.9 c0.3-0.3,0.6-0.5,0.9-0.6c0.4-0.2,0.8-0.3,1.2-0.3v-1.6h1.2v1.6c0.4,0.1,0.8,0.2,1.2,0.4c0.4,0.2,0.6,0.4,0.9,0.7 c0.2,0.3,0.4,0.6,0.6,1c0.1,0.4,0.2,0.9,0.2,1.4h-2.2c0-0.6-0.1-1-0.4-1.3c-0.2-0.3-0.6-0.4-1-0.4c-0.2,0-0.4,0-0.6,0.1 c-0.2,0.1-0.3,0.2-0.4,0.3C35.1,32.7,35,32.8,35,33s-0.1,0.3-0.1,0.5C34.9,33.7,34.9,33.9,35,34z\"}}\r\n    // //@ts-ignore\r\n    // {\"tag\":\"path\",\"attr\":{\"d\":\"M34.36918731037488,32.43804760584102 c0.2049905379011744,-0.1362195187343288 0.4575917813793953,-0.25921384147503324 0.7498686128384906,-0.353112733029765 v2.2456382797173764 a3.04840767653036,3.04840767653036 0 0 1 -0.7498686128384906,-0.353112733029765 C33.88911269580633,33.657410676453175 33.79653632385097,33.358521246997256 33.79653632385097,33.207754012669945 c0,-0.1507672343273157 0.09257637195536918,-0.449656663783222 0.5726509865239253,-0.7697064068289254 zM37.764095121938205,39.620651549978284 v-2.2456382797173764 c0.2909543118597318,0.09389889155473126 0.5448780749373151,0.21689321429543612 0.7498686128384906,0.353112733029765 c0.4813971341679188,0.3213722626450675 0.5726509865239253,0.6189391725016105 0.5726509865239253,0.7697064068289254 c0,0.1507672343273157 -0.09257637195536918,0.449656663783222 -0.5726509865239253,0.7697064068289254 a3.04840767653036,3.04840767653036 0 0 1 -0.7498686128384906,0.353112733029765 z\"}},\r\n    // //@ts-ignore\r\n    // {\"tag\":\"path\",\"attr\":{\"fill-rule\":\"evenodd\", \"clip-rule\": \"evenodd\",\"d\":\"M36.456693151701,46.34645688299114 a10.519685476315033,10.519685476315033 0 1 0 0,-21.039370952630065 a10.519685476315033,10.519685476315033 0 0 0 0,21.039370952630065 zm1.314960684539379,-17.094488899011928 a1.314960684539379,1.314960684539379 0 1 0 -2.629921369078758,0 v0.120976382977623 a5.963346704386084,5.963346704386084 0 0 0 -2.203874107288,0.8705039731650693 C31.988456745636196,30.874629468700803 31.196850413543487,31.89372399921882 31.196850413543487,33.19685003759734 c0,1.3018110776939853 0.7916063320927069,2.320905608212004 1.741007946330138,2.9534016974754462 c0.6311811285789025,0.4207874190526019 1.385968561504506,0.7166535730739616 2.203874107288,0.8705039731650693 v2.5523386886909347 c-0.5141496276548978,-0.16700000693650122 -0.8941732654867787,-0.4168425369989835 -1.108511857066697,-0.662740185007847 a1.314960684539379,1.314960684539379 0 1 0 -1.9855906336544624,1.7225984967465875 c0.7390079047111311,0.8534094842660581 1.8580394472541435,1.414897696564372 3.094102490721159,1.6476457377278424 V42.401574829373004 a1.314960684539379,1.314960684539379 0 1 0 2.629921369078758,0 v-0.120976382977623 a5.963346704386084,5.963346704386084 0 0 0 2.203874107288,-0.8705039731650693 C40.92492955776581,40.77891334465141 41.71653588985852,39.75981881413339 41.71653588985852,38.45669277575487 c0,-1.3018110776939853 -0.7916063320927069,-2.320905608212004 -1.741007946330138,-2.9534016974754462 A5.963346704386084,5.963346704386084 0 0 0 37.77165383624038,34.63278710511435 V32.08044841642341 c0.5141496276548978,0.16700000693650122 0.8941732654867787,0.4168425369989835 1.108511857066697,0.662740185007847 a1.314960684539379,1.314960684539379 0 1 0 1.9869055943390022,-1.7225984967465875 c-0.7403228653956706,-0.8534094842660581 -1.8580394472541435,-1.414897696564372 -3.0954174514056985,-1.6476457377278424 V29.25196798397921 z\"}}\r\n  ]})(props);\r\n}","import { apiClient , PaginatedResponse, Page} from \"../../../../commons/services\"\r\nimport { keysToUnderscore } from \"../../../../commons/utils\"\r\n\r\nexport type Empleador = {\r\n  id: string\r\n  numeroPatronal: string\r\n  nombre: string\r\n  // regionalId: number\r\n}\r\n\r\ntype Filter = {\r\n  numeroPatronal?: string\r\n  regionalId?: number\r\n}\r\n\r\nexport const EmpleadorService = {\r\n  buscar: (page: Page, filter: Filter) => {\r\n    return apiClient.get<PaginatedResponse<Empleador>>(\"empleadores\", {\r\n      params: {\r\n        filter: keysToUnderscore(filter),\r\n        page: page\r\n      }\r\n    })\r\n  }\r\n}","import { apiClient, Page, PaginatedResponse} from \"../../../../commons/services\"\r\nimport { keysToUnderscore } from \"../../../../commons/utils\"\r\n\r\nexport type ListaMoraFilter = {\r\n  numeroPatronal?: string,\r\n  nombre?: string,\r\n  nit?: number,\r\n  regionalId?: number\r\n}\r\n\r\nexport type ListaMoraItem = {\r\n  id: number,\r\n  empleadorId: string\r\n  numeroPatronal: string\r\n  nombre: string\r\n  regionalId: number\r\n  regional?: {\r\n    id: number\r\n    nombre: string\r\n  }\r\n}\r\n\r\nexport const ListaMoraService = {\r\n  buscar: (filter: ListaMoraFilter, page: Page)=>{\r\n    return apiClient.get<PaginatedResponse<ListaMoraItem>>(\"/lista-mora\", {\r\n      params: keysToUnderscore({\r\n        page, filter\r\n      })\r\n    })\r\n  },\r\n  agregar: (idEmpleador: string) =>{\r\n    return apiClient.post<ListaMoraItem>(\"lista-mora\", {\r\n      empleador_id: idEmpleador\r\n    })\r\n  },\r\n  quitar: (id: number) =>{\r\n    return apiClient.delete(`lista-mora/${id}`)\r\n  }\r\n}","import { Button, Col, Form } from \"react-bootstrap\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { ListaMoraFilter as Filter } from \"../services\"\r\n\r\ntype Inputs = {\r\n  numeroPatronal: string\r\n  nombre: string\r\n}\r\n\r\ntype Props = {\r\n  onApply: (filter: Filter) => void\r\n}\r\n\r\nexport const ListaMoraFilterForm = (props: Props)=>{\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    reset\r\n  } = useForm<Inputs>()\r\n\r\n  return <Form onSubmit={handleSubmit((inputs)=>{\r\n    const filter: Filter = {}\r\n    if(inputs.nombre) filter.nombre = inputs.nombre\r\n    if(inputs.numeroPatronal) filter.numeroPatronal = inputs.numeroPatronal\r\n    props.onApply(filter)\r\n  })}>\r\n    <Form.Row>\r\n      <Form.Group as={Col} sm={4}>\r\n        <Form.Label htmlFor=\"numeroPatronal\">N.º Patronal</Form.Label>\r\n        <Form.Control id=\"numeroPatronal\" {...register(\"numeroPatronal\")} />\r\n      </Form.Group>\r\n      <Form.Group as={Col} sm={8}>\r\n        <Form.Label htmlFor=\"nombre\">Nombre</Form.Label>\r\n        <Form.Control id=\"nombre\" {...register(\"nombre\")} />\r\n      </Form.Group>\r\n    </Form.Row>\r\n    <Form.Row>\r\n      <Col xs=\"auto\">\r\n        <Button type=\"submit\">Aplicar</Button>\r\n      </Col>\r\n      <Col xs=\"auto\">\r\n        <Button variant=\"secondary\" onClick={()=>reset()}>Limpiar</Button>\r\n      </Col>\r\n    </Form.Row>\r\n  </Form>\r\n}","import { ListaMoraPolicy }from \"./ListaMoraPolicy\"\r\n\r\nexport const listaMoraPolicy = new ListaMoraPolicy()","import { User } from \"../../../../commons/auth\";\r\nimport * as Permisos from \"./Permisos\"\r\n\r\nexport class ListaMoraPolicy {\r\n  \r\n  index = (user: User) => {\r\n    return this.view(user) || this.register(user)\r\n  }  \r\n\r\n  view = (user: User, context?: {\r\n    regionalId: number\r\n  }) => {\r\n    const byRegionalOnly = this.viewByRegionalOnly(user, context)\r\n    if(byRegionalOnly !== undefined) return byRegionalOnly\r\n    if(user?.can(Permisos.VER_LISTA_DE_MORA)) return true\r\n  }\r\n\r\n  viewByRegionalOnly = (user: User, context?: {\r\n    regionalId: number\r\n  }) => {\r\n    if(user?.can(Permisos.VER_LISTA_DE_MORA_REGIONAL)) return !context?.regionalId || user.regionalId == context.regionalId\r\n  }\r\n\r\n  register = (user: User, context?: {\r\n    regionalId: number\r\n  }) => {\r\n    const byRegionalOnly = this.registerByRegionalOnly(user, context)\r\n    if(byRegionalOnly !== undefined) return byRegionalOnly\r\n    if(user?.can(Permisos.AGREGAR_EMPLEADOR_EN_MORA)) return true\r\n  }\r\n\r\n  registerByRegionalOnly = (user: User, context?: {\r\n    regionalId: number\r\n  }) => {\r\n    if(user?.can(Permisos.AGREGAR_EMPLEADOR_EN_MORA_DE_LA_MISMA_REGIONAL)) return !context?.regionalId || user.regionalId == context.regionalId\r\n  }\r\n\r\n  remove = (user: User, context?: {\r\n    regionalId: number\r\n  }) => {\r\n    const byRegionalOnly = this.removeByRegionalOnly(user, context)\r\n    if(byRegionalOnly !== undefined) return byRegionalOnly\r\n    if(user?.can(Permisos.QUITAR_EMPLEADOR_EN_MORA)) return true\r\n  }\r\n\r\n  removeByRegionalOnly = (user: User, context?: {\r\n    regionalId: number\r\n  }) => {\r\n    if(user?.can(Permisos.QUITAR_EMPLEADOR_EN_MORA_DE_LA_MISMA_REGIONAL)) return !context?.regionalId || user.regionalId == context.regionalId\r\n  }\r\n}","export const VER_LISTA_DE_MORA = \"Ver lista de mora\"\r\nexport const VER_LISTA_DE_MORA_REGIONAL = \"Ver lista de mora (regional)\"\r\nexport const AGREGAR_EMPLEADOR_EN_MORA = \"Agregar empleador en mora\";\r\nexport const AGREGAR_EMPLEADOR_EN_MORA_DE_LA_MISMA_REGIONAL = \"Agregar empleador en mora (misma regional)\";\r\nexport const QUITAR_EMPLEADOR_EN_MORA = \"Quitar empleador en mora\";\r\nexport const QUITAR_EMPLEADOR_EN_MORA_DE_LA_MISMA_REGIONAL = \"Quitar empleador en mora (misma regional)\";","import { useEffect } from \"react\"\r\nimport { Dropdown } from \"react-bootstrap\"\r\nimport { useMutation, useQueryClient, QueryKey } from \"react-query\"\r\nimport { VerticalEllipsisDropdownToggle } from \"../../../../commons/components\"\r\nimport { useModal } from \"../../../../commons/reusable-modal\"\r\nimport { ProtectedContent } from \"../../../../commons/auth/components\"\r\nimport { ListaMoraItem, ListaMoraService } from \"../services\"\r\nimport { listaMoraPolicy } from \"../policies\"\r\n\r\ntype Props = {\r\n  item: ListaMoraItem\r\n  queryKey: QueryKey\r\n}\r\nexport const RowOptions = ({item, queryKey}: Props) => {\r\n\r\n  const modal = useModal(\"queryLoader\")\r\n\r\n  const queryClient = useQueryClient()\r\n\r\n  const quitar = useMutation(()=>{\r\n    return ListaMoraService.quitar(item.id)\r\n  }, {\r\n    onSuccess: ()=>{\r\n      modal.close()\r\n      queryClient.setQueryData(queryKey, (oldData: any) => {\r\n        return {\r\n          ...oldData,\r\n          data: {\r\n            ...oldData.data,\r\n            records: oldData.data.records.filter((i: any)=>{\r\n              return i !== item\r\n            })\r\n          }\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n  useEffect(()=>{\r\n    if(quitar.status == \"loading\"){\r\n      modal.open({\r\n        state: \"loading\"\r\n      })\r\n    }\r\n    else if(quitar.status == \"error\"){\r\n      console.error(quitar.error)\r\n      modal.open({\r\n        state: \"error\",\r\n        error: quitar.error\r\n      })\r\n    }\r\n  }, [quitar.status])\r\n\r\n  return <Dropdown>\r\n    <Dropdown.Toggle as={VerticalEllipsisDropdownToggle}\r\n      variant=\"link\" id={`dropdown-${item.id}`}\r\n    />\r\n    \r\n    <Dropdown.Menu>\r\n      <ProtectedContent\r\n        authorize={(user)=> listaMoraPolicy.remove(user, {regionalId: item.regionalId})}\r\n      >\r\n        <Dropdown.Item className=\"text-danger\" href=\"#\" onClick={() => {\r\n          if (window.confirm(\"¿Está seguro?\")) {\r\n            quitar.mutate()\r\n          }\r\n        }}>Quitar</Dropdown.Item>\r\n      </ProtectedContent>\r\n    </Dropdown.Menu>\r\n  </Dropdown>  \r\n}","import { AxiosError } from \"axios\"\r\nimport { useEffect, useMemo, useRef, useState } from \"react\"\r\nimport { Breadcrumb, Button, Col, Collapse, Form, Spinner, Table } from \"react-bootstrap\"\r\nimport { FaFilter, FaSync, FaPlus } from \"react-icons/fa\"\r\nimport { useQuery } from \"react-query\"\r\nimport { Link } from \"react-router-dom\"\r\nimport {Pagination} from \"../../../../commons/components\"\r\nimport { useUser, ProtectedContent, Permisos } from \"../../../../commons/auth\"\r\nimport { ListaMoraService, ListaMoraFilter as Filter } from \"../services\"\r\nimport { ListaMoraFilterForm } from \"./ListaMoraFilterForm\"\r\nimport { RowOptions } from \"./RowOptions\"\r\nimport { listaMoraPolicy } from \"../policies\"\r\nimport { superUserPolicyEnhancer } from \"../../../../commons/auth/utils\"\r\nimport { IndexTemplate } from \"../../../../commons/components/IndexTemplate\"\r\nimport Skeleton from \"react-loading-skeleton\"\r\nimport 'react-loading-skeleton/dist/skeleton.css'\r\n\r\nexport default () => {\r\n  const [page, setPage] = useState({\r\n    current: 1,\r\n    size: 10\r\n  })\r\n\r\n  const user = useUser();\r\n\r\n  const [filter, setFilter] = useState<Filter>(()=>{\r\n    const defaultFilter: Filter = {}\r\n    if(listaMoraPolicy.viewByRegionalOnly(user)){\r\n      defaultFilter.regionalId = user?.regionalId;\r\n    }\r\n    return defaultFilter\r\n  })\r\n\r\n  const canView = !!superUserPolicyEnhancer(listaMoraPolicy.view)(user)\r\n  const queryKey = [\"listaMora.buscar\", filter, page]\r\n  const buscar = useQuery(queryKey, () => {\r\n    return ListaMoraService.buscar(filter, page)\r\n  }, {\r\n    enabled: canView,\r\n    refetchOnWindowFocus: false,\r\n    refetchOnReconnect: false\r\n  })\r\n\r\n  const totalRef = useRef(-1)\r\n\r\n  if(buscar.data) {\r\n    totalRef.current = buscar.data.data.meta.total\r\n  }\r\n\r\n  const loader = useMemo(()=>{\r\n    const rows = []\r\n    for(let i = 0; i < page.size; i++){\r\n      rows.push(<tr key={i}>\r\n        <th scope=\"row\">\r\n          {i + 1}\r\n        </th>\r\n        <td>\r\n          <Skeleton />\r\n        </td>\r\n        <td>\r\n          <Skeleton />\r\n        </td>\r\n        <td>\r\n          <Skeleton />\r\n        </td>\r\n        <td>\r\n          <Skeleton />\r\n        </td>\r\n        <td>\r\n        </td>\r\n      </tr>)\r\n    }\r\n    return rows\r\n  }, [page.size])\r\n\r\n  return <div className=\"px-1\">\r\n    <Breadcrumb>\r\n      <Breadcrumb.Item active>Lista de mora</Breadcrumb.Item>\r\n    </Breadcrumb>\r\n    <IndexTemplate\r\n      policy={listaMoraPolicy}\r\n      isLoading={buscar.isFetching}\r\n      hasError={buscar.isError}\r\n      total={totalRef.current}\r\n      page={page}\r\n      data={buscar.data?.data.records}\r\n      renderLoader={()=>{\r\n        return <>{loader}</>\r\n      }}\r\n      renderData={(item, index)=>{\r\n        return <tr key={item.id}>\r\n          <td>\r\n            {(page.current - 1)*page.size + index + 1}\r\n          </td>\r\n          <td>\r\n            {item.empleadorId}\r\n          </td>\r\n          <td>\r\n            {item.numeroPatronal}\r\n          </td>\r\n          <td>\r\n            {item.nombre}\r\n          </td>\r\n          <td>\r\n            {item.regional!.nombre}\r\n          </td>\r\n          <td style={{textTransform: \"none\"}}>\r\n            <RowOptions item={item} queryKey={queryKey} />\r\n          </td>\r\n        </tr>\r\n      }}\r\n      renderDataHeaders={()=>{\r\n        return <tr>\r\n          <th style={{width: 1}}>#</th>\r\n          <th>ID Empleador</th>\r\n          <th>N.º Patronal</th>\r\n          <th style={{minWidth: 250}}>Razón social</th>\r\n          <th>Regional</th>\r\n          <th style={{width: 1}}></th>\r\n        </tr>\r\n      }}\r\n      renderFilterForm={()=>{\r\n        return <ListaMoraFilterForm onApply={(filter)=>{\r\n          buscar.remove()\r\n          setFilter(filter)\r\n          setPage(page=>({ ...page, current: 1 }))\r\n        }} />\r\n      }}\r\n      renderCreateButton={()=>{\r\n        return <Button as={Link}\r\n          to=\"/clinica/lista-mora/agregar\"\r\n        >\r\n          <FaPlus className=\"mr-1\" />\r\n          Agregar\r\n        </Button>\r\n      }}\r\n      onPageChange={(page)=>setPage(page)}\r\n      onRefetch={()=>{\r\n        buscar.remove()\r\n        buscar.refetch({throwOnError: true})\r\n      }}\r\n    />\r\n  </div>\r\n}","import React, { forwardRef, useImperativeHandle, useRef, useCallback } from \"react\"\r\nimport { Button, Modal, ModalProps, Table } from \"react-bootstrap\"\r\nimport { Empleador } from \"../services\"\r\n\r\ntype Props = Omit<ModalProps, \"children\"> & {\r\n  empleadores: Empleador[]\r\n  onSelect: (Empleador: Empleador) => void\r\n  title?: string\r\n}\r\n\r\nexport const EmpleadorChooser = (props: Props) => {\r\n  return <Modal {...props} >\r\n    <Modal.Header>\r\n      {props.title||\"Empleadores\"}\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      <Table responsive className=\"small\">\r\n        <thead>\r\n          <tr>\r\n            <th style={{width: 1}}>#</th>\r\n            <th>ID</th>\r\n            <th>Número patronal</th>\r\n            <th>Razón social</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {!!props.empleadores.length ? props.empleadores.map((empleador, index)=>{\r\n            return <tr key={empleador.id}>\r\n              <th scope=\"row\">{index+1}</th>\r\n              <td>{empleador.id}</td>\r\n              <td>{empleador.numeroPatronal}</td>\r\n              <td>{empleador.nombre}</td>\r\n              <td><Button onClick={()=>{\r\n                props.onSelect(empleador)\r\n              }}\r\n              >Seleccionar</Button></td>\r\n            </tr>\r\n          }) : <tr><td className=\"bg-light text-center\" colSpan={100}>No se encontraron resultados</td></tr>}\r\n        </tbody>\r\n      </Table>\r\n    </Modal.Body>\r\n  </Modal>\r\n}","import { useEffect, useState } from 'react'\r\nimport { Alert, Breadcrumb, Button, Col, Form, InputGroup, Spinner } from 'react-bootstrap'\r\nimport { FieldError, useForm } from 'react-hook-form'\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { FaSearch } from 'react-icons/fa'\r\nimport { useMutation, useQuery, useQueryClient } from 'react-query'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as yup from \"yup\"\r\nimport { Empleador, EmpleadorService, ListaMoraItem, ListaMoraService } from '../services'\r\nimport { useUser } from '../../../../commons/auth'\r\nimport { listaMoraPolicy } from '../policies'\r\nimport { EmpleadorChooser } from './EmpleadorChooser'\r\n\r\ntype Inputs = {\r\n  empleador: Empleador\r\n}\r\n\r\nconst schema = yup.object().shape({\r\n  empleador: yup.object().when(\"$empleador\", function(empleador:Empleador, schema: yup.ObjectSchema<any>){\r\n    if(!empleador) return schema.test(\"\", \"\", function(value: any, context: any){\r\n      return context.createError({\r\n        message: \"Debe indicar un empleador\"\r\n      })\r\n    })\r\n    return schema\r\n  })\r\n})\r\n\r\nexport default ()=>{\r\n  const [empleador, setEmpleador] = useState<Empleador|null>(null)\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    watch,\r\n    setError,\r\n    clearErrors,\r\n    setValue,\r\n    reset,\r\n    trigger,\r\n    formState\r\n  } = useForm<Inputs>({\r\n    context: {empleador},\r\n    resolver: yupResolver(schema)\r\n  })\r\n\r\n  const formErrors = formState.errors\r\n\r\n  const user = useUser()\r\n\r\n  const [showChooser, setShowChooser] = useState(false)\r\n\r\n  const history = useHistory()\r\n\r\n  const queryClient = useQueryClient()\r\n  \r\n  const buscarEmpleador = useQuery([\"empleadores\", \"buscar\", \"porPatronal\"], ()=>{\r\n    return EmpleadorService.buscar({current: 1, size: 10}, {\r\n      numeroPatronal: watch(\"empleador.numeroPatronal\"),\r\n      regionalId: listaMoraPolicy.registerByRegionalOnly(user) ? user!.regionalId : undefined\r\n    })\r\n  }, {\r\n    enabled: false,\r\n    onSuccess: ({data}) =>{\r\n      if(data.records.length == 1){\r\n        setEmpleador(data.records[0])\r\n      }\r\n      else {\r\n        setShowChooser(true)\r\n      }\r\n    }\r\n  })\r\n\r\n  const guardar = useMutation((empleadorId: string)=>{\r\n    return ListaMoraService.agregar(empleadorId)\r\n  }, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"listaMora.buscar\")\r\n      history.replace(\"/clinica/lista-mora\")\r\n    }\r\n  })\r\n\r\n  useEffect(()=>{\r\n    const error = guardar.error as any\r\n    if(error?.response?.status == 422) {\r\n      const {errors} = error?.response?.data\r\n      Object.keys(errors).forEach((key: any)=>{\r\n        let localKey = key\r\n        if(key == \"empleadorId\") localKey = \"numeroPatronal\"\r\n        setError(localKey, {type: \"serverError\", message: errors[key]})\r\n      })\r\n    }\r\n  }, [guardar.isError])\r\n\r\n  useEffect(()=>{\r\n    if(empleador) {\r\n      setValue(\"empleador\", empleador)\r\n    }\r\n  }, [empleador])\r\n  const renderAlert = ()=>{\r\n    if((formErrors.empleador as FieldError)?.message){\r\n      return <Alert variant=\"danger\">\r\n        {(formErrors.empleador as FieldError)?.message}\r\n      </Alert>\r\n    }\r\n    if(guardar.isSuccess){\r\n      return <Alert variant=\"success\">\r\n        La operacion se realizó exitosamente\r\n      </Alert>\r\n    }\r\n    if(guardar.error && (guardar.error as any).response?.status != 422){\r\n      return <Alert variant=\"danger\">\r\n        Ocurrio un error al realizar la solicitud\r\n      </Alert>\r\n    }\r\n    return null\r\n  }\r\n\r\n  const { onChange: onChangeNumeroPatronal, ...numeroPatronalField} = register(\"empleador.numeroPatronal\")\r\n\r\n  return <div>\r\n    <Breadcrumb>\r\n      <Breadcrumb.Item linkAs={Link} linkProps={{to: \"/clinica/lista-mora\"}}>Lista de mora</Breadcrumb.Item>\r\n      <Breadcrumb.Item active>Registro</Breadcrumb.Item>\r\n    </Breadcrumb>\r\n    <Form id=\"form-empleador-mora\"\r\n      onSubmit={handleSubmit(({empleador})=>{\r\n        guardar.mutate(empleador.id)\r\n    })}>\r\n      {renderAlert()}\r\n      <Form.Row>\r\n        <Form.Group as={Col} sm={4}>\r\n          <Form.Label>\r\n            Nº Patronal\r\n          </Form.Label>\r\n          <InputGroup hasValidation>\r\n            <Form.Control\r\n              className=\"text-uppercase\"\r\n              isInvalid={buscarEmpleador.isError}\r\n              {...numeroPatronalField}\r\n              onChange={(e)=>{\r\n                setEmpleador(null)\r\n                onChangeNumeroPatronal(e)\r\n              }}\r\n            />\r\n            <InputGroup.Append >\r\n              <Button variant={buscarEmpleador.isError ? \"danger\" : \"outline-secondary\"} onClick={()=>{\r\n                  clearErrors()\r\n                  buscarEmpleador.refetch()\r\n              }}>\r\n                {buscarEmpleador.isFetching ? <Spinner animation=\"border\" size=\"sm\" /> : <FaSearch />}\r\n              </Button>\r\n            </InputGroup.Append>\r\n            <Form.Control.Feedback type=\"invalid\">Ocurrio un error al realizar la busqueda</Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n      </Form.Row>\r\n      <Form.Row>\r\n        <Form.Group as={Col} sm={4}>\r\n            <Form.Label>\r\n              ID\r\n            </Form.Label>\r\n            <Form.Control\r\n              readOnly\r\n              {...register(\"empleador.id\")}\r\n            />\r\n        </Form.Group>\r\n        <Form.Group as={Col} sm={8}>\r\n            <Form.Label>\r\n              Nombre\r\n            </Form.Label>\r\n            <Form.Control\r\n              readOnly\r\n              {...register(\"empleador.nombre\")}\r\n            />\r\n        </Form.Group>\r\n      </Form.Row>\r\n      <Button type=\"subimt\">\r\n        {guardar.isLoading ? <Spinner className=\"mr-2\" animation=\"border\" size=\"sm\" /> : null}\r\n        Guardar\r\n      </Button>\r\n    </Form>\r\n    <EmpleadorChooser show={showChooser}\r\n      empleadores={buscarEmpleador.data?.data.records || []}\r\n      onSelect={(empleador)=>{\r\n        setEmpleador(empleador)\r\n        setShowChooser(false)\r\n      }}\r\n      onHide={()=>setShowChooser(false)}\r\n    />\r\n  </div>\r\n}","import { apiClient, PaginatedResponse, Page } from \"../../../../commons/services\"\r\nimport { keysToUnderscore } from \"../../../../commons/utils\"\r\n\r\nexport type SolicitudesAtencionExternaFilter = {\r\n  desde?: string\r\n  hasta?: string\r\n  numeroPatronal?: string\r\n  matricula?: string\r\n  medicoId?: number\r\n  proveedorId?: string\r\n  regionalId?: number\r\n}\r\n\r\nexport type SolicitudAtencionExterna = {\r\n  id: number\r\n  numero: string\r\n  fecha: string\r\n  prestacion: string,\r\n  regionalId: number\r\n  paciente: {\r\n    matricula: string\r\n    nombreCompleto: string\r\n  }\r\n  titular: {\r\n    matricula: string\r\n    nombreCompleto: string\r\n  } | null\r\n  medico: {\r\n    id: number\r\n    nombreCompleto?: string\r\n    especialidad: string\r\n  },\r\n  proveedor: {\r\n    id: string\r\n    razonSocial: string\r\n  } & ({ \r\n    tipo: 1\r\n    especialidad: string\r\n  } | {\r\n    tipo:2\r\n  }),\r\n  regional: {\r\n    id: number\r\n    nombre: string\r\n  }\r\n  urlDm11: string\r\n}\r\n\r\nexport const SolicitudesAtencionExternaService = {\r\n  buscar: (filter: SolicitudesAtencionExternaFilter, page: Page)=>{\r\n    return apiClient.get<PaginatedResponse<SolicitudAtencionExterna>>(\"solicitudes-atencion-externa\", {\r\n      params: keysToUnderscore({filter, page})\r\n    })\r\n  },\r\n  generarDm11: (solicitud_id: number) => {\r\n    return apiClient.put<{url: string}>(`solicitudes-atencion-externa/${solicitud_id}/generar-dm11`)\r\n  },\r\n  registrar: (regional_id: number, paciente_id: string, medico_id: number, proveedor_id: string, prestacion: string) => {\r\n    return apiClient.post(\"solicitudes-atencion-externa\", {\r\n      regional_id,\r\n      paciente_id,\r\n      medico_id,\r\n      proveedor_id,\r\n      prestacion\r\n    })\r\n  }\r\n}","import { apiClient, PaginatedResponse, Page } from \"../../../../commons/services\"\r\nimport { keysToUnderscore } from \"../../../../commons/utils\"\r\n\r\nexport type Medico = {\r\n  id: number\r\n  ci: {\r\n    raiz: number\r\n    complemento: string | null\r\n    texto?: string\r\n  },\r\n  apellidoPaterno: string\r\n  apellidoMaterno: string\r\n  nombre: string\r\n  nombreCompleto?: string\r\n  especialidad: string\r\n  estado: number\r\n  regionalId: number\r\n  regional?: {\r\n    id: number\r\n    nombre: string\r\n  }\r\n}\r\n\r\nexport type MedicoFilter = {\r\n  ci?: {\r\n    raiz: number,\r\n    complemento?: string\r\n  }\r\n  nombre?: string,\r\n  especialidad?: string\r\n  regionalId?: number\r\n  estado?: number\r\n  _busqueda?: string\r\n}\r\n\r\nexport const MedicosService = {\r\n  buscar: (page: Page, filter?: MedicoFilter) => {\r\n    return apiClient.get<PaginatedResponse<Medico>>(\"medicos\", {\r\n      params: keysToUnderscore({\r\n        filter,\r\n        page\r\n      })\r\n    })\r\n  },\r\n  load: (id: number) => {\r\n    return apiClient.get<Medico>(`medicos/${id!}`);\r\n  },\r\n  registrar: (medico: Omit<Medico, \"id\" | \"estado\">) => {\r\n    return apiClient.post<Medico>(\"medicos\", keysToUnderscore(medico))\r\n  },\r\n  actualizar: (medico: Omit<Medico, \"estado\">) => {\r\n    return apiClient.put<Medico>(`medicos/${medico.id}`, keysToUnderscore(medico))\r\n  },\r\n  cambiarEstado: (id: number, estado: number) => {\r\n    return apiClient.put(`medicos/${id}/actualizar-estado`, {\r\n      estado\r\n    })\r\n  }\r\n}","import { MedicoPolicy } from \"./MedicoPolicy\";\r\n\r\nexport const medicoPolicy = new MedicoPolicy()","import { User } from \"../../../../commons/auth\";\r\nimport * as Permisos from \"./Permisos\"\r\n\r\nexport class MedicoPolicy {\r\n  \r\n  index = (user: User) => {\r\n    return this.view(user) || this.register(user)\r\n  }  \r\n\r\n  view = (user: User, context?: {\r\n    regionalId: number\r\n  }) => { \r\n    const byRegionalOnly = this.viewByRegionalOnly(user, context)\r\n    if(byRegionalOnly !== undefined) return byRegionalOnly\r\n    if(user?.can(Permisos.VER_MEDICOS)) return true\r\n  }\r\n\r\n  viewByRegionalOnly = (user: User, context?: {\r\n    regionalId: number\r\n  }) => {\r\n    if(user?.can(Permisos.VER_MEDICOS_REGIONAL)) return !context?.regionalId || user.regionalId == context.regionalId\r\n  }\r\n\r\n  register = (user: User, context?: {\r\n    regionalId: number\r\n  }) => {\r\n    const byRegionalOnly = this.registerByRegionalOnly(user, context)\r\n    if(byRegionalOnly !== undefined) return byRegionalOnly\r\n    if(user?.can(Permisos.REGISTRAR_MEDICOS)) return true\r\n  }\r\n\r\n  registerByRegionalOnly = (user: User, context?: {\r\n    regionalId: number\r\n  }) => {\r\n    if(user?.can(Permisos.REGISTRAR_MEDICOS_REGIONAL)) return !context?.regionalId || user.regionalId == context.regionalId\r\n  }\r\n\r\n  edit = (user: User, context?: {\r\n    regionalId: number\r\n  }) => {\r\n    const byRegionalOnly = this.editByRegionalOnly(user, context)\r\n    if(byRegionalOnly !== undefined) return byRegionalOnly\r\n    if(user?.can(Permisos.EDITAR_MEDICOS)) return true\r\n  }\r\n\r\n  editByRegionalOnly = (user: User, context?: {\r\n    regionalId: number\r\n  }) => {\r\n    if(user?.can(Permisos.EDITAR_MEDICOS_REGIONAL)) return !context?.regionalId || user.regionalId == context.regionalId\r\n  }\r\n\r\n  updateStatus = (user: User, context?: {\r\n    regionalId: number\r\n  }) => {\r\n    const byRegionalOnly = this.updateStatusByRegionalOnly(user, context)\r\n    if(byRegionalOnly !== undefined) return byRegionalOnly\r\n    if(user?.can(Permisos.ACTUALIZAR_ESTADO_MEDICO)) return true\r\n  }\r\n\r\n  updateStatusByRegionalOnly = (user: User, context?: {\r\n    regionalId: number\r\n  }) => {\r\n    if(user?.can(Permisos.ACTUALIZAR_ESTADO_MEDICO_REGIONAL)) return !context?.regionalId || user.regionalId == context.regionalId\r\n  }\r\n}","/**\r\n * Medicos\r\n */\r\n export const VER_MEDICOS = \"Ver médicos\";\r\n export const VER_MEDICOS_REGIONAL = \"Ver médicos (regional)\";\r\n export const REGISTRAR_MEDICOS = \"Registrar médicos\";\r\n export const REGISTRAR_MEDICOS_REGIONAL = \"Registrar médicos (regional)\";\r\n export const EDITAR_MEDICOS = \"Editar médicos\";\r\n export const EDITAR_MEDICOS_REGIONAL = \"Editar médicos (regional)\";\r\n export const ACTUALIZAR_ESTADO_MEDICO = \"Actualizar el estado de los médicos\";\r\n export const ACTUALIZAR_ESTADO_MEDICO_REGIONAL = \"Actualizar el estado de los médicos (regional)\";","import { Button, Col, InputGroup, Form } from \"react-bootstrap\"\r\nimport { useForm, Controller } from \"react-hook-form\"\r\nimport { useUser } from \"../../../../commons/auth\"\r\nimport { Regional, RegionalesTypeahead } from \"../../../../commons/components\"\r\nimport { MedicoFilter as Filter } from \"../services\"\r\nimport { medicoPolicy } from \"../policies\"\r\nimport * as yup from \"yup\"\r\nimport { yupResolver } from \"@hookform/resolvers/yup\"\r\n\r\ntype Inputs = {\r\n  numCi?: string\r\n  compCi?: string\r\n  nombre?: string\r\n  especialidad?: string\r\n  regional: Regional[]\r\n  estado?: 1 | 2 | \"\"\r\n}\r\n\r\ntype Props = {\r\n  onFilter: (filter: Filter) => void\r\n}\r\n\r\nconst schema = yup.object().shape({\r\n  numCi: yup.number().nonEmpty().nullable().when(\"compCi\", {\r\n    is: true,\r\n    then: (schema) => schema.required(),\r\n    otherwise: (schema) => schema.optional()\r\n  }),\r\n  compCi: yup.string().nonEmpty().uppercase().optional(),\r\n  nombre: yup.string().nonEmpty().uppercase().optional(),\r\n  especialidad: yup.string().nonEmpty().uppercase().optional(),\r\n  estado: yup.number().nonEmpty().optional()\r\n})\r\n\r\nexport const MedicosFilterForm = (props: Props) => {\r\n  const {\r\n    control,\r\n    formState,\r\n    handleSubmit,\r\n    register,\r\n    reset\r\n  } = useForm<Inputs>({\r\n    resolver: yupResolver(schema),\r\n    defaultValues: {\r\n      regional: [],\r\n      estado: \"\"\r\n    }\r\n  })\r\n\r\n  const user = useUser()\r\n\r\n  if(!user) return null\r\n  \r\n  return <Form onSubmit={handleSubmit((data) => {\r\n    const filter: Filter = {}\r\n    if(data.numCi) {\r\n      filter.ci = {\r\n        raiz: parseInt(data.numCi)\r\n      }\r\n      if(data.compCi) filter.ci!.complemento = data.compCi\r\n    }\r\n    if(data.nombre) filter.nombre = data.nombre\r\n    if(data.especialidad) filter.especialidad = data.especialidad\r\n    if(data.regional.length) filter.regionalId = data.regional[0].id\r\n    if(data.estado) filter.estado = data.estado\r\n    props.onFilter(filter)\r\n  })}>\r\n    <Form.Row>\r\n      <Form.Group as={Col} xs={12} md={5} lg={4}>\r\n        <fieldset className=\"border rounded\" style={{padding: 5, paddingTop: 0, marginBottom: -6}}>\r\n          <Form.Label as=\"legend\" style={{width: \"auto\", fontSize:\"1rem\"}}>Carnet de identidad</Form.Label>\r\n          <Form.Row>\r\n            <Col xs={9}>\r\n              <Form.Control\r\n                aria-label=\"Número raiz\"\r\n                className=\"text-uppercase\"\r\n                isInvalid={!!formState.errors.numCi}\r\n                {...register(\"numCi\")}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">{formState.errors.numCi?.message}</Form.Control.Feedback>\r\n            </Col>\r\n            <Col xs={3}>\r\n              <Form.Control\r\n                aria-label=\"Número complemento\"\r\n                className=\"text-uppercase\"\r\n                {...register(\"compCi\")}\r\n              />\r\n            </Col>\r\n          </Form.Row>\r\n        </fieldset>\r\n      </Form.Group>\r\n      <Form.Group as={Col} xs={12} md={7} lg={8}>\r\n        <Form.Label>Nombre</Form.Label>\r\n        <Form.Control\r\n          className=\"text-uppercase\"\r\n          {...register(\"nombre\")}\r\n        />\r\n      </Form.Group>\r\n    </Form.Row>\r\n    <Form.Row>\r\n      <Form.Group as={Col} lg={4} sm={6}>\r\n        <Form.Label>Especialidad</Form.Label>\r\n        <Form.Control\r\n          className=\"text-uppercase\"\r\n          {...register(\"especialidad\")}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group as={Col} lg={4} sm={6}>\r\n        <Form.Label>Regional</Form.Label>\r\n        <Controller\r\n          control={control}\r\n          name=\"regional\"\r\n          render={({field: {ref, value, ...field}, fieldState})=>{\r\n            return <RegionalesTypeahead\r\n              className=\"text-uppercase\"\r\n              id=\"medico-filter-regional\"\r\n              selected={medicoPolicy.viewByRegionalOnly(user) ? [user.regional as Regional] : value}\r\n              {...field}\r\n            />\r\n          }}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group as={Col} lg={4}>\r\n        <fieldset className=\"border rounded\" style={{padding: 5, paddingTop: 0, marginBottom: -6}}>\r\n          <Form.Label as=\"legend\" style={{width: \"auto\", fontSize:\"1rem\"}}>Estado</Form.Label>\r\n          <Controller\r\n            control={control}\r\n            name=\"estado\"\r\n            render={({field: {value, ...field}})=>{\r\n              console.log(value)\r\n              return <Form.Row>\r\n                <Col>\r\n                  <Form.Check\r\n                    style={{\r\n                      height: \"calc(1.5em + 0.75rem + 2px)\",\r\n                      paddingTop: \"0.375rem\",\r\n                      paddingBottom: \"0.375rem\"\r\n                    }}\r\n                    type=\"radio\"\r\n                    label=\"Activos\"\r\n                    value={1}\r\n                    checked={value == 1}\r\n                    {...field}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Form.Check\r\n                    style={{\r\n                      height: \"calc(1.5em + 0.75rem + 2px)\",\r\n                      paddingTop: \"0.375rem\",\r\n                      paddingBottom: \"0.375rem\"\r\n                    }}\r\n                    type=\"radio\"\r\n                    label=\"De baja\"\r\n                    value={2}\r\n                    checked={value == 2}\r\n                    {...field}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Form.Check\r\n                    style={{\r\n                      height: \"calc(1.5em + 0.75rem + 2px)\",\r\n                      paddingTop: \"0.375rem\",\r\n                      paddingBottom: \"0.375rem\"\r\n                    }}\r\n                    type=\"radio\"\r\n                    label=\"Ambos\"\r\n                    value=\"\"\r\n                    checked={value === \"\"}\r\n                    {...field}\r\n                  />\r\n                </Col>\r\n              </Form.Row>\r\n            }}\r\n          />\r\n        </fieldset>\r\n      </Form.Group>\r\n    </Form.Row>\r\n\r\n    <Form.Row>\r\n      <Col xs=\"auto\">\r\n        <Button type=\"submit\">Aplicar</Button>\r\n      </Col>\r\n      <Col xs=\"auto\">\r\n        <Button variant=\"secondary\" onClick={()=>reset()}>Limpiar</Button>\r\n      </Col>\r\n    </Form.Row>\r\n  </Form>\r\n}","import { useEffect } from \"react\"\r\nimport { Dropdown } from \"react-bootstrap\"\r\nimport { QueryKey, useMutation, useQueryClient } from \"react-query\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { VerticalEllipsisDropdownToggle } from \"../../../../commons/components\"\r\nimport { useModal } from \"../../../../commons/reusable-modal\"\r\nimport { ProtectedContent } from \"../../../../commons/auth/components\"\r\nimport { Medico, MedicosService } from \"../services\"\r\nimport { medicoPolicy } from \"../policies\"\r\n\r\ntype Props = {\r\n  medico: Medico,\r\n  queryKey: QueryKey\r\n}\r\nexport const RowOptions = ({medico, queryKey}: Props) => {\r\n\r\n  const modal = useModal(\"queryLoader\")\r\n\r\n  const queryClient = useQueryClient()\r\n\r\n  const cambiarEstado = useMutation(()=>{\r\n    return MedicosService.cambiarEstado(medico.id, medico.estado == 1 ? 2 : 1)\r\n  }, {\r\n    onSuccess: ()=>{\r\n      modal.close()\r\n      queryClient.invalidateQueries(\"medicos.buscar\", { inactive: true })\r\n      queryClient.setQueryData(queryKey, (oldData: any) => {\r\n        return {\r\n          ...oldData,\r\n          data: {\r\n            ...oldData.data,\r\n            records: oldData.data.records.map((i: any)=>{\r\n              return i == medico ? {\r\n                ...i,\r\n                estado: medico.estado == 1 ? 2 : 1,\r\n                estadoText: medico.estado == 1 ? \"De baja\" : \"Activo\"\r\n              } : i\r\n            })\r\n          }\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n  useEffect(()=>{\r\n    if(cambiarEstado.status == \"loading\"){\r\n      modal.open({\r\n        state: \"loading\"\r\n      })\r\n    }\r\n    else if(cambiarEstado.status == \"error\"){\r\n      modal.open({\r\n        state: \"error\",\r\n        error: cambiarEstado.error\r\n      })\r\n    }\r\n  }, [cambiarEstado.status])\r\n\r\n  return <Dropdown style={{position: \"initial\"}}>\r\n    <Dropdown.Toggle as={VerticalEllipsisDropdownToggle}\r\n      variant=\"link\" id={`dropdown-medicos-${medico.id}`}\r\n    />\r\n    \r\n    <Dropdown.Menu>\r\n      <ProtectedContent\r\n        authorize={(user) => medicoPolicy.view(user, {regionalId: medico.regionalId})}\r\n      >\r\n        <Dropdown.Item as={Link} to={{\r\n          pathname: `/clinica/medicos/${medico.id}`,\r\n          state: {\r\n            medico\r\n          }\r\n        }} ><span className=\"align-middle\">Ver</span></Dropdown.Item>\r\n      </ProtectedContent>\r\n      <ProtectedContent\r\n        authorize={(user)=>medicoPolicy.edit(user, {regionalId: medico.regionalId})}\r\n      >\r\n        <Dropdown.Item as={Link} to={{\r\n          pathname: `/clinica/medicos/${medico.id}/editar`,\r\n          state: {\r\n            medico\r\n          }\r\n        }} ><span className=\"align-middle\">Editar</span></Dropdown.Item>\r\n      </ProtectedContent>\r\n      <ProtectedContent\r\n        authorize={(user)=>medicoPolicy.updateStatus(user, {regionalId: medico.regionalId})}\r\n      >\r\n        <Dropdown.Item className=\"text-danger\" href=\"#\" onClick={() => {\r\n          // if (window.confirm(\"¿Está seguro?\")) {\r\n            cambiarEstado.mutate()\r\n          // }\r\n        }}>{medico.estado == 1 ? \"Baja\" : \"Alta\"}</Dropdown.Item>\r\n      </ProtectedContent>\r\n    </Dropdown.Menu>\r\n  </Dropdown>  \r\n}","import { AxiosPromise } from \"axios\"\r\nimport { useMemo, useRef, useState } from \"react\"\r\nimport { Breadcrumb, Button } from \"react-bootstrap\"\r\nimport { FaPlus } from \"react-icons/fa\"\r\nimport { useQuery } from \"react-query\"\r\nimport { Link, useLocation } from \"react-router-dom\"\r\nimport { useUser } from \"../../../../commons/auth\"\r\nimport { PaginatedResponse } from \"../../../../commons/services\"\r\nimport { superUserPolicyEnhancer } from \"../../../../commons/auth/utils\"\r\nimport { Medico, MedicosService, MedicoFilter as Filter } from \"../services\"\r\nimport { medicoPolicy } from \"../policies\"\r\nimport { MedicosFilterForm } from \"./MedicosFilterForm\"\r\nimport { RowOptions } from \"./RowOptions\"\r\nimport Skeleton from \"react-loading-skeleton\"\r\nimport 'react-loading-skeleton/dist/skeleton.css'\r\nimport { IndexTemplate } from \"../../../../commons/components/IndexTemplate\"\r\n\r\nexport const MedicosIndex = () => {\r\n  const {pathname: path} = useLocation()\r\n  const [page, setPage] = useState({\r\n    current: 1,\r\n    size: 10\r\n  })\r\n\r\n  const user = useUser();\r\n  \r\n  const [filter, setFilter] = useState<Filter>(() => {\r\n    const defaultFilter: Filter = {}\r\n    if(medicoPolicy.viewByRegionalOnly(user)){\r\n      defaultFilter.regionalId = user!.regionalId;\r\n    }\r\n    return defaultFilter\r\n  })\r\n\r\n  const queryKey = [\"medicos\", \"buscar\", filter, page];\r\n\r\n  const buscar = useQuery(queryKey, () => {\r\n    return MedicosService.buscar(page, filter) as AxiosPromise<PaginatedResponse<Medico>>\r\n  }, {\r\n    enabled: !!superUserPolicyEnhancer(medicoPolicy.view)(user),\r\n    refetchOnWindowFocus: false,\r\n    refetchOnReconnect: false\r\n  })\r\n\r\n  const totalRef = useRef(-1)\r\n\r\n  if(buscar.data) {\r\n    totalRef.current = buscar.data.data.meta.total\r\n  }\r\n\r\n  const loader = useMemo(()=>{\r\n    const rows = []\r\n    for(let i = 0; i < page.size; i++){\r\n      rows.push(<tr key={i}>\r\n        <th scope=\"row\">\r\n          {(page.current - 1)*page.size  + i + 1}\r\n        </th>\r\n        <td>\r\n          <Skeleton />\r\n        </td>\r\n        <td>\r\n          <Skeleton />\r\n        </td>\r\n        <td>\r\n          <Skeleton />\r\n        </td>\r\n        <td>\r\n          <Skeleton />\r\n        </td>\r\n        <td>\r\n          <Skeleton />\r\n        </td>\r\n        <td>\r\n        </td>\r\n      </tr>)\r\n    }\r\n    return rows\r\n  }, [page.size])\r\n\r\n  return <div className=\"px-1\">\r\n    <Breadcrumb>\r\n      <Breadcrumb.Item active>Médicos</Breadcrumb.Item>\r\n    </Breadcrumb>\r\n    <IndexTemplate\r\n      policy={medicoPolicy}\r\n      page={page}\r\n      onPageChange={setPage}\r\n      total={totalRef.current}\r\n      onRefetch={()=>{\r\n        buscar.remove()\r\n        buscar.refetch({throwOnError: true})\r\n      }}\r\n      isLoading={buscar.isFetching}\r\n      hasError={buscar.isError}\r\n      data={buscar.data?.data.records}\r\n      renderData={(medico, index) => {\r\n        return <tr key={medico.id}>\r\n          <th scope=\"row\">\r\n            {(page.current - 1)*page.size  + index + 1}\r\n          </th>\r\n          <td>\r\n            {medico.ci.texto}\r\n          </td>\r\n          <td>\r\n            {medico.nombreCompleto}\r\n          </td>\r\n          <td>\r\n            {medico.especialidad}\r\n          </td>\r\n          <td>\r\n            {medico.regional!.nombre}\r\n          </td>\r\n          <td>\r\n            {medico.estado == 1 ? \"Activo\" : medico.estado == 2 ? \"De baja\" : \"\"}\r\n          </td>\r\n          <td style={{textTransform: \"none\"}}>\r\n            <RowOptions queryKey={queryKey} medico={medico} />\r\n          </td>\r\n        </tr>\r\n      }}\r\n      renderDataHeaders={()=>{\r\n        return <tr>\r\n          <th style={{ width: 1 }}>#</th>\r\n          <th>Carnet de identidad</th>\r\n          <th style={{ minWidth: 250}}>Nombre</th>\r\n          <th>Especialidad</th>\r\n          <th>Regional</th>\r\n          <th>Estado</th>\r\n          <th style={{ width: 1 }}></th>\r\n        </tr>\r\n      }}\r\n      renderLoader={()=>{\r\n        return <>{loader}</>\r\n      }}\r\n      renderFilterForm={()=>{\r\n        return <MedicosFilterForm onFilter={(filter) => {\r\n          buscar.remove()\r\n          setFilter(filter)\r\n          setPage(page => ({ ...page, current: 1 }))\r\n        }} />\r\n      }}\r\n      renderCreateButton={()=>{\r\n        return  <Button\r\n          as={Link}\r\n          to={`${path}/registrar`}\r\n          className=\"d-flex align-items-center\">\r\n            <FaPlus className=\"mr-1\" /><span>Nuevo</span>\r\n        </Button>\r\n      }}\r\n    />\r\n  </div>\r\n}","import { useEffect } from 'react'\r\nimport { Alert, Breadcrumb, Table } from 'react-bootstrap'\r\nimport Skeleton from \"react-loading-skeleton\"\r\nimport { Medico, MedicosService } from '../services'\r\nimport { useQuery, useMutation } from 'react-query'\r\nimport { Link, useLocation, useParams } from 'react-router-dom'\r\nimport { useUser } from \"../../../../commons/auth\"\r\nimport { useModal } from \"../../../../commons/reusable-modal\"\r\nimport { medicoPolicy } from \"../policies\"\r\nimport 'react-loading-skeleton/dist/skeleton.css'\r\n\r\nexport const MedicoView = () => {\r\n  const { pathname, state: locationState } = useLocation<{\r\n    medico?: Medico\r\n  }>()\r\n\r\n  const { id } = useParams<{\r\n    id: string\r\n  }>()\r\n\r\n  const user = useUser()\r\n\r\n  const cargar = useQuery([\"cargar\", id], () => {\r\n    return MedicosService.load(parseInt(id))\r\n  }, {\r\n    initialData: locationState?.medico && { status: 200, statusText: \"OK\", headers: {}, config: {}, data: locationState?.medico },\r\n    refetchOnWindowFocus: false,\r\n    refetchOnReconnect: false\r\n  })\r\n\r\n  const medico = cargar.data?.data\r\n\r\n  const renderAlert = () => {\r\n    if (cargar.error) {\r\n      const { response } = cargar.error as any\r\n      return <Alert variant=\"danger\">\r\n        {\r\n          !response ? \"No fue posible realizar la solicitud, verifique si tiene conexion a internet\" :\r\n            response.status == 404 ? \"El proveedor que busca no existe\" :\r\n              \"Ocurrio un error inesperado\"\r\n        }\r\n      </Alert>\r\n    }\r\n    return null\r\n  }\r\n\r\n  return <div>\r\n    <Breadcrumb>\r\n      <Breadcrumb.Item linkAs={Link} linkProps={{ to: \"/clinica/medicos\" }}>Médicos</Breadcrumb.Item>\r\n      <Breadcrumb.Item active>{id}</Breadcrumb.Item>\r\n      <Breadcrumb.Item active>Detalles</Breadcrumb.Item>\r\n    </Breadcrumb>\r\n    {renderAlert()}\r\n    <Table>\r\n      <tbody>\r\n        <tr>\r\n          <th style={{ width: 1 }}>Carnet de identidad</th>\r\n          <td>: {medico ? medico.ci.texto : <Skeleton />}</td>\r\n        </tr>\r\n        <tr>\r\n          <th style={{ width: 1 }}>Nombre</th>\r\n          <td>: {medico ? medico.nombreCompleto : <Skeleton />}</td>\r\n        </tr>\r\n        <tr>\r\n          <th style={{ width: 1 }}>Regional</th>\r\n          <td>: {medico ? medico.regional!.nombre : <Skeleton />}</td>\r\n        </tr>\r\n        <tr>\r\n          <th style={{ width: 1 }}>Especialidad</th>\r\n          <td>: {medico ? medico.especialidad : <Skeleton />}</td>\r\n        </tr>\r\n      </tbody>\r\n    </Table>\r\n  </div>\r\n}","\r\nimport { useEffect } from 'react'\r\nimport { AxiosError } from 'axios'\r\nimport { Alert, Breadcrumb, Button, Col, Form, Spinner } from 'react-bootstrap'\r\nimport Skeleton from 'react-loading-skeleton'\r\nimport 'react-loading-skeleton/dist/skeleton.css'\r\nimport { Link, useHistory, useParams } from \"react-router-dom\"\r\nimport { Controller, useForm } from 'react-hook-form'\r\nimport { useMutation, useQuery, useQueryClient } from 'react-query'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as yup from \"yup\"\r\nimport { Medico, MedicosService } from '../services'\r\nimport { Regional, RegionalesTypeahead } from '../../../../commons/components'\r\nimport { medicoPolicy } from '../policies'\r\nimport { useUser } from '../../../../commons/auth'\r\n\r\ntype Inputs = {\r\n  initialized: boolean\r\n  ci: string\r\n  ciComplemento: string | null\r\n  apellidoPaterno: string\r\n  apellidoMaterno: string\r\n  nombres: string\r\n  especialidad: string\r\n  regional: Regional[]\r\n}\r\n\r\nconst schema = yup.object().shape({\r\n  ci: yup.number().label(\"número de carnet\")\r\n    .nonEmpty()\r\n    .typeError(\"El ${path} no es un numero valido\")\r\n    .required(),\r\n  ciComplemento: yup.string().label(\"complemento del carnet\").nonEmpty().uppercase().default(null).nullable()\r\n    .notRequired()\r\n    .matches(/^[1-9][A-Z]$/, \"Complemento invalido.\"),\r\n    // .matches(/(?=.*[A-Z])(?=.*[0-9])/, \"El complemento del carnet esta conformado por un numero y una letra. (No confundir con el expedido)\"),\r\n  apellidoPaterno: yup.string().label(\"apellido paterno\").nonEmpty().uppercase().default(null).nullable()\r\n    .when(\"apellidoMaterno\", {\r\n      is: (apellidoMaterno: string) => !apellidoMaterno,\r\n      then: (schema) => schema.required(\"Debe proporcionar al menos un apellido\").max(25)\r\n    }),\r\n  apellidoMaterno: yup.string().trim().label(\"apellido materno\").nonEmpty().uppercase().default(null).nullable()\r\n  .when(\"apellidoPaterno\", {\r\n    is: (apellidoPaterno: string) => !apellidoPaterno,\r\n    then: (schema) => schema.required(\"Debe proporcionar al menos un apellido\").max(25)\r\n  }),\r\n  nombres: yup.string().label(\"nombres\").nonEmpty().uppercase().trim().required(),\r\n  especialidad: yup.string().nonEmpty().uppercase().required(\"Debe indicar la especialidad del médico\"),\r\n  regional: yup.array().length(1, \"Debe indicar una regional\")\r\n}, [[\"apellidoMaterno\", \"apellidoPaterno\"]])\r\n\r\nexport const MedicoForm = ()=>{\r\n  const {id} = useParams<{\r\n    id?: string\r\n  }>()\r\n\r\n  const history = useHistory<{\r\n    medico?: Medico\r\n  }>()\r\n\r\n  const user = useUser()\r\n\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    clearErrors,\r\n    setError,\r\n    setValue,\r\n    reset,\r\n    watch,\r\n    control,\r\n    formState,\r\n  } = useForm<Inputs>({\r\n    resolver: yupResolver(schema),\r\n    defaultValues: {\r\n      initialized: !id,\r\n      regional: []\r\n    }\r\n  })\r\n\r\n  const initialized = watch(\"initialized\")\r\n\r\n  const queryClient = useQueryClient()\r\n  \r\n  const cargar = useQuery([\"medicos\", \"cargar\", id], ()=>{\r\n    return MedicosService.load(parseInt(id as string))\r\n  }, {\r\n    enabled: !!id && !initialized,\r\n    initialData: history.location.state?.medico && {status: 200, statusText: \"OK\", data: history.location.state.medico, headers: {}, config: {}},\r\n    refetchOnMount: false,\r\n    refetchOnWindowFocus: false,\r\n    refetchOnReconnect: false\r\n  })\r\n\r\n  const guardar = useMutation((inputs: Inputs)=>{\r\n    return id ? MedicosService.actualizar({\r\n      id: parseInt(id),\r\n      ci: {\r\n        raiz: parseInt(inputs.ci),\r\n        complemento: inputs.ciComplemento\r\n      },\r\n      apellidoPaterno: inputs.apellidoPaterno,\r\n      apellidoMaterno: inputs.apellidoMaterno,\r\n      nombre: inputs.nombres,\r\n      especialidad: inputs.especialidad,\r\n      regionalId: inputs.regional![0].id\r\n    }) : MedicosService.registrar({\r\n      ci: {\r\n        raiz: parseInt(inputs.ci),\r\n        complemento: inputs.ciComplemento\r\n      },\r\n      apellidoPaterno: inputs.apellidoPaterno,\r\n      apellidoMaterno: inputs.apellidoMaterno,\r\n      nombre: inputs.nombres,\r\n      especialidad: inputs.especialidad,\r\n      regionalId: inputs.regional![0].id\r\n    })\r\n  }, {\r\n    onSuccess: (response)=>{\r\n      reset()\r\n      queryClient.invalidateQueries([\"medicos\", \"buscar\"])\r\n      if(id) {\r\n        queryClient.setQueryData([\"medicos\", \"cargar\", id], response)\r\n        history.push(\"/clinica/medicos\")\r\n      }\r\n    },\r\n    onError: (error) => {\r\n      if((error as AxiosError)?.response?.status == 422){\r\n        const {errors} = (error as AxiosError).response?.data\r\n        Object.keys(errors).forEach((key: any)=>{\r\n          let localKey = key\r\n          setError(localKey, {type: \"serverError\", message: errors[key]})\r\n        })\r\n      }\r\n    }\r\n  })\r\n\r\n  const medico = cargar.data?.data\r\n\r\n  useEffect(()=>{\r\n    if(medico){\r\n      setValue(\"initialized\", true)\r\n      setValue(\"ci\", String(medico.ci.raiz))\r\n      setValue(\"ciComplemento\", medico.ci.complemento)\r\n      setValue(\"apellidoPaterno\", medico.apellidoPaterno)\r\n      setValue(\"apellidoMaterno\", medico.apellidoMaterno)\r\n      setValue(\"nombres\", medico.nombre)\r\n      setValue(\"especialidad\", medico.especialidad)\r\n      setValue(\"regional\", [ medico.regional as Regional ])\r\n    }\r\n  }, [medico])\r\n\r\n  return <div>\r\n    <Breadcrumb>\r\n      <Breadcrumb.Item linkAs={Link} linkProps={{to: \"/clinica/medicos\"}}>Médicos</Breadcrumb.Item>\r\n      {id ? <Breadcrumb.Item active>{id}</Breadcrumb.Item> : null}\r\n      <Breadcrumb.Item active>{!id ? \"Registro\" : \"Actualización\"}</Breadcrumb.Item>\r\n    </Breadcrumb>\r\n      \r\n    <Form id=\"medico-form\"\r\n      onSubmit={handleSubmit((inputs)=>{\r\n        guardar.mutate(inputs)\r\n      })}\r\n    >\r\n      {guardar.status == \"error\" || guardar.status == \"success\"  ? <Alert variant={guardar.isError ? \"danger\" : \"success\"}>\r\n        {guardar.isError ? (guardar.error as AxiosError).response?.data?.message || (guardar.error as AxiosError).message : \"Guardado\"}\r\n      </Alert> : null}\r\n      <Form.Row>\r\n        <Form.Group as={Col} xs={12} sm={6} md={4}>\r\n          <fieldset className={`border${formState.errors.ci || formState.errors.ciComplemento ? \" border-danger \" : \" \"}rounded`}\r\n            style={{padding: 5, paddingTop: 0, marginBottom: -6}}>\r\n            <Form.Label as=\"legend\" style={{width: \"auto\", fontSize:\"1rem\"}}>Carnet de identidad</Form.Label>\r\n            <Form.Row>\r\n              <Col xs={8}>\r\n                {initialized ? <Form.Control\r\n                  aria-label=\"Número raiz\"\r\n                  className=\"text-uppercase\"\r\n                  isInvalid={!!formState.errors.ci}\r\n                  {...register(\"ci\")}\r\n                /> : <Skeleton />}\r\n                <Form.Control.Feedback type=\"invalid\">{formState.errors.ci?.message}</Form.Control.Feedback>\r\n              </Col>\r\n              <Col xs={4}>\r\n                {initialized ? <Form.Control\r\n                  aria-label=\"Número complemento\"\r\n                  className=\"text-uppercase\"\r\n                  isInvalid={!!formState.errors.ciComplemento}\r\n                  {...register(\"ciComplemento\")}\r\n                /> : <Skeleton />}\r\n                <Form.Control.Feedback type=\"invalid\">{formState.errors.ciComplemento?.message}</Form.Control.Feedback>\r\n              </Col>\r\n            </Form.Row>\r\n          </fieldset>\r\n        </Form.Group>\r\n      </Form.Row>\r\n      <Form.Row>\r\n        <Form.Group as={Col} md={4}>\r\n          <Form.Label>Apellido Paterno</Form.Label>\r\n          {initialized ? <Form.Control\r\n            className=\"text-uppercase\"\r\n            isInvalid={!!formState.errors.apellidoPaterno}\r\n            {...register(\"apellidoPaterno\")}\r\n          /> : <Skeleton />}\r\n          <Form.Control.Feedback type=\"invalid\">{formState.errors.apellidoPaterno?.message}</Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Form.Group as={Col} md={4}>\r\n          <Form.Label>Apellido Materno</Form.Label>\r\n          {initialized ? <Form.Control\r\n            className=\"text-uppercase\"\r\n            isInvalid={!!formState.errors.apellidoMaterno}\r\n            {...register(\"apellidoMaterno\")}\r\n          /> : <Skeleton />}\r\n          <Form.Control.Feedback type=\"invalid\">{formState.errors.apellidoMaterno?.message}</Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Form.Group as={Col} md={4}>\r\n          <Form.Label>Nombres</Form.Label>\r\n          {initialized ? <Form.Control\r\n            className=\"text-uppercase\"\r\n            isInvalid={!!formState.errors.nombres}\r\n            {...register(\"nombres\")}\r\n          /> : <Skeleton />}\r\n          <Form.Control.Feedback type=\"invalid\">{formState.errors.nombres?.message}</Form.Control.Feedback>\r\n        </Form.Group>\r\n      </Form.Row>\r\n      <Form.Row>\r\n        <Form.Group as={Col} md={4}>\r\n          <Form.Label htmlFor=\"medico-especialidad\">Especialidad</Form.Label>\r\n          {initialized ? <Form.Control\r\n            id=\"medico-especialidad\"\r\n            className=\"text-uppercase\"\r\n            isInvalid={!!formState.errors.especialidad}\r\n            {...register(\"especialidad\")}\r\n          /> : <Skeleton />}\r\n          <Form.Control.Feedback type=\"invalid\">{formState.errors.especialidad?.message}</Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Form.Group as={Col} md={4}>\r\n          <Form.Label>Regional</Form.Label>\r\n          {initialized ? <Controller\r\n            name=\"regional\"\r\n            control={control}\r\n            render={({field, fieldState})=>{\r\n              return <>\r\n                <RegionalesTypeahead\r\n                  id=\"medicos-form/regionales-typeahead\"\r\n                  className=\"text-uppercase\"\r\n                  filterBy={(regional) => {\r\n                    if(id){\r\n                      return medicoPolicy.editByRegionalOnly(user, {regionalId: regional.id}) !== false\r\n                    }\r\n                    else {\r\n                      return medicoPolicy.registerByRegionalOnly(user, {regionalId: regional.id}) !== false\r\n                    }\r\n                  }}\r\n                  feedback={fieldState.error?.message}\r\n                  isInvalid={!!fieldState.error}\r\n                  selected={field.value}\r\n                  onChange={field.onChange}\r\n                  onBlur={field.onBlur}\r\n                />\r\n              </>\r\n            }}\r\n          /> : <Skeleton />}\r\n        </Form.Group>\r\n      </Form.Row>\r\n      <Button className=\"mt-3\" type=\"submit\">\r\n          {guardar.isLoading ? <Spinner className=\"mr-2\" animation=\"border\" size=\"sm\"/> : null}\r\n          Guardar\r\n        </Button>\r\n    </Form>\r\n  </div>\r\n}","import { useEffect, useState } from \"react\"\r\nimport { Button, Form, InputGroup } from \"react-bootstrap\"\r\nimport { FaSync } from \"react-icons/fa\"\r\nimport { AsyncTypeahead, AsyncTypeaheadProps } from 'react-bootstrap-typeahead'\r\nimport { useInfiniteQuery } from 'react-query'\r\nimport { Medico, MedicoFilter, MedicosService } from \"../services\"\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css'\r\n\r\nexport type { Medico }\r\n\r\ntype Props = {\r\n  feedback?: string,\r\n  filter?: MedicoFilter\r\n  defaultOptions?: Medico[]\r\n} & Omit<AsyncTypeaheadProps<Medico>, \"isLoading\" | \"options\" | \"onSearch\">\r\n\r\nexport const MedicosTypeahead = ({isInvalid, feedback, filter, ...props}: Props) => {\r\n\r\n  const [options, setOptions] = useState<Medico[]>(props.defaultOptions || [])\r\n  const [ search, setSearch ] = useState(\"\")\r\n\r\n  filter = {\r\n    ...filter,\r\n    _busqueda: search\r\n  }\r\n\r\n  const queryKey = [\"medicos.buscar\", filter]\r\n\r\n  const buscar = useInfiniteQuery(queryKey, ({pageParam = 1})=>{\r\n    return MedicosService.buscar({\r\n      current: pageParam,\r\n      size: pageParam === 1 ? 20 : 10\r\n    }, filter)\r\n  }, {\r\n    enabled: !!search,\r\n    refetchOnReconnect: false,\r\n    refetchOnWindowFocus: false,\r\n    getNextPageParam: (lastPage, allPages) => {\r\n      let nextPage = lastPage.data.meta.nextPage \r\n      if(nextPage === 2) return 3\r\n      return nextPage\r\n    }\r\n  })\r\n\r\n  useEffect(()=>{\r\n    if(buscar.data){\r\n      const { pages } = buscar.data\r\n      setOptions(pages.flatMap((response)=>response.data.records, 1))\r\n    }\r\n  }, [buscar.data])\r\n\r\n  return <InputGroup hasValidation  className=\"position-unset\">\r\n    <AsyncTypeahead\r\n      clearButton\r\n      align=\"left\"\r\n      emptyLabel={buscar.isError ? \"\" : \"No se encontraron resultados\"}\r\n      promptText=\"Escribe un nombre o especialidad para buscar\"\r\n      searchText=\"Buscando...\"\r\n      paginationText=\"Cargar más...\"\r\n      {...props}\r\n      labelKey={medico => medico.nombreCompleto!}\r\n      className={props.className + ((buscar.isError || isInvalid) ? \" is-invalid\" : \"\")}\r\n      isInvalid={buscar.isError || isInvalid}\r\n      filterBy={()=>true}\r\n      maxResults={10}\r\n      minLength={0}\r\n      options={options}\r\n      isLoading={buscar.status == \"loading\" || buscar.isFetchingNextPage}\r\n      onSearch={(search) => {\r\n        setSearch(search)\r\n      }}\r\n      \r\n      paginate\r\n      onPaginate={()=>{\r\n        buscar.fetchNextPage()\r\n      }}\r\n      useCache={false}\r\n\r\n      renderMenuItemChildren={(medico) => {\r\n        return <div>\r\n          <div>{medico.nombreCompleto}</div>\r\n          <small className={\"text-muted\"}>{medico.especialidad}</small> \r\n        </div>\r\n      }}\r\n    />\r\n    {buscar.isError ? <InputGroup.Append>\r\n      <Button variant=\"outline-danger\" onClick={()=>buscar.refetch()}><FaSync /></Button>\r\n    </InputGroup.Append> : null}\r\n    <Form.Control.Feedback type=\"invalid\">{buscar.isError ? \"Ocurrio un error al realizar la busqueda\" : feedback}</Form.Control.Feedback>\r\n  </InputGroup>\r\n}","import { ProveedorPolicy } from \"./ProveedorPolicy\"\r\n\r\nexport const proveedorPolicy = new ProveedorPolicy()","import { User } from \"../../../../commons/auth\";\r\nimport * as Permisos from \"./Permisos\"\r\n\r\nexport class ProveedorPolicy {\r\n  \r\n  index = (user: User) => {\r\n    return this.view(user) || this.register(user)\r\n  }  \r\n\r\n  view = (user: User, context?: {\r\n    regionalId: number\r\n  }) => { \r\n    const byRegionalOnly = this.viewByRegionalOnly(user, context)\r\n    if(byRegionalOnly !== undefined) return byRegionalOnly\r\n    if(user?.can(Permisos.VER_PROVEEDORES)) return true\r\n  }\r\n\r\n  viewByRegionalOnly = (user: User, context?: {\r\n    regionalId: number\r\n  }) => {\r\n    if(user?.can(Permisos.VER_PROVEEDORES_REGIONAL)) return !context?.regionalId || user.regionalId == context.regionalId\r\n  }\r\n\r\n  register = (user: User, context?: {\r\n    regionalId: number\r\n  }) => {\r\n    const byRegionalOnly = this.registerByRegionalOnly(user, context)\r\n    if(byRegionalOnly !== undefined) return byRegionalOnly\r\n    if(user?.can(Permisos.REGISTRAR_PROVEEDORES)) return true\r\n  }\r\n\r\n  registerByRegionalOnly = (user: User, context?: {\r\n    regionalId: number\r\n  }) => {\r\n    if(user?.can(Permisos.REGISTRAR_PROVEEDORES_REGIONAL)) return !context?.regionalId || user.regionalId == context.regionalId\r\n  }\r\n\r\n  edit = (user: User, context?: {\r\n    regionalId: number\r\n  }) => {\r\n    const byRegionalOnly = this.editByRegionalOnly(user, context)\r\n    if(byRegionalOnly !== undefined) return byRegionalOnly\r\n    if(user?.can(Permisos.EDITAR_PROVEEDORES)) return true\r\n  }\r\n\r\n  editByRegionalOnly = (user: User, context?: {\r\n    regionalId: number\r\n  }) => {\r\n    if(user?.can(Permisos.EDITAR_PROVEEDORES_REGIONAL)) return !context?.regionalId || user.regionalId == context.regionalId\r\n  }\r\n\r\n  updateStatus = (user: User, context?: {\r\n    regionalId: number\r\n  }) => {\r\n    const byRegionalOnly = this.updateStatusByRegionalOnly(user, context)\r\n    if(byRegionalOnly !== undefined) return byRegionalOnly\r\n    if(user?.can(Permisos.ACTUALIZAR_ESTADO_PROVEEDOR)) return true\r\n  }\r\n\r\n  updateStatusByRegionalOnly = (user: User, context?: {\r\n    regionalId: number\r\n  }) => {\r\n    if(user?.can(Permisos.ACTUALIZAR_ESTADO_PROVEEDOR_REGIONAL)) return !context?.regionalId || user.regionalId == context.regionalId\r\n  }\r\n}","/**\r\n* Permisos sobre proveedores\r\n*/\r\nexport const VER_PROVEEDORES = \"Ver proveedores\";\r\nexport const VER_PROVEEDORES_REGIONAL = \"Ver proveedores (regional)\";\r\nexport const REGISTRAR_PROVEEDORES = \"Registrar proveedores\";\r\nexport const REGISTRAR_PROVEEDORES_REGIONAL = \"Registrar proveedores (regional)\";\r\nexport const EDITAR_PROVEEDORES = \"Editar proveedores\";\r\nexport const EDITAR_PROVEEDORES_REGIONAL = \"Editar proveedores (regional)\";\r\nexport const ACTUALIZAR_ESTADO_PROVEEDOR = \"Actualizar estado de proveedores\";\r\nexport const ACTUALIZAR_ESTADO_PROVEEDOR_REGIONAL = \"Actualizar estado de proveedores (regional)\";","import { apiClient, Page, PaginatedResponse } from \"../../../../commons/services\"\r\nimport axios, { AxiosPromise } from 'axios'\r\nimport { keysToUnderscore } from \"../../../../commons/utils\"\r\n\r\nexport type Empresa = {\r\n  id: string\r\n  tipo: 2\r\n  nit: string\r\n  nombre: string  \r\n  estado: 1 | 2\r\n  regionalId: number\r\n  regional?: {\r\n    id: number\r\n    nombre: string\r\n  }\r\n}\r\n\r\nexport type Medico = {\r\n  id: string\r\n  tipo: 1\r\n  nit: string\r\n  ci: {\r\n    raiz: number\r\n    complemento: string | null\r\n    texto?: string\r\n  }\r\n  nombre: string\r\n  apellidoPaterno: string | null\r\n  apellidoMaterno: string | null\r\n  nombreCompleto: string\r\n  especialidad: string  \r\n  estado: 1 | 2\r\n  regionalId: number\r\n  regional?: {\r\n    id: number\r\n    nombre: string\r\n  }\r\n}\r\n\r\nexport type InformacionContacto = {\r\n  razonSocial?: string\r\n  direccion: string\r\n  ubicacion: {\r\n    latitud: number\r\n    longitud: number\r\n  } | null\r\n  telefono1: number\r\n  telefono2: number | null\r\n}\r\n\r\nexport type Proveedor = (Empresa | Medico) & InformacionContacto\r\n\r\nexport type Filter = {\r\n  tipo?: number\r\n  _busqueda?: string\r\n  regionalId?: number\r\n  estado?: number\r\n}\r\n\r\n\r\nexport const ProveedoresService = {\r\n  buscar(page: Page, filter?: Filter) {\r\n    return apiClient.get<PaginatedResponse<Proveedor>>(\"proveedores\", {\r\n      params: keysToUnderscore({\r\n        filter,\r\n        page\r\n      })\r\n    })\r\n  },\r\n  cargar(id: string): AxiosPromise<Proveedor>{\r\n    return apiClient.get(`proveedores/${id}`)\r\n  },\r\n  registrar(fields: Omit<Proveedor, \"id\" | \"nombreCompleto\" | \"estado\">): AxiosPromise<Proveedor> {\r\n    return apiClient.post(\"proveedores\", keysToUnderscore(fields))\r\n  },\r\n  actualizar({id, ...fields}: Omit<Proveedor, \"nombreCompleto\" | \"estado\">): AxiosPromise<Proveedor>{\r\n    return apiClient.put(`proveedores/${id}`, keysToUnderscore(fields))\r\n  },\r\n  actualizarEstado(id: string, estado: 1 | 2): AxiosPromise<Proveedor>{\r\n    return apiClient.put(`proveedores/${id}/actualizar-estado`, keysToUnderscore({estado}))\r\n  }\r\n}","import { Button, Col, Form } from \"react-bootstrap\"\r\nimport { useForm, Controller } from \"react-hook-form\"\r\nimport { Regional, RegionalesTypeahead } from \"../../../../commons/components\"\r\nimport { useUser } from \"../../../../commons/auth/hooks\"\r\nimport { Filter } from \"../services\"\r\nimport { proveedorPolicy } from \"../policies\"\r\n\r\ntype Inputs ={\r\n  tipo: number\r\n  regional: Regional[]\r\n  estado: number\r\n}\r\n\r\ntype Props = {\r\n  onFilter: (filter: Filter) => void\r\n}\r\n\r\nexport const ProveedoresFilterForm = (props: Props)=>{\r\n\r\n  const user = useUser()\r\n\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    reset\r\n  } = useForm<Inputs>({\r\n    defaultValues: {\r\n      regional: proveedorPolicy.viewByRegionalOnly(user) ? [user!.regional] : [],\r\n      estado: 0,\r\n      tipo: 0\r\n    }\r\n  })\r\n  \r\n  return <Form onSubmit={handleSubmit((data)=>{\r\n    const filter: Filter = {}\r\n    filter.regionalId = data.regional.length && data.regional[0].id\r\n    filter.estado = data.estado\r\n    filter.tipo = data.tipo\r\n    props.onFilter(filter)\r\n  })}>\r\n    <Form.Row>\r\n      <Form.Group as={Col} md={6} lg={4}>\r\n        <Form.Label>Regional</Form.Label>\r\n        <Controller\r\n          control={control}\r\n          name=\"regional\"\r\n          render={({field: {ref, value, ...field}, fieldState})=>{\r\n            return <RegionalesTypeahead\r\n              className=\"text-uppercase\"\r\n              id=\"medico-filter-regional\"\r\n              selected={proveedorPolicy.viewByRegionalOnly(user) ? [user!.regional as Regional] : value}\r\n              filterBy={(regional) => proveedorPolicy.viewByRegionalOnly(user, {regionalId: regional.id}) !== false}\r\n              {...field}\r\n            />\r\n          }}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group as={Col} md={6} lg={4}>\r\n        <fieldset className=\"border rounded\" style={{padding: 5, paddingTop: 0, marginBottom: -6}}>\r\n          <Form.Label as=\"legend\" style={{width: \"auto\", fontSize:\"1rem\"}}>Estado</Form.Label>\r\n          <Controller\r\n            control={control}\r\n            name=\"estado\"\r\n            render={({field: {value, ...field}})=>{\r\n              return <Form.Row>\r\n                <Col>\r\n                  <Form.Check\r\n                    style={{\r\n                      height: \"calc(1.5em + 0.75rem + 2px)\",\r\n                      paddingTop: \"0.375rem\",\r\n                      paddingBottom: \"0.375rem\"\r\n                    }}\r\n                    type=\"radio\"\r\n                    label=\"Activos\"\r\n                    value={1}\r\n                    checked={value == 1}\r\n                    {...field}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Form.Check\r\n                    style={{\r\n                      height: \"calc(1.5em + 0.75rem + 2px)\",\r\n                      paddingTop: \"0.375rem\",\r\n                      paddingBottom: \"0.375rem\"\r\n                    }}\r\n                    type=\"radio\"\r\n                    label=\"Bajas\"\r\n                    value={2}\r\n                    checked={value == 2}\r\n                    {...field}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Form.Check\r\n                    style={{\r\n                      height: \"calc(1.5em + 0.75rem + 2px)\",\r\n                      paddingTop: \"0.375rem\",\r\n                      paddingBottom: \"0.375rem\"\r\n                    }}\r\n                    type=\"radio\"\r\n                    label=\"Ambos\"\r\n                    value={0}\r\n                    checked={value == 0}\r\n                    {...field}\r\n                  />\r\n                </Col>\r\n              </Form.Row>\r\n            }}\r\n          />\r\n        </fieldset>\r\n      </Form.Group>\r\n      <Form.Group as={Col} md={6} lg={4}>\r\n        <fieldset className=\"border rounded\" style={{padding: 5, paddingTop: 0, marginBottom: -6}}>\r\n          <Form.Label as=\"legend\" style={{width: \"auto\", fontSize:\"1rem\"}}>Tipo</Form.Label>\r\n          <Controller\r\n            control={control}\r\n            name=\"tipo\"\r\n            render={({field: {value, ...field}})=>{\r\n              return <Form.Row>\r\n                <Col>\r\n                  <Form.Check\r\n                    style={{\r\n                      height: \"calc(1.5em + 0.75rem + 2px)\",\r\n                      paddingTop: \"0.375rem\",\r\n                      paddingBottom: \"0.375rem\"\r\n                    }}\r\n                    type=\"radio\"\r\n                    label=\"Medicos\"\r\n                    value={1}\r\n                    checked={value == 1}\r\n                    {...field}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Form.Check\r\n                    style={{\r\n                      height: \"calc(1.5em + 0.75rem + 2px)\",\r\n                      paddingTop: \"0.375rem\",\r\n                      paddingBottom: \"0.375rem\"\r\n                    }}\r\n                    type=\"radio\"\r\n                    label=\"Empresas\"\r\n                    value={2}\r\n                    checked={value == 2}\r\n                    {...field}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Form.Check\r\n                    style={{\r\n                      height: \"calc(1.5em + 0.75rem + 2px)\",\r\n                      paddingTop: \"0.375rem\",\r\n                      paddingBottom: \"0.375rem\"\r\n                    }}\r\n                    type=\"radio\"\r\n                    label=\"Ambos\"\r\n                    value={0}\r\n                    checked={value == 0}\r\n                    {...field}\r\n                  />\r\n                </Col>\r\n              </Form.Row>\r\n            }}\r\n          />\r\n        </fieldset>\r\n      </Form.Group>\r\n    </Form.Row>\r\n    <Form.Row>\r\n      <Col className=\"ml-auto\" xs=\"auto\">\r\n        <Button type=\"submit\">Aplicar</Button>\r\n      </Col>\r\n      <Col xs=\"auto\">\r\n        <Button variant=\"secondary\" onClick={()=>reset({\r\n          regional: proveedorPolicy.viewByRegionalOnly(user) ? [user!.regional] : [],\r\n          estado: 0,\r\n          tipo: 0\r\n        })}>Limpiar</Button>\r\n      </Col>\r\n    </Form.Row>\r\n  </Form>\r\n}","import { useEffect } from \"react\"\r\nimport { Dropdown } from \"react-bootstrap\"\r\n// import { FaEdit } from \"react-icons/fa\"\r\nimport { useMutation, useQueryClient, QueryKey } from \"react-query\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { VerticalEllipsisDropdownToggle } from \"../../../../commons/components\"\r\nimport { useModal } from \"../../../../commons/reusable-modal\"\r\nimport { ProtectedContent } from \"../../../../commons/auth/components\"\r\nimport { Proveedor, ProveedoresService } from \"../services\"\r\nimport { proveedorPolicy } from \"../policies\"\r\n\r\ntype Props = {\r\n  proveedor: Proveedor\r\n  queryKey: QueryKey\r\n}\r\nexport const RowOptions = ({proveedor, queryKey}: Props) => {\r\n\r\n  \r\n  const modal = useModal<{\r\n    state: \"loading\" | \"error\"\r\n    error?: Error\r\n  }>(\"queryLoader\")\r\n\r\n  const queryClient = useQueryClient()\r\n\r\n  const actualizarEstado = useMutation((estado: 1 | 2)=>{\r\n    return ProveedoresService.actualizarEstado(proveedor.id, estado)\r\n  }, {\r\n    onSuccess: ()=>{\r\n      modal.close()\r\n      queryClient.setQueryData(queryKey, (oldData: any) => {\r\n        return {\r\n          ...oldData,\r\n          data: {\r\n            ...oldData.data,\r\n            records: oldData.data.records.map((p: any)=>{\r\n              return p.id == proveedor.id ? {\r\n                ...p,\r\n                estado: p.estado == 1 ? 2 : 1\r\n              } : p\r\n            })\r\n          }\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n  useEffect(()=>{\r\n    if(actualizarEstado.status == \"loading\"){\r\n      modal.open({\r\n        state: \"loading\"\r\n      })\r\n    }\r\n    else if(actualizarEstado.status == \"error\"){\r\n      modal.open({\r\n        state: \"error\",\r\n        error: actualizarEstado.error as any\r\n      })\r\n    }\r\n  }, [actualizarEstado.status])\r\n\r\n  return <Dropdown style={{position: \"initial\"}} alignRight>\r\n    <Dropdown.Toggle as={VerticalEllipsisDropdownToggle}\r\n      variant=\"link\" id={`dropdown-proveedores-${proveedor.id}`}\r\n    />\r\n\r\n    <Dropdown.Menu>\r\n      <ProtectedContent\r\n        authorize={(user)=>proveedorPolicy.view(user, {regionalId: proveedor.regionalId})}\r\n      >\r\n        <Dropdown.Item as={Link} to={{\r\n          pathname: `/clinica/proveedores/${proveedor.id}`,\r\n          state: {\r\n            proveedor\r\n          }\r\n        }} ><span className=\"align-middle\">Ver</span></Dropdown.Item>\r\n      </ProtectedContent>\r\n      <ProtectedContent\r\n        authorize={(user)=>proveedorPolicy.edit(user, {regionalId: proveedor.regionalId})}\r\n      >\r\n        <Dropdown.Item as={Link} to={{\r\n          pathname: `/clinica/proveedores/${proveedor.id}/editar`,\r\n          state: {\r\n            proveedor\r\n          }\r\n        }} ><span className=\"align-middle\">Editar</span></Dropdown.Item>\r\n      </ProtectedContent>\r\n      <ProtectedContent\r\n        authorize={(login) => proveedorPolicy.updateStatus(login, {regionalId: proveedor.regionalId})}\r\n      >\r\n        <Dropdown.Item className=\"text-danger\" onClick={()=>{\r\n            actualizarEstado.mutate(proveedor.estado == 1 ? 2 : 1)\r\n        }}>\r\n          {proveedor.estado == 1 ? \"Baja\" : \"Habilitar\"}\r\n        </Dropdown.Item>\r\n      </ProtectedContent>\r\n\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n}","import { useMemo, useRef, useState } from \"react\"\r\nimport { Button, Breadcrumb } from \"react-bootstrap\"\r\nimport Skeleton from \"react-loading-skeleton\"\r\nimport { FaPlus } from \"react-icons/fa\"\r\nimport { useQuery } from \"react-query\"\r\nimport { Link, useLocation } from \"react-router-dom\"\r\nimport { proveedorPolicy } from \"../policies\"\r\nimport { ProveedoresService, Filter } from \"../services\"\r\nimport { ProveedoresFilterForm } from \"./ProveedoresFilterForm\"\r\nimport { RowOptions } from \"./RowOptions\"\r\nimport { useUser } from \"../../../../commons/auth\"\r\nimport { superUserPolicyEnhancer } from \"../../../../commons/auth/utils\"\r\nimport { IndexTemplate } from \"../../../../commons/components/IndexTemplate\"\r\nimport 'react-loading-skeleton/dist/skeleton.css'\r\n\r\nexport const ProveedoresIndex = () => {\r\n  const { pathname: path } = useLocation()\r\n  const [page, setPage] = useState({\r\n    current: 1,\r\n    size: 10\r\n  })\r\n\r\n  const user = useUser()\r\n\r\n  const [filter, setFilter] = useState<Filter>(() => {\r\n    const defaultFilter: Filter = {}\r\n    if(proveedorPolicy.viewByRegionalOnly(user)) {\r\n      defaultFilter.regionalId = user?.regionalId;\r\n    }\r\n    return defaultFilter\r\n  })\r\n\r\n  const queryKey = [\"proveedores\", \"buscar\", filter, page]\r\n\r\n  const buscar = useQuery(queryKey, () => {\r\n    return ProveedoresService.buscar(page, filter)\r\n  }, {\r\n    enabled: !!superUserPolicyEnhancer(proveedorPolicy.view)(user),\r\n    refetchOnWindowFocus: false,\r\n    refetchOnReconnect: false\r\n  })\r\n\r\n  const totalRef = useRef(-1)\r\n\r\n  if(buscar.data) {\r\n    totalRef.current = buscar.data.data.meta.total\r\n  }\r\n  \r\n  const updateFilter = (filter: Filter)=>{\r\n    buscar.remove()\r\n    setFilter(oldFilter => ({...oldFilter, ...filter}));\r\n    setPage(page => ({...page, current: 1}))\r\n  }\r\n\r\n  const loader = useMemo(()=>{\r\n    const rows = []\r\n    for(let i = 0; i < page.size; i++){\r\n      rows.push(<tr key={i}>\r\n        <th scope=\"row\" style={{ width: 1 }}>\r\n          {i + 1}\r\n        </th>\r\n        <td>\r\n          <Skeleton />\r\n        </td>\r\n        <td>\r\n          <Skeleton />\r\n        </td>\r\n        <td>\r\n          <Skeleton />\r\n        </td>\r\n        <td>\r\n          <Skeleton />\r\n        </td>\r\n        <td>\r\n        </td>\r\n      </tr>)\r\n    }\r\n    return rows\r\n  }, [page.size])\r\n\r\n  return <div className=\"px-1\">\r\n    <Breadcrumb>\r\n      <Breadcrumb.Item active>Proveedores</Breadcrumb.Item>\r\n    </Breadcrumb>\r\n    <IndexTemplate\r\n      policy={proveedorPolicy}\r\n      page={page}\r\n      onSearch={(search)=>{\r\n        updateFilter({_busqueda: search})\r\n      }}\r\n      onPageChange={setPage}\r\n      total={totalRef.current}\r\n      onRefetch={()=>{\r\n        buscar.remove()\r\n        buscar.refetch({throwOnError: true})\r\n      }}\r\n      isLoading={buscar.isFetching}\r\n      hasError={buscar.isError}\r\n      data={buscar.data?.data.records}\r\n      renderData={(item, index) => {\r\n        return <tr key={item.id}>\r\n          <th scope=\"row\">\r\n            {(page.current - 1)*page.size  + index + 1}\r\n          </th>\r\n          <td>\r\n            {item.tipo == 1 ? \"Medico\" : \"Empresa\"}\r\n          </td>\r\n          <td>\r\n            {item.razonSocial}\r\n          </td>\r\n          <td>\r\n            {item.regional!.nombre}\r\n          </td>\r\n          <td>\r\n            {item.estado == 1 ? \"Activo\" : item.estado == 2 ? \"De baja\" : \"\"}\r\n          </td>\r\n          <td style={{textTransform: \"none\"}}>\r\n            <RowOptions proveedor={item} queryKey={queryKey} />\r\n          </td>\r\n        </tr>\r\n      }}\r\n      renderDataHeaders={()=>{\r\n        return <tr>\r\n          <th style={{ width: 1 }}>#</th>\r\n          <th>Tipo</th>\r\n          <th style={{ minWidth: 250}}>Nombre</th>\r\n          <th>Regional</th>\r\n          <th>Estado</th>\r\n          <th style={{ width: 1 }}></th>\r\n        </tr>\r\n      }}\r\n      renderLoader={()=>{\r\n        return <>{loader}</>\r\n      }}\r\n      renderFilterForm={()=>{\r\n        return <ProveedoresFilterForm onFilter={updateFilter} />\r\n      }}\r\n      renderCreateButton={()=>{\r\n        return <Button\r\n          as={Link}\r\n          to={`${path}/registrar`}\r\n          className=\"d-flex align-items-center\">\r\n          <FaPlus className=\"mr-1\" /><span>Nuevo</span>\r\n        </Button>\r\n      }}\r\n    />\r\n  </div>\r\n}","import { Alert, Breadcrumb, Button, Col, Form, Row } from 'react-bootstrap'\r\nimport { MapContainer, Marker, Popup, TileLayer } from \"react-leaflet\"\r\nimport Skeleton from \"react-loading-skeleton\"\r\nimport { LatLngExpression } from \"leaflet\"\r\nimport { Proveedor, ProveedoresService } from '../services'\r\nimport { useQuery } from 'react-query'\r\nimport { Link, useLocation, useParams } from 'react-router-dom'\r\nimport { useUser, ProtectedContent } from \"../../../../commons/auth\"\r\nimport { proveedorPolicy } from \"../policies\"\r\nimport \"../../../../commons/utils/leafletDefaults\"\r\nimport 'react-loading-skeleton/dist/skeleton.css'\r\n\r\nexport const ProveedorView = ()=>{\r\n\r\n  const { pathname, state: locationState } = useLocation<{\r\n    proveedor?: Proveedor\r\n  }>()\r\n\r\n  const { id } = useParams<{\r\n    id: string\r\n  }>()\r\n\r\n  const tipo = id?.startsWith(\"EMP\") ? 2 : id?.startsWith(\"MED\") ? 1 : -1\r\n\r\n  const userser = useUser()\r\n\r\n  const cargar = useQuery([\"cargar\", id], ()=>{\r\n    return ProveedoresService.cargar(id)\r\n  }, {\r\n    initialData: locationState?.proveedor && { status: 200, statusText: \"OK\", headers: {}, config: {}, data: locationState?.proveedor },\r\n    refetchOnWindowFocus: false,\r\n    refetchOnReconnect: false\r\n  })\r\n\r\n  const proveedor = cargar.data?.data || locationState?.proveedor\r\n\r\n  const position: LatLngExpression | null | undefined = proveedor?.ubicacion && [proveedor.ubicacion.latitud, proveedor.ubicacion.longitud]\r\n    \r\n  const renderAlert = () => {\r\n    if(cargar.error) {\r\n      const { response } = cargar.error as any\r\n      return <Alert variant=\"danger\">\r\n        {\r\n          !response ? \"No fue posible realizar la solicitud, verifique si tiene conexion a internet\" :\r\n          response.status == 404 ? \"El proveedor que busca no existe\" : \r\n          \"Ocurrio un error inesperado\"\r\n        }\r\n      </Alert>\r\n    }\r\n    return null\r\n  }\r\n\r\n  return <div>\r\n    <Breadcrumb>\r\n      <Breadcrumb.Item linkAs={Link} linkProps={{to: \"/clinica/proveedores\"}}>Proveedores</Breadcrumb.Item>\r\n      <Breadcrumb.Item active>{id}</Breadcrumb.Item>\r\n      <Breadcrumb.Item active>Detalles</Breadcrumb.Item>\r\n    </Breadcrumb>\r\n    {renderAlert()}\r\n    <Row>\r\n      <Col lg={5} md={4}>\r\n        <dl className=\"form-row\">\r\n          <dt className=\"col-lg-5 col-md-12 col-sm-5\">Tipo</dt>\r\n          <dd className=\"col-lg-7 col-md-12 col-sm-7\">{proveedor ? (proveedor.tipo == 1 ? \"Médico\" : proveedor?.tipo == 2 ? \"Empresa\" : null) : <Skeleton />}</dd>\r\n          <dt className=\"col-lg-5 col-md-12 col-sm-5\">NIT</dt>\r\n          <dd className=\"col-lg-7 col-md-12 col-sm-7\">{proveedor? proveedor.nit : <Skeleton />}</dd>\r\n          {\r\n            proveedor ? \r\n              proveedor.tipo == 1 ? <>\r\n                  <dt className=\"col-lg-5 col-md-12 col-sm-5\">Carnet de identidad</dt>\r\n                  <dd className=\"col-lg-7 col-md-12 col-sm-7\">{proveedor.ci.texto}</dd>\r\n                  <dt className=\"col-lg-5 col-md-12 col-sm-5\">Nombre</dt>\r\n                  <dd className=\"col-lg-7 col-md-12 col-sm-7\">{proveedor.razonSocial}</dd>\r\n                  <dt className=\"col-lg-5 col-md-12 col-sm-5\">Especialidad</dt>\r\n                  <dd className=\"col-lg-7 col-md-12 col-sm-7\">{proveedor.especialidad}</dd>\r\n              </> : (proveedor.tipo == 2 ? <>\r\n                <dt className=\"col-lg-5 col-md-12 col-sm-5\">Nombre</dt>\r\n                <dd className=\"col-lg-7 col-md-12 col-sm-7\">{proveedor.razonSocial}</dd>\r\n              </> : null) :\r\n              tipo == 1 ? <>\r\n                  <dt className=\"col-lg-5 col-md-12 col-sm-5\">Carnet de identidad</dt>\r\n                  <dd className=\"col-lg-7 col-md-12 col-sm-7\">{<Skeleton />}</dd>\r\n                  <dt className=\"col-lg-5 col-md-12 col-sm-5\">Nombre</dt>\r\n                  <dd className=\"col-lg-7 col-md-12 col-sm-7\">{<Skeleton />}</dd>\r\n                  <dt className=\"col-lg-5 col-md-12 col-sm-5\">Especialidad</dt>\r\n                  <dd className=\"col-lg-7 col-md-12 col-sm-7\">{<Skeleton />}</dd>\r\n              </> : (tipo == 2 ? <>\r\n                <dt className=\"col-lg-5 col-md-12 col-sm-5\">Nombre</dt>\r\n                <dd className=\"col-lg-7 col-md-12 col-sm-7\">{<Skeleton />}</dd>\r\n              </> : null)\r\n          }\r\n          <dt className=\"col-lg-5 col-md-12 col-sm-5\">Regional</dt>\r\n          <dd className=\"col-lg-7 col-md-12 col-sm-7\">{proveedor ? proveedor.regional?.nombre : <Skeleton />}</dd>\r\n          <dt className=\"col-lg-5 col-md-12 col-sm-5\">Dirección</dt>\r\n          <dd className=\"col-lg-7 col-md-12 col-sm-7\">{proveedor ? proveedor.direccion : <Skeleton />}</dd>\r\n          <dt className=\"col-lg-5 col-md-12 col-sm-5\">Teléfono 1</dt>\r\n          <dd className=\"col-lg-7 col-md-12 col-sm-7\">{proveedor ? proveedor.telefono1 : <Skeleton />}</dd>\r\n          <dt className=\"col-lg-5 col-md-12 col-sm-5\">Teléfono 2</dt>\r\n          <dd className=\"col-lg-7 col-md-12 col-sm-7\">{proveedor ? proveedor.telefono2 || 'No proporcionado' : <Skeleton />}</dd>\r\n        </dl>\r\n      </Col>\r\n      <Col lg={7} md={8}>\r\n        {position !== undefined ? <MapContainer\r\n          center={position||[-17.78629, -63.18117]}\r\n          zoom={13} dragging={false}\r\n          scrollWheelZoom={false}\r\n          doubleClickZoom={false}\r\n          style={{minHeight: 480, height: \"100%\"}}\r\n        >\r\n          <TileLayer\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n          {position ? <Marker position={position}>\r\n            <Popup>\r\n              <a href={`geo:${position.join(\",\")}`}>Abrir con</a>\r\n            </Popup>\r\n          </Marker> : null}\r\n        </MapContainer> : <Skeleton style={{minHeight: 480}} />}\r\n      </Col>\r\n    </Row>\r\n    {proveedor ? <Form.Row>\r\n      <ProtectedContent\r\n        authorize={(user)=>proveedorPolicy.edit(user, {regionalId: proveedor.regionalId})}\r\n      >\r\n        <Col xs=\"auto\">\r\n          <Button as={Link} to={{\r\n            pathname: `/clinica/proveedores/${proveedor.id}/editar`,\r\n            state: {\r\n              proveedor\r\n            }\r\n          }} >Editar</Button>\r\n        </Col>\r\n      </ProtectedContent>\r\n    </Form.Row> : null}\r\n  </div>\r\n}","import { useEffect, useState } from \"react\"\r\nimport { Button, Form, Col, Spinner } from \"react-bootstrap\"\r\nimport { Controller, useForm, useFormContext } from \"react-hook-form\"\r\nimport { useParams, useHistory } from \"react-router\"\r\nimport { yupResolver } from \"@hookform/resolvers/yup\"\r\nimport * as yup from \"yup\"\r\nimport { Regional, RegionalesTypeahead, LazyControl } from '../../../../commons/components'\r\nimport { Permisos, useUser } from '../../../../commons/auth'\r\nimport { Proveedor, ProveedoresService } from '../services'\r\nimport { proveedorPolicy } from \"../policies\"\r\n\r\nexport type Inputs = {\r\n  initialized: boolean\r\n  tipo: 2\r\n  nit?: string,\r\n  ci?: never\r\n  ciComplemento?: never\r\n  apellidoPaterno?: never\r\n  apellidoMaterno?: never\r\n  nombre?: string\r\n  especialidad?: never\r\n  regional?: Regional[]\r\n}\r\n\r\nexport const ProveedorEmpresaFieldset = ()=>{\r\n\r\n  const { id } = useParams<{id: string}>()\r\n\r\n  const {\r\n    control,\r\n    formState,\r\n    register,\r\n    watch\r\n  } = useFormContext<Inputs>()\r\n\r\n  const user = useUser()\r\n\r\n  const formErrors = formState.errors\r\n  const initialized = watch(\"initialized\")\r\n\r\n  return <>\r\n    <Form.Row>\r\n      <Form.Group as={Col} sm={4}>\r\n        <Form.Label htmlFor=\"proveedor-nit\">NIT</Form.Label>\r\n        <LazyControl\r\n          id=\"proveedor-nit\"\r\n          initialized={initialized}\r\n          className=\"text-uppercase\"\r\n          isInvalid={!!formErrors.nit}\r\n          {...register(\"nit\")}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">{formErrors.nit?.message}</Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group as={Col} sm={8}>\r\n        <Form.Label htmlFor=\"proveedor-nombre\">Nombre</Form.Label>\r\n        <LazyControl\r\n          id=\"proveedor-nombre\"\r\n          initialized={initialized}\r\n          className=\"text-uppercase\"\r\n          isInvalid={!!formErrors.nombre}\r\n          {...register(\"nombre\")}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">{formErrors.nombre?.message}</Form.Control.Feedback>\r\n      </Form.Group>      \r\n      <Form.Group as={Col} md={4}>\r\n          <Form.Label htmlFor=\"proveedor-form/regionales-typeahead\">Regional</Form.Label>\r\n          <Controller\r\n            name=\"regional\"\r\n            control={control}\r\n            render={({field, fieldState})=>{\r\n              return <>\r\n                <RegionalesTypeahead\r\n                  id=\"proveedor-form/regionales-typeahead\"\r\n                  initialized={initialized}\r\n                  className=\"text-uppercase\"\r\n                  filterBy={(regional) => { \r\n                    if(id){\r\n                      return proveedorPolicy.editByRegionalOnly(user, {regionalId: regional.id}) !== false\r\n                    }\r\n                    else{\r\n                      return proveedorPolicy.registerByRegionalOnly(user, {regionalId: regional.id}) !== false\r\n                    }\r\n                  }}\r\n                  feedback={fieldState.error?.message}\r\n                  isInvalid={!!fieldState.error}\r\n                  selected={field.value}\r\n                  onChange={field.onChange}\r\n                  onBlur={field.onBlur}\r\n                />\r\n              </>\r\n            }}\r\n          />\r\n        </Form.Group>\r\n      \r\n    </Form.Row>\r\n  </>\r\n}","import {  Col, Form } from 'react-bootstrap'\r\nimport { Controller, useFormContext } from 'react-hook-form'\r\nimport { useParams } from 'react-router'\r\nimport { Regional, RegionalesTypeahead, LazyControl } from '../../../../commons/components'\r\nimport { useUser } from '../../../../commons/auth'\r\nimport { proveedorPolicy } from '../policies'\r\n\r\nexport type Inputs = {\r\n  initialized: boolean\r\n  tipo?: 1\r\n  nit?: string\r\n  ci?: number\r\n  ciComplemento?: string | null\r\n  apellidoPaterno?: string | null\r\n  apellidoMaterno?: string | null\r\n  nombre?: string\r\n  especialidad?: string\r\n  regional?: Regional[]\r\n}\r\n\r\nexport const ProveedorMedicoFieldset = ()=>{\r\n\r\n  const {id} = useParams<{\r\n    id?: string\r\n  }>()\r\n\r\n  const user = useUser()\r\n\r\n  const {\r\n    register,\r\n    control,\r\n    formState,\r\n    watch\r\n  } = useFormContext<Inputs>()\r\n\r\n  const formErrors = formState.errors\r\n\r\n  const initialized = watch(\"initialized\")\r\n\r\n  return <>\r\n    <Form.Row>\r\n      <Form.Group as={Col} xs={12} sm={6} md={4}>\r\n        <Form.Label htmlFor=\"nit\">NIT</Form.Label>\r\n        <LazyControl\r\n          isInvalid={!!formErrors.nit}\r\n          className=\"text-uppercase\"\r\n          initialized={initialized}\r\n          {...register(\"nit\")}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">{formErrors.nit?.message}</Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group as={Col} xs={12} sm={6} md={4}>\r\n        <fieldset className={`border${formState.errors.ci || formState.errors.ciComplemento ? \" border-danger \" : \" \"}rounded`}\r\n          style={{padding: 5, paddingTop: 0, marginBottom: -6}}>\r\n          <Form.Label as=\"legend\" style={{width: \"auto\", fontSize:\"1rem\"}}>Carnet de identidad</Form.Label>\r\n          <Form.Row>\r\n            <Col xs={8}>\r\n              <LazyControl\r\n                aria-label=\"Número raiz\"\r\n                className=\"text-uppercase\"\r\n                isInvalid={!!formState.errors.ci}\r\n                initialized={initialized}\r\n                {...register(\"ci\")}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">{formState.errors.ci?.message}</Form.Control.Feedback>\r\n            </Col>\r\n            <Col xs={4}>\r\n              <LazyControl\r\n                aria-label=\"Número complemento\"\r\n                className=\"text-uppercase\"\r\n                initialized={initialized}\r\n                isInvalid={!!formState.errors.ciComplemento}\r\n                {...register(\"ciComplemento\")}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">{formState.errors.ciComplemento?.message}</Form.Control.Feedback>\r\n            </Col>\r\n          </Form.Row>\r\n        </fieldset>\r\n      </Form.Group>\r\n    </Form.Row>\r\n    <Form.Row>\r\n      <Form.Group as={Col} md={4}>\r\n        <Form.Label>Apellido Paterno</Form.Label>\r\n        <LazyControl\r\n          isInvalid={!!formErrors.apellidoPaterno}\r\n          className=\"text-uppercase\"\r\n          initialized={initialized}\r\n          {...register(\"apellidoPaterno\")}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">{formErrors.apellidoPaterno?.message}</Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group as={Col} md={4}>\r\n        <Form.Label>Apellido Materno</Form.Label>\r\n        <LazyControl\r\n          isInvalid={!!formErrors.apellidoMaterno}\r\n          className=\"text-uppercase\"\r\n          initialized={initialized}\r\n          {...register(\"apellidoMaterno\")}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">{formErrors.apellidoMaterno?.message}</Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group as={Col} md={4}>\r\n        <Form.Label>Nombres</Form.Label>\r\n        <LazyControl\r\n          isInvalid={!!formErrors.nombre}\r\n          className=\"text-uppercase\"\r\n          initialized={initialized}\r\n          {...register(\"nombre\")}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">{formErrors.nombre?.message}</Form.Control.Feedback>\r\n      </Form.Group>\r\n    </Form.Row>\r\n    <Form.Row>\r\n      <Form.Group as={Col} md={4}>\r\n        <Form.Label htmlFor=\"medico-especialidad\">Especialidad</Form.Label>\r\n        <LazyControl id=\"medico-especialidad\"\r\n          isInvalid={!!formErrors.especialidad}\r\n          className=\"text-uppercase\"\r\n          initialized={initialized}\r\n          {...register(\"especialidad\")}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">{formErrors.especialidad?.message}</Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group as={Col} md={4}>\r\n        <Form.Label>Regional</Form.Label>\r\n        <Controller\r\n          name=\"regional\"\r\n          control={control}\r\n          render={({field, fieldState})=>{\r\n            return <>\r\n              <RegionalesTypeahead\r\n                id=\"proveedor-form/regionales-typeahead\"\r\n                className=\"text-uppercase\"\r\n                initialized={initialized}\r\n                filterBy={(regional) => {\r\n                  if(id){\r\n                    return proveedorPolicy.editByRegionalOnly(user, {regionalId: regional.id}) !== false\r\n                  }\r\n                  else{\r\n                    return proveedorPolicy.registerByRegionalOnly(user, {regionalId: regional.id}) !== false\r\n                  }\r\n                }}\r\n                feedback={fieldState.error?.message}\r\n                isInvalid={!!fieldState.error}\r\n                selected={field.value}\r\n                onChange={field.onChange}\r\n                onBlur={field.onBlur}\r\n              />\r\n            </>\r\n          }}\r\n        />\r\n      </Form.Group>\r\n    </Form.Row>\r\n  </>\r\n}","\r\nimport { useState, useEffect } from \"react\"\r\nimport { Form, Col } from \"react-bootstrap\"\r\nimport { Controller, useFormContext } from \"react-hook-form\"\r\nimport { useHistory, useParams } from \"react-router\"\r\nimport { useQuery } from \"react-query\"\r\nimport { useModal } from \"../../../../commons/reusable-modal\"\r\nimport { Inputs as EmpresaInputs, ProveedorEmpresaFieldset } from \"./ProveedorEmpresaFieldset\"\r\nimport { Inputs as MedicoInput, ProveedorMedicoFieldset } from \"./ProveedorMedicoFieldset\"\r\nimport { Proveedor, ProveedoresService } from \"../services\"\r\n\r\nexport type Inputs = EmpresaInputs | MedicoInput\r\n\r\nexport const ProveedorFieldset = () => {\r\n\r\n  const { id } = useParams<{ id?: string }>()\r\n\r\n  const {\r\n    clearErrors,\r\n    control,\r\n    register,\r\n    watch\r\n  } = useFormContext<Inputs>()\r\n\r\n  const tipo = watch(\"tipo\")\r\n  \r\n  useEffect(()=>{\r\n    clearErrors()\r\n  }, [tipo])\r\n\r\n  const renderSpecificFieldset = () => {\r\n    if (tipo == 1) {\r\n      return <ProveedorMedicoFieldset />\r\n    }\r\n    if (tipo == 2) {\r\n      return <ProveedorEmpresaFieldset />\r\n    }\r\n    return null\r\n  }\r\n\r\n  const tipoField = register(\"tipo\")\r\n\r\n  return <fieldset>\r\n    <legend>Información general</legend>\r\n    <Form.Row>\r\n      <Form.Group as={Col} md={4}>\r\n        <Form.Label>Tipo de proveedor</Form.Label>\r\n        <Controller\r\n          control={control}\r\n          name=\"tipo\"\r\n          render={({field: {value, ...field}, fieldState})=>{\r\n            return !id ? <>\r\n              <Form.Row className={fieldState.error ? \"is-invalid\" : \"\"}>\r\n                <Col>\r\n                  <Form.Check \r\n                    // disabled={!!id}\r\n                    readOnly={!!id}\r\n                    type=\"radio\"\r\n                    value={1}\r\n                    checked={value == 1}\r\n                    label=\"Médico\"\r\n                    isInvalid={!!fieldState.error}\r\n                    {...field}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Form.Check\r\n                    // disabled={!!id}\r\n                    readOnly={!!id}\r\n                    type=\"radio\"\r\n                    value={2}\r\n                    checked={value == 2}\r\n                    label=\"Empresa\" \r\n                    isInvalid={!!fieldState.error}\r\n                    {...field} \r\n                  />\r\n                </Col>\r\n              </Form.Row>\r\n              <Form.Control.Feedback type=\"invalid\">{fieldState.error?.message}</Form.Control.Feedback>\r\n            </> : <Form.Control readOnly value={value == 1 ? \"MÉDICO\" : \"EMPRESA\"} />\r\n          }}\r\n        />        \r\n      </Form.Group>\r\n    </Form.Row>\r\n    {renderSpecificFieldset()}\r\n  </fieldset>\r\n}","import { useMemo } from \"react\"\r\nimport {  Col, Form } from \"react-bootstrap\"\r\nimport { LatLngExpression } from \"leaflet\"\r\nimport { Controller, useFormContext } from \"react-hook-form\"\r\nimport { Regional, LazyControl, LocationInput } from \"../../../../commons/components\"\r\nimport { useUser } from \"../../../../commons/auth\"\r\n\r\nexport type Inputs = {\r\n  initialized: boolean\r\n  regional: Regional[]\r\n  direccion?: string\r\n  ubicacion?: LatLngExpression | null\r\n  horario?: string, \r\n  telefono1?: number\r\n  telefono2?: number | null\r\n}\r\n\r\nexport const ContactoFieldset = () => {\r\n\r\n  const user = useUser()\r\n\r\n  const {\r\n    register,\r\n    control,\r\n    formState,\r\n    watch\r\n  } = useFormContext<Inputs>()\r\n\r\n  const formErrors = formState.errors\r\n\r\n  const initialized = watch(\"initialized\")\r\n  const regional = watch(\"regional\")\r\n\r\n  const center: [number, number] = useMemo(()=>{\r\n    if(regional.length){\r\n      return [\r\n        regional[0].ubicacion.latitud,\r\n        regional[0].ubicacion.longitud\r\n      ]\r\n    }\r\n    return [\r\n      (user!.regional as Regional).ubicacion.latitud,\r\n      (user!.regional as Regional).ubicacion.longitud\r\n    ]\r\n  }, [user, regional.length])\r\n\r\n  return <fieldset>\r\n    <legend>Información de contacto</legend>\r\n    <Form.Row>\r\n      <Form.Group as={Col}>\r\n        <Form.Label>Direccion</Form.Label>\r\n        <LazyControl\r\n          as=\"textarea\"\r\n          initialized={initialized}\r\n          isInvalid={!!formErrors.direccion}\r\n          className=\"text-uppercase\"\r\n          aria-describedby=\"direccionHelpBlock\"\r\n          {...register(\"direccion\")}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">{formErrors.direccion?.message}</Form.Control.Feedback>\r\n        {!formErrors.direccion ? <Form.Text id=\"direccionHelpBlock\" muted>{`${watch(\"direccion\")!.length}/80` }</Form.Text> : null}\r\n      </Form.Group>\r\n    </Form.Row>\r\n    <Form.Row>\r\n      <Form.Group as={Col}>\r\n        <Form.Label>Ubicación</Form.Label>\r\n        <Controller\r\n          name=\"ubicacion\"\r\n          control={control}\r\n          render={({ field, fieldState }) => {\r\n            return <>\r\n              <LocationInput\r\n                initialized={initialized}\r\n                isInvalid={!!fieldState.error}\r\n                center={field.value || center}\r\n                value={field.value!}\r\n                onChange={field.onChange}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">{fieldState.error?.message}</Form.Control.Feedback>\r\n            </>\r\n          }}\r\n        />\r\n      </Form.Group>\r\n    </Form.Row>\r\n    <Form.Row>\r\n      <Form.Group as={Col} sm={4}>\r\n        <Form.Label>Teléfono 1</Form.Label>\r\n        <LazyControl\r\n          initialized={initialized}\r\n          isInvalid={!!formErrors.telefono1}\r\n          {...register(\"telefono1\")}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">{formErrors.telefono1?.message}</Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group as={Col} sm={4}>\r\n        <Form.Label>Teléfono 2</Form.Label>\r\n        <LazyControl\r\n          initialized={initialized}\r\n          isInvalid={!!formErrors.telefono2}\r\n          {...register(\"telefono2\")}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">{formErrors.telefono2?.message}</Form.Control.Feedback>\r\n      </Form.Group>\r\n    </Form.Row>\r\n  </fieldset>\r\n}","import { useEffect } from \"react\"\r\nimport { Alert, Button, Breadcrumb, Col, Form, Spinner } from \"react-bootstrap\"\r\nimport { Link, useHistory, useParams } from \"react-router-dom\"\r\nimport { useMutation, useQuery, useQueryClient } from \"react-query\"\r\nimport { useForm, FormProvider } from \"react-hook-form\"\r\nimport { Inputs as ProveedorInputs, ProveedorFieldset } from \"./ProveedorFieldset\"\r\nimport { Inputs as ContactoInputs, ContactoFieldset } from \"./ContactoFieldset\"\r\nimport { Proveedor, Empresa, Medico, InformacionContacto, ProveedoresService } from \"../services\"\r\nimport { AxiosError } from \"axios\"\r\nimport { useServerValidation } from \"../../../../commons/hooks\"\r\nimport { Regional } from \"../../../../commons/services\"\r\nimport * as yup from \"yup\"\r\nimport { yupResolver } from \"@hookform/resolvers/yup\"\r\n\r\ntype Inputs = ProveedorInputs & ContactoInputs\r\n\r\nconst schema = yup.object().shape({\r\n  tipo: yup.number().required().oneOf([1,2]),\r\n  nit: yup.string().trim().label(\"NIT\")\r\n    .matches(/^[0-9]*$/, \"Este campo solo admite números\").required(),\r\n  ci: yup.number().label(\"número de carnet\")\r\n    .nonEmpty()\r\n    .typeError(\"El ${path} no es un numero valido\")\r\n    .when(\"tipo\", function(tipo: any, schema: any) {\r\n      if(tipo == 1) return schema.required()\r\n      return schema.optional()\r\n    }),\r\n  ciComplemento: yup.string().label(\"complemento del carnet\").nonEmpty().uppercase().default(null).nullable().notRequired()\r\n    .when(\"tipo\", {\r\n      is: (tipo: any) => tipo == 1,\r\n      then: (schema) => schema.matches(/^[1-9][A-Z]$/, \"Complemento invalido.\")\r\n    }),\r\n  apellidoPaterno: yup.string().label(\"apellido paterno\").nonEmpty().uppercase().default(null).nullable()\r\n    .when([\"tipo\", \"apellidoMaterno\"], {\r\n      is: (tipo: number, apellidoMaterno: string) => tipo == 1 && !apellidoMaterno,\r\n      then: (schema) => schema.required(\"Debe proporcionar al menos un apellido\").max(25)\r\n    }),\r\n  apellidoMaterno: yup.string().trim().label(\"apellido materno\").nonEmpty().uppercase().default(null).nullable()\r\n  .when([\"tipo\", \"apellidoPaterno\"], {\r\n    is: (tipo: number, apellidoPaterno: string) => tipo == 1 && !apellidoPaterno,\r\n    then: (schema) => schema.required(\"Debe proporcionar al menos un apellido\").max(25)\r\n  }),\r\n  nombre: yup.string().label(\"nombre\").nonEmpty().uppercase().required().label(\"nombre\")\r\n    .when(\"tipo\", function(tipo: any, schema: any) {\r\n      return tipo ==  1 ? schema.max(50) : schema.max(100)\r\n    }),\r\n  especialidad: yup.string().label(\"especialidad\").nonEmpty().uppercase()\r\n    .when(\"tipo\", function(tipo: any, schema: any) {\r\n      return tipo ==  1 ? schema.required(\"Debe indicar una especialidad\") : schema.optional()\r\n    }),\r\n  regional: yup.array().length(1, \"Debe indicar una regional\").required(),\r\n\r\n  direccion: yup.string().label(\"dirección\").nonEmpty().uppercase().required().max(80),\r\n  ubicacion: yup.mixed().label(\"ubicación\").required(),\r\n  telefono1: yup.number().label(\"telefono 1\")\r\n    .nonEmpty()\r\n    .typeError(\"No es un numero válido\").required(),\r\n  telefono2: yup.number().label(\"telefono 2\")\r\n    .nonEmpty()\r\n    .typeError(\"No es un numero válido\").nullable().notRequired()\r\n}, [[\"apellidoMaterno\", \"apellidoPaterno\"]])\r\n\r\n\r\nexport const ProveedorForm = () => {\r\n\r\n  const { id } = useParams<{id?: string}>()\r\n  const history = useHistory<{\r\n    proveedor?: Proveedor\r\n  }>()\r\n\r\n\r\n  const formMethods = useForm<Inputs>({\r\n    resolver: yupResolver(schema),\r\n    defaultValues: !id || id.startsWith(\"MED\") ? {\r\n      tipo: 1,\r\n      initialized: !id,\r\n      ciComplemento: null,\r\n      regional: [],\r\n      direccion: \"\",\r\n      ubicacion: null\r\n    } : {\r\n      tipo: 2,\r\n      initialized: !id,\r\n      regional: [],\r\n      direccion: \"\",\r\n      ubicacion: null\r\n    }\r\n  })\r\n\r\n  const {\r\n    formState,\r\n    handleSubmit,\r\n    reset,\r\n    setError,\r\n    setValue,\r\n    watch\r\n  } = formMethods\r\n\r\n  // if(Object.keys(formState.errors).length !== 0) console.log(formState.errors, watch())\r\n\r\n  const initialized = watch(\"initialized\")\r\n\r\n  const queryClient = useQueryClient()\r\n\r\n  const cargar = useQuery([\"proveedores\", \"cargar\", id], () => {\r\n    return ProveedoresService.cargar(id!)\r\n  }, {\r\n    enabled: !!id && !initialized,\r\n    initialData: history.location.state?.proveedor && {status: 200, statusText: \"OK\", data: history.location.state.proveedor, headers: {}, config: {}},\r\n    refetchOnMount: false,\r\n    refetchOnWindowFocus: false,\r\n    refetchOnReconnect: false,\r\n    onError(){\r\n      setValue(\"initialized\", true)\r\n    }\r\n  })\r\n\r\n  useEffect(()=>{\r\n    if(cargar.data){\r\n      const { data } = cargar.data\r\n      setValue(\"initialized\", true)\r\n      setValue(\"tipo\", data.tipo)\r\n      setValue(\"nit\", data.nit)\r\n      setValue(\"nombre\", data.nombre)\r\n      setValue(\"regional\", [data.regional as Regional])\r\n      setValue(\"direccion\", data.direccion)\r\n      setValue(\"ubicacion\", data.ubicacion && [data.ubicacion.latitud, data.ubicacion.longitud])\r\n      setValue(\"telefono1\", data.telefono1)\r\n      setValue(\"telefono2\", data.telefono2)\r\n      if(data.tipo == 1){\r\n        setValue(\"ci\", data.ci.raiz)\r\n        setValue(\"ciComplemento\", data.ci.complemento)\r\n        setValue(\"apellidoMaterno\", data.apellidoMaterno)\r\n        setValue(\"apellidoPaterno\", data.apellidoPaterno)\r\n        setValue(\"especialidad\", data.especialidad)\r\n      }\r\n    }\r\n  }, [cargar.data])\r\n\r\n  const guardar = useMutation((values: Inputs)=>{\r\n\r\n    let general: Omit<Empresa, \"id\" | \"estado\"> | Omit<Medico, \"id\" | \"estado\" | \"nombreCompleto\">\r\n    if(values.tipo == 1) {\r\n      general = {\r\n        tipo: values.tipo!,\r\n        nit: values.nit!,\r\n        ci: {\r\n          raiz: values.ci!,\r\n          complemento: values.ciComplemento!\r\n        },\r\n        apellidoPaterno: values.apellidoPaterno!,\r\n        apellidoMaterno: values.apellidoMaterno!,\r\n        nombre: values.nombre!,\r\n        especialidad: values.especialidad!,\r\n        regionalId: values.regional![0].id\r\n      }\r\n    }\r\n    else {\r\n      general = {\r\n        tipo: values.tipo!,\r\n        nit: values.nit!,\r\n        nombre: values.nombre!,\r\n        regionalId: values.regional![0].id\r\n      }\r\n    }\r\n\r\n    let lat, lng\r\n    if(Array.isArray(values.ubicacion)){\r\n      [lat, lng] = values.ubicacion!\r\n    }\r\n    else{\r\n      ({lat, lng} = values.ubicacion!)\r\n    }\r\n    const contacto: InformacionContacto = {\r\n      direccion: values.direccion!,\r\n      ubicacion: {\r\n        latitud: lat,\r\n        longitud: lng\r\n      },\r\n      telefono1: values.telefono1!,\r\n      telefono2: values.telefono2!\r\n    }\r\n\r\n    return id ? ProveedoresService.actualizar({\r\n      id, ...general, ...contacto\r\n    }) : ProveedoresService.registrar({\r\n      ...general, ...contacto\r\n    })\r\n  }, {\r\n    onSuccess: ()=>{\r\n      reset({\r\n        tipo: 1,\r\n        initialized: true,\r\n        ciComplemento: null,\r\n        regional: [],\r\n        direccion: \"\",\r\n        ubicacion: null\r\n      })\r\n      queryClient.invalidateQueries(\"proveedores\");\r\n      if(id) history.push(\"/clinica/proveedores\")\r\n    }\r\n  })\r\n\r\n  // Efecto para agregar errores de validocion devueltos por el servidor\r\n  useServerValidation(guardar.error as AxiosError, setError)\r\n\r\n  const renderAlert = () => {\r\n    if(cargar.error) {\r\n      const { response } = cargar.error as AxiosError\r\n      return <Alert variant=\"danger\">\r\n        {\r\n          !response ? \"Error: no se pudo conectar con el servidor\" :\r\n          response.status == 404 ? \"El proveedor no existe\" : \r\n          response.data.message\r\n        }\r\n      </Alert>\r\n    }\r\n    if(guardar.error) {\r\n      const { response } = guardar.error as AxiosError\r\n      return <Alert variant=\"danger\">\r\n        {\r\n          response?.data?.message || \"Error: no se pudo conectar con el servidor\"\r\n        }\r\n      </Alert>\r\n    }\r\n    if(guardar.isSuccess) {\r\n      return <Alert variant=\"success\">\r\n        La operacion se realizó con exito\r\n      </Alert>\r\n    }\r\n    return null\r\n  }\r\n\r\n  return <FormProvider {...formMethods}>\r\n    <Breadcrumb>\r\n      <Breadcrumb.Item linkAs={Link} linkProps={{to: \"/clinica/proveedores\"}}>Proveedores</Breadcrumb.Item>\r\n      {id ? <Breadcrumb.Item active>{id}</Breadcrumb.Item> : null}\r\n      <Breadcrumb.Item active>{!id ? \"Registro\" : \"Actualización\"}</Breadcrumb.Item>\r\n    </Breadcrumb>\r\n    <Form onSubmit={handleSubmit((values)=>{\r\n      guardar.mutate(values)\r\n    })}>\r\n      {renderAlert()}\r\n      <ProveedorFieldset />\r\n      <ContactoFieldset />\r\n      <Button className=\"mt-3\" type=\"submit\">\r\n        {guardar.isLoading ? <Spinner className=\"mr-2\" animation=\"border\" size=\"sm\"/> : null}\r\n        Guardar\r\n      </Button>\r\n    </Form>\r\n  </FormProvider>\r\n}","import { useState } from \"react\"\r\nimport { Button, Form, InputGroup } from \"react-bootstrap\"\r\nimport { FaSync } from \"react-icons/fa\"\r\nimport { AsyncTypeahead, AsyncTypeaheadProps } from 'react-bootstrap-typeahead'\r\nimport { useInfiniteQuery } from 'react-query'\r\nimport { Proveedor, Filter as ProveedorFilter, ProveedoresService } from \"../services\"\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css'\r\n\r\nexport type { Proveedor }\r\n\r\ntype Props = {\r\n  feedback?: string,\r\n  filter?: ProveedorFilter\r\n  defaultOptions?: Proveedor[]\r\n} & Omit<AsyncTypeaheadProps<Proveedor>, \"isLoading\" | \"options\" | \"onSearch\">\r\n\r\nexport const ProveedoresTypeahead = ({isInvalid, feedback, filter={}, ...props}: Props) => {\r\n  \r\n  const [options, setOptions] = useState<Proveedor[]>(props.defaultOptions || [])\r\n  const [ search, setSearch ] = useState(\"\")\r\n\r\n  filter = {\r\n    ...filter,\r\n    _busqueda: search\r\n  }\r\n\r\n  const queryKey = [\"proveedores\", \"buscar\", filter]\r\n\r\n  const buscar = useInfiniteQuery(queryKey, ({pageParam = 1})=>{\r\n    return ProveedoresService.buscar({\r\n      current: pageParam,\r\n      size: 10\r\n    }, filter)\r\n  }, {\r\n    enabled: !!search,\r\n    refetchOnReconnect: false,\r\n    refetchOnWindowFocus: false,\r\n    getNextPageParam: (lastPage) => lastPage.data.meta.nextPage,\r\n    onSuccess: ({pages}) =>{\r\n      setOptions(pages.flatMap((response)=>response.data.records, 1))\r\n    }\r\n  })\r\n\r\n  return <InputGroup hasValidation  className=\"position-unset\">\r\n    <AsyncTypeahead\r\n      clearButton\r\n      align=\"left\"\r\n      emptyLabel={buscar.isError ? \"\" : \"No se encontraron resultados\"}\r\n      promptText=\"Escribe un nombre o especialidad para buscar\"\r\n      searchText=\"Buscando...\"\r\n      paginationText=\"Cargar más...\"\r\n      {...props}\r\n      labelKey={(proveedor: Proveedor) => proveedor.razonSocial!}\r\n      className={props.className + ((buscar.isError || isInvalid) ? \" is-invalid\" : \"\")}\r\n      isInvalid={buscar.isError || isInvalid}\r\n      filterBy={()=>true}\r\n      maxResults={10}\r\n      minLength={0}\r\n      options={options}\r\n      isLoading={buscar.status == \"loading\" || buscar.isFetchingNextPage}\r\n      onSearch={(search) => {\r\n        setSearch(search)\r\n      }}\r\n      paginate\r\n      onPaginate={()=>{\r\n        buscar.fetchNextPage()\r\n      }}\r\n      useCache={false}\r\n\r\n      renderMenuItemChildren={(proveedor) => {\r\n        return <div>\r\n          <div>{proveedor.razonSocial}</div>\r\n          <small className=\"text-muted\">{proveedor.tipo == 1 ? proveedor.especialidad : \"Empresa\"}</small> \r\n        </div>\r\n      }}\r\n    />\r\n    {buscar.isError ? <InputGroup.Append>\r\n      <Button variant=\"outline-danger\" onClick={()=>buscar.refetch()}><FaSync /></Button>\r\n    </InputGroup.Append> : null}\r\n    <Form.Control.Feedback type=\"invalid\">{buscar.isError ? \"Ocurrio un error al realizar la busqueda\" : feedback}</Form.Control.Feedback>\r\n  </InputGroup>\r\n}","import { SolicitudAtencionExternaPolicy } from \"./SolicitudAtencionExternaPolicy\";\r\n\r\nexport const solicitudAtencionExternaPolicy = new SolicitudAtencionExternaPolicy()","import { User } from \"../../../../commons/auth\";\r\nimport * as Permisos from \"./Permisos\"\r\n\r\nexport class SolicitudAtencionExternaPolicy {\r\n  \r\n  index = (user: User) => {\r\n    return this.view(user) || this.register(user)\r\n  }\r\n\r\n  register = (user: User, context?: {\r\n    regionalId: number\r\n  }) => {\r\n    const byRegionalOnly = this.registerByRegionalOnly(user, context)\r\n    if(byRegionalOnly !== undefined) return byRegionalOnly\r\n    if(user?.can(Permisos.REGISTRAR_SOLICITUDES_DE_ATENCION_EXTERNA)) return true\r\n  }\r\n\r\n  registerByRegionalOnly = (user: User, context?: {\r\n    regionalId: number\r\n  }) => {\r\n    if(user?.can(Permisos.REGISTRAR_SOLICITUDES_DE_ATENCION_EXTERNA_MISMA_REGIONAL)) return !context?.regionalId || user.regionalId == context.regionalId\r\n  }\r\n\r\n  view = (user: User, context?: {\r\n    regionalId: number\r\n  }) => {\r\n    // const restrictions = [this.viewByRegionalOnly(user, context)]\r\n    // let hasRestrictions;\r\n    // for(let restriction of restrictions){\r\n    //   if(restriction === false) return false\r\n    //   hasRestrictions ||= restriction\r\n    // }\r\n    // if(hasRestrictions) return true    \r\n    const byRegionalOnly = this.viewByRegionalOnly(user, context)\r\n    if(byRegionalOnly !== undefined) return byRegionalOnly\r\n    if(user?.can(Permisos.VER_SOLICITUDES_DE_ATENCION_EXTERNA)) return true\r\n  }\r\n\r\n  viewByRegionalOnly = (user: User, context?: {\r\n    regionalId: number\r\n  }) => {\r\n    if(user?.can(Permisos.VER_SOLICITUDES_DE_ATENCION_EXTERNA_MISMA_REGIONAL)) return !context?.regionalId || user.regionalId == context.regionalId\r\n  }\r\n\r\n  emit = (user: User, context?: {\r\n    regionalId: number\r\n  }) => {\r\n    const byRegionalOnly = this.emitByRegionalOnly(user, context)\r\n    if(byRegionalOnly !== undefined) return byRegionalOnly\r\n    if(user?.can(Permisos.EMITIR_SOLICITUDES_DE_ATENCION_EXTERNA)) return true\r\n  }\r\n\r\n  emitByRegionalOnly = (user: User, context?: {\r\n    regionalId: number\r\n  }) => {\r\n    if(user?.can(Permisos.EMITIR_SOLICITUDES_DE_ATENCION_EXTERNA_MISMA_REGIONAL)) return !context?.regionalId || user.regionalId == context.regionalId\r\n  }\r\n}","/**\r\n * Permisos de solicitud de transferencia externa\r\n */\r\n export const VER_SOLICITUDES_DE_ATENCION_EXTERNA = \"Ver solicitudes de atencion externa\";\r\n export const VER_SOLICITUDES_DE_ATENCION_EXTERNA_MISMA_REGIONAL = \"Ver solicitudes de atencion externa (misma regional)\";\r\n export const REGISTRAR_SOLICITUDES_DE_ATENCION_EXTERNA = \"Registrar solicitudes de atencion externa\";\r\n export const REGISTRAR_SOLICITUDES_DE_ATENCION_EXTERNA_MISMA_REGIONAL = \"Registrar solicitudes de atencion externa (misma regional)\";\r\n export const EMITIR_SOLICITUDES_DE_ATENCION_EXTERNA = \"Emitir solicitudes de atencion externa\";\r\n export const EMITIR_SOLICITUDES_DE_ATENCION_EXTERNA_MISMA_REGIONAL = \"Emitir solicitudes de atencion externa (misma regional)\";\r\n   ","import React from \"react\"\r\nimport { Button, Col, Form } from 'react-bootstrap'\r\nimport { useForm, Controller }  from 'react-hook-form'\r\nimport { Medico, MedicosTypeahead } from \"../../medicos/components\"\r\nimport { Proveedor, ProveedoresTypeahead } from \"../../proveedores/components\"\r\nimport { Regional, RegionalesTypeahead } from \"../../../../commons/components\"\r\nimport { useUser } from \"../../../../commons/auth/hooks\"\r\nimport { SolicitudesAtencionExternaFilter } from \"../services/SolicitudesAtencionExternaService\"\r\nimport moment from \"moment\"\r\nimport { solicitudAtencionExternaPolicy } from \"../policies\"\r\nimport { medicoPolicy } from \"../../medicos\"\r\nimport { proveedorPolicy } from \"../../proveedores\"\r\n\r\ntype Inputs = {\r\n  numero: string\r\n  desde: string\r\n  hasta: string\r\n  numeroPatronal: string\r\n  matricula: string\r\n  medico: Medico[]\r\n  proveedor: Proveedor[]\r\n  regional: Regional[]\r\n}\r\n\r\ntype Props = {\r\n  onFilter: (filter: SolicitudesAtencionExternaFilter)=>void\r\n}\r\nexport const SolicitudAtencionExternaFilterForm = (props: Props)=>{\r\n\r\n  const user = useUser()\r\n\r\n  const {\r\n    control,\r\n    formState,\r\n    handleSubmit,\r\n    register,\r\n    reset,\r\n    watch\r\n  } = useForm<Inputs>({\r\n    defaultValues: {\r\n      medico: [],\r\n      proveedor: [],\r\n      regional: []\r\n    }\r\n  })\r\n  \r\n  return <Form className={\"mb-2 border rounded p-2\"} onSubmit={handleSubmit((input)=>{\r\n    const filter: SolicitudesAtencionExternaFilter = {}\r\n    \r\n    props.onFilter({\r\n      numeroPatronal: input.numeroPatronal,\r\n      matricula: input.matricula,\r\n      desde: input.desde && moment(input.desde).format(\"YYYY-MM-DD\"),\r\n      hasta: input.hasta && moment(input.hasta).format(\"YYYY-MM-DD\"),\r\n      medicoId: input.medico.length && input.medico[0].id,\r\n      proveedorId: input.medico.length ? input.proveedor[0].id : undefined,\r\n      regionalId: input.regional.length && input.regional[0].id\r\n    })\r\n  })}>\r\n    <Form.Row>\r\n      <Form.Group as={Col} md={6} lg={4}>\r\n        <Form.Label>Nº Patronal</Form.Label>\r\n        <Form.Control {...register(\"numeroPatronal\")} />\r\n      </Form.Group>\r\n      <Form.Group as={Col} md={6} lg={4}>\r\n        <Form.Label>Matricula</Form.Label>\r\n        <Form.Control {...register(\"matricula\")} />\r\n      </Form.Group>\r\n    </Form.Row>\r\n    <Form.Row>\r\n      <Form.Group as={Col} md={6} lg={4}>\r\n        <Form.Label>Regional</Form.Label>\r\n        <Controller\r\n          control={control}\r\n          name=\"regional\"\r\n          render={({field: {ref, value, ...field}})=>{\r\n            return <RegionalesTypeahead\r\n              className=\"text-uppercase\"\r\n              id=\"medico-filter-regional\"\r\n              selected={solicitudAtencionExternaPolicy.viewByRegionalOnly(user) ? [user!.regional as Regional] : value}\r\n              filterBy={(regional) => solicitudAtencionExternaPolicy.viewByRegionalOnly(user, {regionalId: regional.id}) !== false}\r\n              {...field}\r\n            />\r\n          }}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group as={Col} md={6} lg={4}>\r\n        <Form.Label>Médico</Form.Label>\r\n        <Controller\r\n          control={control}\r\n          name=\"medico\"\r\n          render={({field})=>{\r\n            return <MedicosTypeahead\r\n              id=\"medicos-typeahead\"\r\n              filter={{\r\n                regionalId: medicoPolicy.viewByRegionalOnly(user) ? user!.regionalId : watch(\"regional\").length && watch(\"regional\")[0].id\r\n              }}\r\n            />\r\n          }}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group as={Col} md={6} lg={4}>\r\n        <Form.Label>Proveedor</Form.Label>\r\n        <Controller\r\n          control={control}\r\n          name=\"medico\"\r\n          render={()=>{\r\n            return <ProveedoresTypeahead\r\n              id=\"proveedores-typeahead\"\r\n              filter={{\r\n                regionalId: proveedorPolicy.viewByRegionalOnly(user) ? user!.regionalId : watch(\"regional\").length && watch(\"regional\")[0].id\r\n              }}\r\n            />\r\n          }}\r\n        />\r\n      </Form.Group>\r\n    </Form.Row>\r\n    <Form.Row>\r\n      <Form.Group as={Col} sm={4}>\r\n          <Form.Label>Desde</Form.Label>\r\n          <Form.Control\r\n            type=\"date\"\r\n            {...register(\"desde\")}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group as={Col} sm={4}>\r\n          <Form.Label>Hasta</Form.Label>\r\n          <Form.Control\r\n            type=\"date\"\r\n            {...register(\"hasta\")}\r\n          />\r\n        </Form.Group>\r\n    </Form.Row>\r\n    <Form.Row>\r\n      <Col xs=\"auto\" className=\"ml-auto\">\r\n        <Button type=\"submit\">Aplicar</Button>\r\n      </Col>\r\n      <Col xs=\"auto\">\r\n        <Button variant=\"secondary\" onClick={()=>reset()}>Limpiar</Button>\r\n      </Col>\r\n    </Form.Row>\r\n  </Form>\r\n}","import { Dropdown } from \"react-bootstrap\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { VerticalEllipsisDropdownToggle } from \"../../../../commons/components\"\r\nimport { useModal } from \"../../../../commons/reusable-modal\"\r\nimport { ProtectedContent } from \"../../../../commons/auth/components\"\r\nimport { solicitudAtencionExternaPolicy } from \"../policies\"\r\nimport { SolicitudAtencionExterna } from \"../services\"\r\n\r\ntype Props = {\r\n  solicitud: SolicitudAtencionExterna\r\n}\r\nexport const RowOptions = ({solicitud}: Props) => {\r\n\r\n  const modal = useModal(\"pdfModal\")\r\n\r\n  return   <Dropdown style={{position: \"initial\"}}>\r\n    <Dropdown.Toggle as={VerticalEllipsisDropdownToggle}\r\n      variant=\"link\" id={`dropdown-solicitud-${solicitud.id}`}\r\n    />\r\n    <Dropdown.Menu >\r\n      <ProtectedContent\r\n        authorize={(user) => solicitudAtencionExternaPolicy.emit(user, solicitud)}\r\n      >\r\n        <Dropdown.Item href=\"#\" onClick={() => {\r\n          modal.open({\r\n            title: \"Formulario D.M. - 11\",\r\n            url: solicitud.urlDm11\r\n          })\r\n        }}>Ver D.M. - 11</Dropdown.Item>\r\n      </ProtectedContent>\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n}","import { useMemo, useRef, useState } from \"react\"\r\nimport { Button, Breadcrumb } from \"react-bootstrap\"\r\nimport Skeleton from \"react-loading-skeleton\"\r\nimport { FaPlus } from \"react-icons/fa\"\r\nimport { Link, useLocation } from \"react-router-dom\"\r\nimport { useQuery } from \"react-query\"\r\nimport { Page } from \"../../../../commons/services/Page\"\r\nimport { SolicitudesAtencionExternaFilter as Filter, SolicitudesAtencionExternaService } from \"../services/SolicitudesAtencionExternaService\"\r\nimport { SolicitudAtencionExternaFilterForm } from \"./SolicitudAtencionExternaFilterForm\"\r\nimport { useUser } from \"../../../../commons/auth/hooks\"\r\nimport { RowOptions } from \"./RowOptions\"\r\nimport { solicitudAtencionExternaPolicy } from \"../policies\"\r\nimport { IndexTemplate } from \"../../../../commons/components/IndexTemplate\"\r\nimport { superUserPolicyEnhancer } from \"../../../../commons/auth/utils\"\r\n\r\nexport const SolicitudAtencionExternaIndex = ()=>{\r\n  const {pathname: path} = useLocation()\r\n  const [page, setPage] = useState<Page>({\r\n    current: 1,\r\n    size: 10\r\n  })\r\n\r\n  const user = useUser();\r\n\r\n  const [filter, setFilter] = useState<Filter>(()=>{\r\n    const defaultFilter: Filter = {}\r\n    if(solicitudAtencionExternaPolicy.viewByRegionalOnly(user)){\r\n      defaultFilter.regionalId = user!.regionalId;\r\n    }\r\n    return defaultFilter\r\n  })\r\n\r\n  const canView = !!superUserPolicyEnhancer(solicitudAtencionExternaPolicy.view)(user)\r\n  const buscar = useQuery([\"solicitudesAtencionExterna.buscar\", page, filter], ()=>{\r\n    return SolicitudesAtencionExternaService.buscar(filter, page)\r\n  }, {\r\n    enabled: !!canView,\r\n    refetchOnReconnect: false,\r\n    refetchOnWindowFocus: false\r\n  })\r\n\r\n  const totalRef = useRef(-1)\r\n\r\n  if(buscar.data) {\r\n    totalRef.current = buscar.data.data.meta.total\r\n  }\r\n\r\n  const loader = useMemo(()=>{\r\n    const rows = []\r\n    for(let i = 0; i < page.size; i++){\r\n      rows.push(<tr key={i}>\r\n        <th scope=\"row\">\r\n          {i + 1}\r\n        </th>\r\n        <td>\r\n          <Skeleton />\r\n        </td>\r\n        <td>\r\n          <Skeleton />\r\n        </td>\r\n        <td>\r\n          <Skeleton />\r\n        </td>\r\n        <td>\r\n          <Skeleton />\r\n        </td>\r\n        <td>\r\n          <Skeleton />\r\n        </td>\r\n        <td>\r\n          <Skeleton />\r\n        </td>\r\n        <td>\r\n        </td>\r\n      </tr>)\r\n    }\r\n    return rows\r\n  }, [page.size])\r\n\r\n  return <div className=\"px-1\">\r\n    <Breadcrumb>\r\n      <Breadcrumb.Item active>Solicitudes de atencion externa</Breadcrumb.Item>\r\n    </Breadcrumb>\r\n    <IndexTemplate\r\n      policy={solicitudAtencionExternaPolicy}\r\n      isLoading={buscar.isFetching}\r\n      hasError={buscar.isError}\r\n      total={totalRef.current}\r\n      page={page}\r\n      data={buscar.data?.data.records}\r\n      renderLoader={()=>{\r\n        return <>{loader}</>\r\n      }}\r\n      renderData={(solicitud, index)=>{\r\n        return <tr key={solicitud.id}>\r\n          <th scope=\"row\">\r\n              {(page.current - 1)*page.size + index + 1}\r\n          </th>\r\n          <td>{solicitud.numero}</td>\r\n          <td>{solicitud.fecha}</td>\r\n          <td>{solicitud.regional.nombre}</td>\r\n          <td>\r\n            <div>{solicitud.paciente.nombreCompleto}</div>\r\n            <div className=\"text-muted\">{solicitud.paciente.matricula}</div>\r\n          </td>\r\n          <td>\r\n            <div>{solicitud.titular?.nombreCompleto}</div>\r\n            <div className=\"text-muted\">{solicitud.titular?.matricula}</div>\r\n          </td>\r\n          <td>{solicitud.prestacion}</td>\r\n          {/* <td>{solicitud.medico.nombreCompleto}</td>\r\n          <td>{solicitud.proveedor.razonSocial}</td> */}\r\n          <td style={{textTransform: \"none\"}}>\r\n            <RowOptions solicitud={solicitud} />\r\n          </td>\r\n        </tr>\r\n      }}\r\n      renderDataHeaders={()=>{\r\n        return <tr>\r\n          <th style={{width: 1}}>#</th>\r\n          <th>Nº</th>\r\n          <th>Fecha</th>\r\n          <th>Regional</th>\r\n          <th>Paciente</th>\r\n          <th>Titular</th>\r\n          <th>Prestación</th>\r\n          {/* <th>Médico</th>\r\n          <th>Proveedor</th> */}\r\n          <th style={{width: 1}}></th>\r\n        </tr>\r\n      }}\r\n      renderFilterForm={()=>{\r\n        return <SolicitudAtencionExternaFilterForm onFilter={(filter)=>{\r\n          buscar.remove()\r\n          setFilter(filter)\r\n          setPage(page=>({ ...page, current: 1 }))\r\n        }} />\r\n      }}\r\n      renderCreateButton={()=>{\r\n        return <Button\r\n          as={Link}\r\n          to={`${path}/registrar`}\r\n          className=\"d-flex align-items-center\">\r\n            <FaPlus className=\"mr-1\" /><span>Nuevo</span>\r\n        </Button>\r\n      }}\r\n      onPageChange={(page)=>setPage(page)}\r\n      onRefetch={()=>{\r\n        buscar.remove()\r\n        buscar.refetch({throwOnError: true})\r\n      }}\r\n    />\r\n    {/* <div className=\"d-flex my-2\">\r\n      <Form.Row className=\"ml-auto flex-nowrap\" >\r\n        <ProtectedContent\r\n          authorize={solicitudAtencionExternaPolicy.view}\r\n        >\r\n          <Col xs=\"auto\" >\r\n            <Button onClick={()=>{\r\n              buscar.refetch()\r\n            }}><FaSync /></Button>\r\n          </Col>\r\n          <Col xs=\"auto\" >\r\n            <Button onClick={()=>{\r\n              setShowFilterForm(visible=>!visible)\r\n            }}><FaFilter /></Button>\r\n          </Col>\r\n        </ProtectedContent>\r\n        <ProtectedContent\r\n          authorize={solicitudAtencionExternaPolicy.register}\r\n        >\r\n          <Col xs=\"auto\">\r\n            <Button\r\n              as={Link}\r\n              to={`${path}/registrar`}\r\n              className=\"d-flex align-items-center\">\r\n                <FaPlus className=\"mr-1\" /><span>Nuevo</span>\r\n            </Button>\r\n          </Col>\r\n        </ProtectedContent>\r\n      </Form.Row>\r\n    </div>\r\n    <ProtectedContent\r\n      authorize={solicitudAtencionExternaPolicy.view}\r\n    >\r\n      <Form.Row className=\"mb-2\">\r\n        <Col xs={12}>\r\n          <Collapse in={showFilterForm}>\r\n            <div>\r\n              <SolicitudAtencionExternaFilterForm onFilter={(filter)=>{\r\n                setFilter(filter)\r\n                setPage(page=>({ ...page, current: 1 }))\r\n              }} />\r\n            </div>\r\n          </Collapse>\r\n        </Col>\r\n        <Col className=\"ml-auto\" xs={\"auto\"}>\r\n          <div className=\"d-flex flex-row flex-nowrap align-items-center\">\r\n            <span>Mostrar</span>\r\n            <Form.Label htmlFor=\"pageSizeSelector\" srOnly>Tamaño de pagina</Form.Label>\r\n            <Form.Control id=\"pageSizeSelector\" className=\"mx-2\" as=\"select\" value={page.size} onChange={(e) => {\r\n              const value = e.target.value\r\n              setPage({\r\n                current: 1,\r\n                size: parseInt(value)\r\n              })\r\n            }}>\r\n              <option value={10}>10</option>\r\n              <option value={20}>20</option>\r\n              <option value={30}>30</option>\r\n              <option value={50}>50</option>\r\n              <option value={100}>100</option>\r\n            </Form.Control>\r\n            <span>filas</span>\r\n          </div>\r\n        </Col>\r\n      </Form.Row>\r\n      <Table responsive>\r\n        <thead>\r\n          <tr>\r\n            <th style={{width: 1}}>#</th>\r\n            <th>Nº</th>\r\n            <th>Fecha y hora</th>\r\n            <th>Matrícula asegurado</th>\r\n            <th>Doctor</th>\r\n            <th>Proveedor</th>\r\n            <th style={{width: 1}}></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {renderRows()}\r\n        </tbody>\r\n      </Table>\r\n      {buscar.status === \"success\" ? <div className=\"d-flex flex-row\">\r\n        <span className=\"mr-auto\">{`Se encontraron ${total} resultados`}</span>\r\n        <Pagination\r\n          current={page.current}\r\n          total={Math.ceil((total - page.size) / page.size) + 1}\r\n          onChange={(current) => setPage((page) => ({ ...page, current }))}\r\n        />\r\n      </div> : null}\r\n    </ProtectedContent> */}\r\n  </div>\r\n}","import React, { forwardRef, useImperativeHandle, useRef, useCallback } from \"react\"\r\nimport { Button, Modal, ModalProps, Table } from \"react-bootstrap\"\r\nimport { Asegurado } from \"../services\"\r\n\r\ntype Props = Omit<ModalProps, \"children\"> & {\r\n  asegurados: Asegurado[]\r\n  onSelect: (asegurado: Asegurado) => void\r\n  title: string\r\n}\r\n\r\nexport const AseguradoChooser = (props: Props) => {\r\n  return <Modal {...props} >\r\n    <Modal.Header>\r\n      {props.title}\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      <Table responsive className=\"small\">\r\n        <thead>\r\n          <tr>\r\n            <th style={{width: 1}}>#</th>\r\n            <th>Matricula</th>\r\n            <th>Nombre completo</th>\r\n            <th>Estado</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {!!props.asegurados.length ? props.asegurados.map((asegurado, index)=>{\r\n            return <tr key={asegurado.id}>\r\n              <th scope=\"row\">{index+1}</th>\r\n              <td>{asegurado.matricula}-{asegurado.matriculaComplemento}</td>\r\n              <td>{asegurado.nombreCompleto}</td>\r\n              <td className={asegurado.estadoText ? \"\" : \"bg-ligth\"}>{asegurado.estadoText || \"Desconocido\"}</td>\r\n              <td><Button onClick={()=>{\r\n                props.onSelect(asegurado)\r\n              }}\r\n              >Seleccionar</Button></td>\r\n            </tr>\r\n          }) : <tr><td className=\"bg-light text-center\" colSpan={100}>No se encontraron resultados</td></tr>}\r\n        </tbody>\r\n      </Table>\r\n    </Modal.Body>\r\n  </Modal>\r\n}","import { apiClient, Page, PaginatedResponse } from \"../../../../commons/services\"\r\n\r\n// export type Titular = {\r\n//   id: string,\r\n//   matricula: string,\r\n//   apellidoPaterno: string | null,\r\n//   apellidoMaterno: string,\r\n//   nombres: string,\r\n//   estado: string,\r\n//   fechaBaja?: string,\r\n//   fechaExtinsion?: string,\r\n//   empleador: {\r\n//     id: number,\r\n//     numeroPatronal: string,\r\n//     nombre: string,\r\n//     estado: string,\r\n//     aportes: string\r\n//   }\r\n// }\r\n\r\n// type Beneficiario = Titular & {\r\n//   fechaExtinsion?: string\r\n// }\r\n\r\ninterface Afiliacion {\r\n  id: string\r\n  baja: {\r\n    regDate: string,\r\n    fechaValidezSeguro: string\r\n  } | null\r\n}\r\n\r\ninterface AfiliacionBeneficiario extends Afiliacion  {\r\n  parentesco: number\r\n  idAfiliacionTitular: string\r\n  fechaExtincion: string | null\r\n}\r\n\r\ninterface Afiliado {\r\n  id: string\r\n  matricula: string\r\n  matriculaComplemento: string\r\n  apellidoPaterno: string | null\r\n  apellidoMaterno: string | null\r\n  nombres: string\r\n  nombreCompleto: string\r\n  estado: number\r\n  estadoText: string\r\n  tipo: number\r\n  empleador: {\r\n    id: number\r\n    numeroPatronal: string\r\n    nombre: string\r\n    estado: number\r\n    estadoText: string\r\n    fechaBaja: string\r\n    enMora: boolean\r\n  }\r\n}\r\n\r\nexport interface Titular extends Afiliado {\r\n  tipo: 1\r\n  afiliacion: Afiliacion\r\n}\r\n\r\nexport interface Beneficiario extends Afiliado {\r\n  tipo: 2\r\n  titular: Titular\r\n  afiliacion: AfiliacionBeneficiario\r\n}\r\n\r\nexport type Asegurado = Titular | Beneficiario\r\n\r\n// export type Asegurado = {\r\n//   id: string,\r\n//   matricula: string,\r\n//   matriculaComplemento: string,\r\n//   apellidoPaterno: string | null,\r\n//   apellidoMaterno: string,\r\n//   nombres: string,\r\n//   tipo_id: number,\r\n//   estado: number,\r\n//   baja: {\r\n//     regDate: string,\r\n//     fechaValidezSeguro: string\r\n//   },\r\n//   fechaExtinsion?: string\r\n//   titularId: string\r\n//   empleador: {\r\n//     id: number,\r\n//     numeroPatronal: string,\r\n//     nombre: string,\r\n//     estado: string,\r\n//     fechaBaja: string,\r\n//     aportes: string\r\n//   }\r\n//   titular?: {\r\n//     id: string,\r\n//     matricula: string,\r\n//     apellidoPaterno: string | null,\r\n//     apellidoMaterno: string | null,\r\n//     nombres: string,\r\n//     estado: string,\r\n//     baja: {\r\n//       regDate: string,\r\n//       fechaValidezSeguro: string\r\n//     },\r\n//   }\r\n// }\r\n\r\nexport const AseguradosService = {\r\n  buscarPorMatricula: (matricula: string) =>{\r\n    return apiClient.get<PaginatedResponse<Asegurado>>(\"asegurados\", {\r\n      params: {\r\n        filter: {\r\n          matricula\r\n        },\r\n        page: {\r\n          size: 10\r\n        },\r\n        include: \"empleador,titular\"\r\n      },\r\n      // transformResponse: [...apiClient.defaults.transformResponse as AxiosTransformer[], (response:any)=>{\r\n      //   console.log(response)\r\n      //   return response\r\n      // }]\r\n    })\r\n  }\r\n}","import { useEffect, useState, useRef } from \"react\"\r\nimport { Accordion, Alert, Card, Form, Col, InputGroup, FormControl, Button, Spinner } from \"react-bootstrap\"\r\nimport { useFormContext } from \"react-hook-form\"\r\nimport { FaSearch } from \"react-icons/fa\"\r\nimport { useQuery } from \"react-query\"\r\nimport { AseguradoChooser } from \"./AseguradoChooser\"\r\nimport { Asegurado, AseguradosService } from \"../services/AseguradosService\"\r\nimport moment from 'moment';\r\n\r\nexport type AseguradoInputs = {\r\n  asegurado: {\r\n    matricula: string\r\n    apellidoPaterno: string\r\n    apellidoMaterno: string\r\n    nombres: string\r\n    parentesco: string\r\n    estado: string\r\n    baja: {\r\n      fechaValidezSeguro: string\r\n    }\r\n    fechaExtincion: string\r\n  }\r\n  titular: {\r\n    matricula: string\r\n    apellidoPaterno: string\r\n    apellidoMaterno: string\r\n    nombres: string\r\n    estado: string\r\n    baja: {\r\n      fechaValidezSeguro: string\r\n    }\r\n  }\r\n  empleador: {\r\n    numeroPatronal: string\r\n    nombre: string\r\n    estado: string\r\n    fechaBaja: string\r\n    enMora: string\r\n  }\r\n}\r\n\r\nexport const AseguradoCard = (props: {\r\n  value: Asegurado | null\r\n  onChange(asegurado: Asegurado | null): void\r\n}) => {\r\n\r\n  const {\r\n    register,\r\n    formState,\r\n    trigger,\r\n    setValue,\r\n    clearErrors,\r\n    control,\r\n    watch\r\n  } = useFormContext<AseguradoInputs>()\r\n\r\n  const [aseguradoChooserVisible, showAseguradoChooser] = useState(false)\r\n\r\n  const asegurado = props.value\r\n  const matricula = watch(\"asegurado.matricula\")\r\n  const buscar = useQuery([\"asegurados.buscar\", matricula], () => {\r\n    return AseguradosService.buscarPorMatricula(matricula)\r\n  }, {\r\n    enabled: false,\r\n    onSuccess: ({ data: { records } }) => {\r\n      if (records.length == 1) {\r\n        const asegurado = records[0]\r\n        props.onChange(asegurado)\r\n      }\r\n      else {\r\n        showAseguradoChooser(true)\r\n      }\r\n    }\r\n  })\r\n\r\n  const getParentesco = (code: number) => {\r\n    switch(code){\r\n      case 1: return \"Hijo(a)\"\r\n      case 2: return \"Esposa\"\r\n      case 3: return \"Conviviente\"\r\n      case 4: return \"Madre\"\r\n      case 5: return \"Padre\"\r\n      case 6: return \"Hermano(a)\"\r\n      case 7: return \"Esposo\"\r\n      case 8: return \"Derechohabiente\"\r\n      default: return \"\"\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    const empleador = asegurado?.empleador\r\n    // setValue(\"asegurado.matricula\", asegurado?.matricula || \"\")\r\n    setValue(\"asegurado.apellidoPaterno\", asegurado?.apellidoPaterno || \"\")\r\n    setValue(\"asegurado.apellidoMaterno\", asegurado?.apellidoMaterno || \"\")\r\n    setValue(\"asegurado.nombres\", asegurado?.nombres || \"\")\r\n    setValue(\"asegurado.estado\", asegurado?.estadoText || \"\")\r\n    // const valSeguro = asegurado?.afiliacion?.baja?.fechaValidezSeguro\r\n    if(asegurado?.afiliacion?.baja?.fechaValidezSeguro) setValue(\"asegurado.baja.fechaValidezSeguro\",  moment(asegurado?.afiliacion?.baja?.fechaValidezSeguro).format('L'))\r\n    setValue(\"empleador.numeroPatronal\", empleador?.numeroPatronal || \"\")\r\n    setValue(\"empleador.nombre\", empleador?.nombre || \"\")\r\n    setValue(\"empleador.estado\", empleador?.estadoText || \"\")\r\n    setValue(\"empleador.fechaBaja\", empleador?.fechaBaja ? moment(empleador?.fechaBaja).format(\"L\") : \"\")\r\n    setValue(\"empleador.enMora\", empleador?.enMora ? \"Sí\" : empleador?.enMora === false ? \"No\" : \"\")\r\n\r\n    if(asegurado?.tipo == 2) {\r\n      const titular = asegurado?.titular\r\n      const extincion = asegurado?.afiliacion?.fechaExtincion\r\n      const parentesco = getParentesco(asegurado?.afiliacion?.parentesco);\r\n\r\n      setValue(\"asegurado.parentesco\", parentesco)\r\n      setValue(\"asegurado.fechaExtincion\", extincion ? moment(extincion).format('L') : \"\")\r\n      setValue(\"titular.matricula\", titular?.matricula || \"\")\r\n      setValue(\"titular.apellidoPaterno\", titular?.apellidoPaterno || \"\")\r\n      setValue(\"titular.apellidoMaterno\", titular?.apellidoMaterno || \"\")\r\n      setValue(\"titular.nombres\", titular?.nombres || \"\")\r\n      setValue(\"titular.estado\", titular?.estadoText)\r\n      // const valSeguroTit = titular?.afiliacion?.baja?.fechaValidezSeguro\r\n      if(titular?.afiliacion?.baja?.fechaValidezSeguro) setValue(\"titular.baja.fechaValidezSeguro\", moment(titular?.afiliacion?.baja?.fechaValidezSeguro).format('L'))\r\n    }\r\n  }, [asegurado])\r\n\r\n  useEffect(() => {\r\n    if (asegurado && formState.dirtyFields.asegurado?.matricula) {\r\n      props.onChange(null)\r\n    }\r\n  }, [matricula])\r\n\r\n  const formErrors = formState.errors\r\n  const hasErrors = formErrors.asegurado || formErrors.titular || formErrors.empleador\r\n\r\n  const buscarAseguradoHandler = () => {\r\n    trigger(\"asegurado.matricula\")\r\n      .then((validation) => {\r\n        if (!formErrors.asegurado?.matricula) {\r\n          if (formState.dirtyFields.asegurado?.matricula)\r\n            delete formState.dirtyFields.asegurado.matricula\r\n          clearErrors([\"asegurado\", \"titular\", \"empleador\"])\r\n          if (!buscar.data) {\r\n            buscar.refetch()\r\n          }\r\n          else {\r\n            const { data: { records } } = buscar.data\r\n            if (records.length == 1) {\r\n              const asegurado = records[0]\r\n              props.onChange(asegurado)\r\n            }\r\n            else {\r\n              showAseguradoChooser(true)\r\n            }\r\n          }\r\n        }\r\n      })\r\n  }\r\n\r\n  return <Card >\r\n    <Accordion.Toggle as={Card.Header} className={\"text-light \" + (hasErrors ? \"bg-danger\" : \"bg-primary\")} eventKey=\"0\">\r\n      Asegurado\r\n    </Accordion.Toggle>\r\n    <Accordion.Collapse eventKey=\"0\">\r\n      <Card.Body>\r\n        <div>\r\n          {(formErrors.asegurado as any)?.message ? <Alert variant=\"danger\">\r\n            {(formErrors.asegurado as any)?.message}\r\n          </Alert> : null}\r\n          <Form.Row>\r\n            <Form.Group as={Col} lg={3} md={6}>\r\n              <Form.Label htmlFor=\"asegurado-matricula\">\r\n                Matrícula\r\n              </Form.Label>\r\n              <InputGroup hasValidation>\r\n                <FormControl id=\"asegurado-matricula\"\r\n                  isInvalid={!!formErrors.asegurado?.matricula || buscar.isError}\r\n                  className=\"text-uppercase\" {...register(\"asegurado.matricula\")}\r\n                  aria-describedby=\"matriculaHelpBlock\" />\r\n                <InputGroup.Append >\r\n                  <Button variant={(formErrors.asegurado?.matricula || buscar.isError) ? \"outline-danger\" : \"outline-secondary\"} onClick={buscarAseguradoHandler}>\r\n                    {buscar.isFetching ? <Spinner animation=\"border\" size=\"sm\" /> : <FaSearch />}\r\n                  </Button>\r\n                </InputGroup.Append>\r\n                <Form.Control.Feedback type=\"invalid\">{\r\n                  (buscar.error as any)?.response?.status == 404 ? \"Asegurado no encontrado\" :\r\n                  \"Ocurrio un error al realizar la busqueda\"\r\n                }</Form.Control.Feedback>\r\n              </InputGroup>            \r\n              {!formErrors.asegurado?.matricula && !buscar.isError ? <Form.Text id=\"matriculaHelpBlock\" muted>Ej: 98-0824-ABC</Form.Text> : null}\r\n            </Form.Group>\r\n            <Form.Group as={Col} lg={3} md={6}>\r\n              <Form.Label>Apellido Paterno</Form.Label>\r\n              <Form.Control\r\n                readOnly\r\n                {...register(\"asegurado.apellidoPaterno\")}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col} lg={3} md={6}>\r\n              <Form.Label>Apellido Materno</Form.Label>\r\n              <Form.Control\r\n                readOnly\r\n                {...register(\"asegurado.apellidoMaterno\")}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col} lg={3} md={6}>\r\n              <Form.Label>Nombre</Form.Label>\r\n              <Form.Control\r\n                readOnly\r\n                {...register(\"asegurado.nombres\")}\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            {!!asegurado && <Form.Group as={Col} sm={3}>\r\n              <Form.Label>Estado</Form.Label>\r\n              <Form.Control\r\n                readOnly\r\n                className=\"text-uppercase\"\r\n                isInvalid={!!formErrors.asegurado?.estado}\r\n                {...register(\"asegurado.estado\")}\r\n              >\r\n              </Form.Control>\r\n              <Form.Control.Feedback type=\"invalid\">{formErrors.asegurado?.estado?.message}</Form.Control.Feedback>\r\n            </Form.Group>}\r\n            {asegurado?.tipo == 2 && <Form.Group as={Col} sm={3}>\r\n              <Form.Label>Parentesco</Form.Label>\r\n              <Form.Control\r\n                readOnly\r\n                className=\"text-uppercase\"\r\n                {...register(\"asegurado.parentesco\")}\r\n              />\r\n            </Form.Group>}\r\n            {asegurado?.afiliacion?.baja && <Form.Group as={Col} sm={3}>\r\n              <Form.Label>Validez del seguro</Form.Label>\r\n              <Form.Control\r\n                readOnly\r\n                isInvalid={!!formErrors.asegurado?.baja?.fechaValidezSeguro}\r\n                {...register(\"asegurado.baja.fechaValidezSeguro\")}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">{\r\n                formErrors.asegurado?.baja?.fechaValidezSeguro?.message\r\n              }</Form.Control.Feedback>\r\n            </Form.Group>}\r\n            {asegurado?.tipo == 2 ? <Form.Group as={Col} sm={3}>\r\n              <Form.Label>Fecha de extinción</Form.Label>\r\n              <Form.Control\r\n                readOnly\r\n                isInvalid={!!formErrors.asegurado?.fechaExtincion}\r\n                {...register(\"asegurado.fechaExtincion\")}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">{formErrors.asegurado?.fechaExtincion?.message}</Form.Control.Feedback>\r\n            </Form.Group> : null}\r\n          </Form.Row>\r\n        </div>\r\n        {asegurado?.tipo == 2 && <div /*className={asegurado.tipo == 2 ? \"\" : \"d-none\"}*/ >\r\n          {/* {watch(\"titular.id\") ? <> */}\r\n          <hr />\r\n          <h2 style={{ fontSize: \"1.25rem\" }}>Titular</h2>          \r\n          {(formErrors.titular as any)?.message ? <Alert variant=\"danger\">\r\n            {(formErrors.titular as any)?.message}\r\n          </Alert> : null}\r\n          <Form.Row>\r\n            <Form.Group as={Col} lg={3} md={6}>\r\n              <Form.Label>Matricula</Form.Label>\r\n              <Form.Control\r\n                readOnly\r\n                {...register(\"titular.matricula\")}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col} lg={3} md={6}>\r\n              <Form.Label>Apellido Paterno</Form.Label>\r\n              <Form.Control\r\n                readOnly\r\n                {...register(\"titular.apellidoPaterno\")}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col} lg={3} md={6}>\r\n              <Form.Label>Apellido Materno</Form.Label>\r\n              <Form.Control\r\n                readOnly\r\n                {...register(\"titular.apellidoMaterno\")}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col} lg={3} md={6}>\r\n              <Form.Label>Nombre</Form.Label>\r\n              <Form.Control\r\n                readOnly\r\n                {...register(\"titular.nombres\")}\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Form.Group as={Col} sm={4}>\r\n              <Form.Label>Estado</Form.Label>\r\n              <Form.Control\r\n                readOnly\r\n                className=\"text-uppercase\"\r\n                isInvalid={!!formErrors.titular?.estado}\r\n                {...register(\"titular.estado\")}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">{formErrors.titular?.estado?.message}</Form.Control.Feedback>\r\n            </Form.Group>\r\n            {asegurado?.titular?.afiliacion?.baja && <Form.Group as={Col} sm={4}>\r\n              <Form.Label>Validez del seguro</Form.Label>\r\n              <Form.Control\r\n                readOnly\r\n                isInvalid={!!formErrors.titular?.baja?.fechaValidezSeguro}\r\n                {...register(\"titular.baja.fechaValidezSeguro\")}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">{formErrors.titular?.baja?.fechaValidezSeguro?.message}</Form.Control.Feedback>\r\n            </Form.Group>}\r\n          </Form.Row>\r\n        </div>}\r\n        {!!asegurado && <div>\r\n          <hr />\r\n          <h2 style={{ fontSize: \"1.25rem\"}}>Empleador</h2>\r\n          {(formErrors.empleador as any)?.message ? <Alert variant=\"danger\">\r\n            {(formErrors.empleador as any)?.message}\r\n          </Alert> : null}\r\n          <Form.Row>\r\n            <Form.Group as={Col} md={3}>\r\n              <Form.Label>Nº Patronal</Form.Label>\r\n              <Form.Control\r\n                readOnly\r\n                isInvalid={!!formErrors.empleador?.numeroPatronal}\r\n                {...register(\"empleador.numeroPatronal\")}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">{formErrors.empleador?.numeroPatronal?.message}</Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group as={Col} md={9}>\r\n              <Form.Label>Nombre</Form.Label>\r\n              <Form.Control\r\n                readOnly\r\n                {...register(\"empleador.nombre\")}\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Form.Group as={Col} sm={3}>\r\n              <Form.Label>Estado</Form.Label>\r\n              <Form.Control\r\n                readOnly\r\n                className=\"text-uppercase\"\r\n                isInvalid={!!formErrors.empleador?.estado}\r\n                {...register(\"empleador.estado\")}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">{formErrors.empleador?.estado?.message}</Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group as={Col} sm={3}>\r\n              <Form.Label>Fecha de baja</Form.Label>\r\n              <Form.Control\r\n                readOnly\r\n                isInvalid={!!formErrors.empleador?.fechaBaja}\r\n                {...register(\"empleador.fechaBaja\")}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">{formErrors.empleador?.fechaBaja?.message}</Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group as={Col} sm={3}>\r\n              <Form.Label>En mora</Form.Label>\r\n              <Form.Control\r\n                readOnly\r\n                className=\"text-uppercase\"\r\n                isInvalid={!!formErrors.empleador?.enMora}\r\n                {...register(\"empleador.enMora\")}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">{formErrors.empleador?.enMora?.message}</Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Form.Row>\r\n        </div>}\r\n        <AseguradoChooser\r\n          title=\"Resultados\"\r\n          show={aseguradoChooserVisible}\r\n          asegurados={buscar.data?.data.records || []}\r\n          onSelect={(asegurado: Asegurado) => {\r\n            // asegurado.matricula = watch(\"asegurado.matricula\")\r\n            props.onChange(asegurado)\r\n            showAseguradoChooser(false)\r\n          }}\r\n          onHide={()=>showAseguradoChooser(false)}\r\n        />\r\n      </Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n}","export const EstadosAfi: {[k: number]: string} = {\r\n  1: \"Activo\",\r\n  2: \"Baja\"\r\n}","export const EstadosEmp: {[k: number]: string} = {\r\n  1: \"Activo\",\r\n  2: \"Baja\",\r\n  3: \"Baja temporal\"\r\n}","import { useEffect, useState } from \"react\"\r\nimport { AxiosError } from \"axios\"\r\nimport { Accordion, Alert, Breadcrumb, Button, Card, Col, Form, Spinner } from \"react-bootstrap\"\r\nimport { useForm, Controller, FormProvider } from \"react-hook-form\"\r\nimport { Link } from \"react-router-dom\"\r\nimport moment from \"moment\"\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as yup from \"yup\"\r\nimport { AseguradoCard, AseguradoInputs } from \"./AseguradoCard\"\r\nimport { useMutation } from \"react-query\"\r\nimport { Asegurado, SolicitudesAtencionExternaService } from \"../services\"\r\nimport { Regional, RegionalesTypeahead } from \"../../../../commons/components\"\r\nimport { useModal } from \"../../../../commons/reusable-modal\"\r\nimport { useUser } from \"../../../../commons/auth/hooks\"\r\nimport { superUserPolicyEnhancer } from \"../../../../commons/auth/utils\"\r\nimport { Medico, MedicosTypeahead } from \"../../medicos/components\"\r\nimport { Proveedor, ProveedoresTypeahead } from \"../../proveedores/components\"\r\nimport { EstadosAfi, EstadosEmp } from \"../utils\"\r\nimport { solicitudAtencionExternaPolicy } from \"../policies\"\r\nimport { proveedorPolicy } from \"../../proveedores\"\r\nimport { medicoPolicy } from \"../../medicos\"\r\n\r\ntype Inputs = AseguradoInputs & {\r\n  regional: Regional[]\r\n  medico: Medico[]\r\n  proveedor: Proveedor[]\r\n  prestacion: string\r\n}\r\n\r\nconst hoy = moment()\r\n\r\nconst estadoAfiSchema = function(asegurado: any, schema: any) {\r\n  schema.oneOf(Object.values(EstadosAfi), \"Estado desconocido\")\r\n  if(asegurado.afiliacion.baja)\r\n    return schema.notOneOf([EstadosAfi[1]], `El asegurado figura como activo, pero hay un registro de su baja con fecha ${asegurado.afiliacion.baja.fechaRegistro}.`)\r\n  else\r\n    return schema.notOneOf([EstadosAfi[2]], `El asegurado figura como dado de baja, aunque no se encontraron registros de la misma.`)\r\n}\r\n\r\nconst bajaAfiSchema = function(asegurado: any, schema: any) {\r\n  return asegurado.afiliacion.baja ? schema.shape({\r\n    fechaValidezSeguro: yup.date().format().emptyStringTo(null).nullable()\r\n      .min(hoy, \"El seguro ya no tiene validez\")\r\n      .required(\"Fecha sin especificar, se asume que el seguro ya no tiene validez\")\r\n  }) : schema\r\n}\r\n\r\nconst estadoEmpSchema = function(empleador: any, schema: any) {\r\n  schema.oneOf(Object.values(EstadosEmp), \"Estado desconocido\")\r\n  if(empleador.fechaBaja){\r\n    schema.notOneOf(EstadosEmp[1], \"El empleador figura como activo, pero tiene fecha de baja\")\r\n  }\r\n  return schema\r\n}\r\n\r\nconst schema = yup.object().shape({\r\n  asegurado: yup.object().when(\"$asegurado\", function(asegurado: any, schema: any) {\r\n    if(!asegurado) return schema.test(\"\", \"\", function(value: any, context: any){\r\n      return context.createError({\r\n        message: \"Debe proporcionar los datos del afiliado\"\r\n      })\r\n    })\r\n    else return schema.shape({\r\n      matricula: yup.string().label(\"matricula\").trim().uppercase().required(),  // .matches(/^\\d{2}-\\d{4}-[a-zA-ZñÑ]{2,3}$/, \"Formato incorrecto.\"),\r\n      estado: estadoAfiSchema(asegurado, yup.string().label(\"estado\")),\r\n      fechaExtincion: yup.date().format().emptyStringTo(null).nullable().label(\"fecha de extinsion\").notRequired()\r\n        .min(hoy.toDate(), \"Fecha de extinsion alcanzada\"),\r\n      baja: bajaAfiSchema(asegurado, yup.object())\r\n    })\r\n  }),\r\n  titular: yup.object().when(\"$asegurado\", function(asegurado: any, schema: any){\r\n    if(asegurado?.tipo == 2) {\r\n      if(!asegurado.titular){\r\n        return schema.oneOf([NaN], \"No se encontraron datos del titular\")\r\n      }\r\n      if(asegurado?.afiliacion?.parentesco != 8)\r\n        return schema.shape({\r\n          estado: estadoAfiSchema(asegurado.titular, yup.string().label(\"estado\")),\r\n          baja: bajaAfiSchema(asegurado, yup.object())\r\n        })\r\n    }\r\n  }),\r\n  empleador: yup.object().when(\"$asegurado\", function(asegurado: any, schema: any){\r\n    if(asegurado){\r\n      const empleador = asegurado.empleador\r\n      return !!empleador ? schema.shape({\r\n        estado: estadoEmpSchema(empleador, yup.string().label(\"estado\")),\r\n        fechaBaja: yup.date().format().emptyStringTo(null).nullable().when(\"estado\", {\r\n          is: (estado: string) => estado == EstadosEmp[2] || estado == EstadosEmp[3],\r\n          then: (schema) => schema.required(\"Fecha sin especificar, se asume que el seguro ya no tiene validez\")\r\n                   .min(hoy.subtract(2, \"months\").toDate(), \"Han pasado mas de 2 meses desde la baja, el seguro ya no tiene validez\")\r\n        }),\r\n        enMora: yup.string().oneOf([\"No\"], \"El empleador esta en mora\")\r\n      }) : schema.oneOf([NaN], \"No se encontraron datos del empleador\")\r\n    }\r\n  }),\r\n  regional: yup.array().length(1, \"Debe seleccionar una regional\"),\r\n  medico: yup.array().length(1, \"Debe indicar el medico que realiza la solicitud\"),\r\n  proveedor: yup.array().length(1, \"Debe indicar el proveedor que brindará el servicio\"),\r\n  prestacion: yup.string().trim().uppercase().required(\"Debe indicar la prestacion que se solicita\").max(100)\r\n})\r\n\r\nexport const SolicitudAtencionExternaForm = ()=>{\r\n  const [asegurado, setAsegurado] = useState<Asegurado|null>(null)\r\n  \r\n  const formMethods = useForm<Inputs>({\r\n    mode: \"onBlur\",\r\n    context: {\r\n      asegurado\r\n    },\r\n    resolver: yupResolver(schema),\r\n    defaultValues: {\r\n      asegurado: {},\r\n      titular: {},\r\n      empleador: {},\r\n      regional: [],\r\n      medico: [],\r\n      proveedor: [],\r\n      prestacion: \"\"\r\n    }\r\n  })\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState,\r\n    control,\r\n    reset,\r\n    setValue,\r\n    setError,\r\n    watch\r\n  } = formMethods\r\n\r\n  const dm11Viewer = useModal(\"pdfModal\")\r\n\r\n  const user = useUser()\r\n  \r\n  const registrar = useMutation((values: Inputs)=>{\r\n    return SolicitudesAtencionExternaService.registrar(\r\n      values.regional![0].id,\r\n      asegurado!.id,\r\n      values.medico![0].id,\r\n      values.proveedor![0].id,\r\n      values.prestacion\r\n    )\r\n  }, {\r\n    onSuccess: ({data: {urlDm11, regionalId}}) => {\r\n      reset()\r\n      if(superUserPolicyEnhancer(solicitudAtencionExternaPolicy.emit)(user, { regionalId })){\r\n        dm11Viewer.open({url: urlDm11, title: \"Formulario D.M. - 11\"})\r\n        setAsegurado(null)\r\n      }\r\n    }\r\n  })\r\n\r\n  const formErrors = formState.errors\r\n  const registrarError = registrar.error as AxiosError\r\n\r\n  useEffect(()=>{\r\n    if(registrarError?.response?.status == 422){\r\n      const {errors} = registrarError.response?.data\r\n      Object.keys(errors).forEach((key: any)=>{\r\n        let localKey = key\r\n        if(key == \"asegurado.id\") localKey = \"asegurado.matricula\"\r\n        if(key == \"empleador.aportes\") localKey = \"empleador.enMora\"\r\n        setError(localKey, {type: \"serverError\", message: errors[key]})\r\n      })\r\n    }\r\n  }, [registrarError])\r\n\r\n  const renderAlert = ()=>{\r\n    if(registrar.isSuccess){\r\n      return <Alert variant=\"success\">\r\n        La operacion se realizó exitosamente\r\n      </Alert>\r\n    }\r\n    if(registrar.isError){\r\n      const error = registrar.error as AxiosError\r\n      return <Alert variant=\"danger\">\r\n        {error.response?.data?.message || error.message}\r\n      </Alert>\r\n    }\r\n    return null\r\n  }\r\n\r\n  return <FormProvider {...formMethods}>\r\n    <Breadcrumb>\r\n      <Breadcrumb.Item linkAs={Link} linkProps={{to: \"/clinica/atencion-externa\"}}>Solicitudes de atencion externa</Breadcrumb.Item>\r\n      <Breadcrumb.Item active>Registro</Breadcrumb.Item>\r\n    </Breadcrumb>\r\n    <Form onSubmit={handleSubmit((values)=>{\r\n      registrar.mutate(values)\r\n    })}>\r\n      {/* <h1 style={{fontSize: \"1.75rem\"}}>Solicitud de atención externa</h1> */}\r\n      {renderAlert()}\r\n      <Accordion className=\"mt-3\"  defaultActiveKey=\"0\">\r\n        <AseguradoCard value={asegurado} onChange={(asegurado)=>{\r\n          setAsegurado(asegurado)\r\n        }} />\r\n        <Card className=\"overflow-visible\">\r\n          <div className=\"overflow-hidden\">\r\n            <Accordion.Toggle as={Card.Header} className={\"text-light \" + (formErrors.regional ? \"bg-danger\" : \"bg-primary\")} eventKey=\"1\">\r\n              Regional\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"1\">\r\n              <Card.Body>\r\n                <Form.Row>\r\n                  <Form.Group as={Col} className=\"position-unset\">\r\n                    <Form.Label>Nombre</Form.Label>\r\n                    <Controller \r\n                      control={control}\r\n                      name=\"regional\"\r\n                      render={({field, fieldState})=>{\r\n                        return <RegionalesTypeahead\r\n                          //@ts-ignore\r\n                          style={{textTransform: \"uppercase\"}}                        \r\n                          inputProps={{\r\n                            style: {textTransform: \"uppercase\"}\r\n                          }}\r\n                          id=\"solicitud-atencion-externa-form/regionales\"\r\n                          filterBy={(regional: Regional)=>{\r\n                            return solicitudAtencionExternaPolicy.registerByRegionalOnly(user, {regionalId: regional.id}) !== false\r\n                          }}\r\n                          isInvalid={!!fieldState.error}\r\n                          feedback={fieldState.error?.message}\r\n                          selected={field.value}\r\n                          onBlur={field.onBlur}\r\n                          onChange={(regional)=>{\r\n                            setValue(\"medico\", [])\r\n                            setValue(\"proveedor\", [])\r\n                            field.onChange(regional)\r\n                          }}\r\n                        />\r\n                      }}\r\n                    />\r\n                  </Form.Group> \r\n                </Form.Row>\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </div>\r\n        </Card>\r\n        <Card className=\"overflow-visible\">\r\n          <div className=\"overflow-hidden\">\r\n            <Accordion.Toggle as={Card.Header}  className={\"text-light \" + (formErrors.medico ? \"bg-danger\" : \"bg-primary\")} eventKey=\"2\">\r\n              Médico\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"2\">\r\n              <Card.Body>\r\n                <Controller\r\n                  control={control}\r\n                  name=\"medico\"\r\n                  render={({field, fieldState})=>{\r\n                    return <Form.Row>\r\n                      <Form.Group as={Col} sm={8} className=\"position-unset\">\r\n                        <Form.Label>Nombre</Form.Label>\r\n                        <MedicosTypeahead\r\n                          id=\"medicos-typeahead\"\r\n                          //@ts-ignore\r\n                          feedback={fieldState.error?.message}\r\n                          disabled={watch(\"regional\").length == 0}\r\n                          filter={{\r\n                            regionalId: medicoPolicy.viewByRegionalOnly(user) ? user!.regionalId : watch(\"regional\").length && watch(\"regional\")[0].id,\r\n                            estado: 1\r\n                          }}\r\n                          className=\"text-uppercase\"\r\n                          isInvalid={!!fieldState.error}\r\n                          selected={field.value}\r\n                          onBlur={field.onBlur}\r\n                          onChange={field.onChange}\r\n                        />\r\n                      </Form.Group>\r\n                      <Form.Group as={Col} sm={4}>\r\n                        <Form.Label>Especialidad</Form.Label>\r\n                        <Form.Control\r\n                          readOnly\r\n                          style={{textTransform: \"uppercase\"}}\r\n                          // isInvalid={!!formState.errors.especialidad}\r\n                          value={field.value.length ? field.value[0].especialidad : \"\"}\r\n                        />\r\n                      </Form.Group>\r\n                    </Form.Row>\r\n                  }}\r\n                />\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </div>\r\n        </Card>\r\n        \r\n        <Card className=\"overflow-visible\">\r\n          <div className=\"overflow-hidden\">\r\n            <Accordion.Toggle as={Card.Header}  className={\"text-light \" + (formErrors.medico ? \"bg-danger\" : \"bg-primary\")} eventKey=\"3\">\r\n              Servicio solicitado\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey=\"3\">\r\n              <Card.Body>\r\n                <Controller\r\n                  control={control}\r\n                  name=\"proveedor\"\r\n                  render={({field, fieldState})=>{\r\n                    return <Form.Row>                  \r\n                      <Form.Group as={Col} sm={8} className=\"position-unset\">\r\n                        <Form.Label>Proveedor</Form.Label>\r\n                        <ProveedoresTypeahead\r\n                            id=\"proveedores-typeahead\"\r\n                            //@ts-ignore\r\n                            feedback={fieldState.error?.message}\r\n                            disabled={watch(\"regional\").length == 0}\r\n                            filter={{\r\n                              regionalId: proveedorPolicy.viewByRegionalOnly(user) ? user!.regionalId : watch(\"regional\").length && watch(\"regional\")[0].id,\r\n                              estado: 1\r\n                            }}\r\n                            className=\"text-uppercase\"\r\n                            isInvalid={!!fieldState.error}\r\n                            selected={field.value}\r\n                            onBlur={field.onBlur}\r\n                            onChange={field.onChange}\r\n                        />\r\n                      </Form.Group>\r\n                      {(field.value.length && field.value[0].tipo == 1) ? <Form.Group as={Col} sm={4}>\r\n                        <Form.Label>Especialidad</Form.Label>\r\n                        <Form.Control\r\n                          readOnly\r\n                          style={{textTransform: \"uppercase\"}}\r\n                          // isInvalid={!!formState.errors.especialidad}\r\n                          value={field.value[0].especialidad}\r\n                        />\r\n                      </Form.Group> : null}\r\n                    </Form.Row>\r\n                  }}\r\n                />\r\n                <Form.Row>\r\n                  <Form.Group as={Col}>\r\n                    <Form.Label>Prestación</Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      style={{textTransform: \"uppercase\"}}\r\n                      isInvalid={!!formState.errors.prestacion}\r\n                      aria-describedby=\"prestacionHelpBlock\"\r\n                      {...register(\"prestacion\")}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">{formState.errors.prestacion?.message}</Form.Control.Feedback>\r\n                    {!formState.errors.prestacion ? <Form.Text id=\"prestacionHelpBlock\" muted>{`${watch(\"prestacion\").length}/100` }</Form.Text> : null}\r\n                  </Form.Group>\r\n                </Form.Row>\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </div>\r\n        </Card>\r\n      </Accordion>\r\n      <Button className=\"mt-3\" type=\"submit\">\r\n        {registrar.isLoading ? <Spinner className=\"mr-2\" animation=\"border\" size=\"sm\"/> : null}\r\n        <span>Guardar</span>\r\n      </Button>\r\n    </Form>\r\n  </FormProvider>\r\n}","import { useMemo } from \"react\"\r\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\r\nimport SidebarLayout from '../../commons/components/layouts/SidebarLayout';\r\nimport { FaProcedures, /*FaCoins,*/ FaHandshake, FaUserMd } from 'react-icons/fa';  \r\nimport { GiRodOfAsclepius } from 'react-icons/gi';  \r\nimport { FcDebt } from '../../commons/components/icons/FcDebt';\r\nimport { BiTransfer } from 'react-icons/bi';\r\nimport ListaMoraIndex from './mora/components/ListaMoraIndex';\r\nimport ListaMoraItemForm from './mora/components/ListaMoraItemForm';\r\nimport { listaMoraPolicy } from \"./mora/policies\";\r\nimport { \r\n  SolicitudAtencionExternaIndex,\r\n  SolicitudAtencionExternaForm,\r\n  solicitudAtencionExternaPolicy\r\n} from './solicitud_atencion_externa';\r\nimport { \r\n  MedicosIndex, \r\n  MedicoView, \r\n  MedicoForm, \r\n  medicoPolicy } from './medicos';\r\nimport { \r\n  ProveedoresIndex,\r\n  ProveedorView,\r\n  ProveedorForm,\r\n  proveedorPolicy } from \"./proveedores\"\r\nimport { ProtectedRoute, useUser } from '../../commons/auth';\r\nimport { superUserPolicyEnhancer } from '../../commons/auth/utils';\r\nimport { Image } from \"react-bootstrap\";\r\n\r\nexport const ClinicaApp = ()=>{\r\n  const { url } = useRouteMatch()\r\n  const user = useUser()\r\n\r\n  const sidebarItems = useMemo(()=>{\r\n    const items = [] as any[]\r\n\r\n    if(superUserPolicyEnhancer(listaMoraPolicy.index)(user)){\r\n      items.push(\r\n        {\r\n          id: \"lista-mora\",\r\n          path: `${url}/lista-mora`,\r\n          title: \"Lista de mora\",\r\n          icon: <FcDebt  />\r\n        }\r\n      )\r\n    }\r\n    \r\n    if(superUserPolicyEnhancer(solicitudAtencionExternaPolicy.index)(user)) {\r\n      items.push({\r\n        id: \"atencion-externa\",\r\n        path: `${url}/atencion-externa`,\r\n        title: \"Atención externa\",\r\n        icon: <BiTransfer />\r\n      })\r\n    }\r\n\r\n    if(superUserPolicyEnhancer(medicoPolicy.index)){\r\n      items.push({\r\n        id: \"medicos\",\r\n        path: `${url}/medicos`,\r\n        title: \"Medicos\",\r\n        icon: <FaUserMd />,\r\n      })\r\n    }\r\n\r\n    if(superUserPolicyEnhancer(proveedorPolicy.index)(user)){\r\n      items.push({\r\n        id: \"proveedores\",\r\n        path: `${url}/proveedores`,\r\n        title: \"Proveedores\",\r\n        icon: <FaHandshake />\r\n      })\r\n    }\r\n\r\n    // items.push(\r\n    //       {\r\n    //         id: \"especialidades\",\r\n    //         path: `${url}/especialidades`,\r\n    //         title: \"Especialidades\",\r\n    //         icon: <GiRodOfAsclepius />,\r\n    //       },\r\n    //       {\r\n    //         id: \"prestaciones\",\r\n    //         path: `${url}/prestaciones`,\r\n    //         title: \"Prestaciones\",\r\n    //         icon: <FaProcedures />,\r\n    //       }\r\n    // )\r\n    return items\r\n  }, [user])\r\n\r\n  return <SidebarLayout sidebar={{\r\n    header: <div className=\"d-flex justify-content-center\"><Image src=\"/logo-lg.png\" /></div>,\r\n    items: sidebarItems\r\n  }}>\r\n    <Switch>\r\n      <ProtectedRoute exact path={`${url}/lista-mora/agregar`}\r\n        authorize={(user) => listaMoraPolicy.register(user)}>\r\n        <ListaMoraItemForm />\r\n      </ProtectedRoute>\r\n      <ProtectedRoute path={`${url}/lista-mora`}\r\n        authorize={listaMoraPolicy.index}>\r\n        <ListaMoraIndex />\r\n      </ProtectedRoute>\r\n      <ProtectedRoute exact path={`${url}/atencion-externa`}\r\n        authorize={solicitudAtencionExternaPolicy.index}>\r\n        <SolicitudAtencionExternaIndex />\r\n      </ProtectedRoute>\r\n      <ProtectedRoute exact path={`${url}/atencion-externa/registrar`}\r\n        authorize={(user) => solicitudAtencionExternaPolicy.register(user)}\r\n      >\r\n        <SolicitudAtencionExternaForm />\r\n      </ProtectedRoute>\r\n      <ProtectedRoute exact path={`${url}/medicos`}\r\n        authorize={medicoPolicy.index}\r\n      >\r\n        <MedicosIndex />\r\n      </ProtectedRoute>\r\n      <ProtectedRoute exact path={[`${url}/medicos/registrar`, `${url}/medicos/:id/editar`]}\r\n        authorize={(user, path) => path == `${url}/medicos/registrar` ? medicoPolicy.register(user) : medicoPolicy.edit(user) }\r\n      >\r\n        <MedicoForm />\r\n      </ProtectedRoute>\r\n      <ProtectedRoute exact path={`${url}/medicos/:id`}\r\n        authorize={(user)=>medicoPolicy.view(user)}\r\n      >\r\n        <MedicoView />\r\n      </ProtectedRoute>\r\n      <ProtectedRoute exact path={`${url}/proveedores`}\r\n        authorize={proveedorPolicy.index}\r\n      >\r\n        <ProveedoresIndex />\r\n      </ProtectedRoute>\r\n      <ProtectedRoute exact path={[`${url}/proveedores/registrar`, `${url}/proveedores/:id/editar`]}\r\n        authorize={(user, path)=> path == `${url}/proveedores/registrar` ? proveedorPolicy.register(user) : proveedorPolicy.edit(user)}\r\n      >\r\n        <ProveedorForm />\r\n      </ProtectedRoute>\r\n      <ProtectedRoute exact path={`${url}/proveedores/:id`}\r\n        authorize={(user)=>proveedorPolicy.view(user)}\r\n      >\r\n        <ProveedorView />\r\n      </ProtectedRoute>\r\n    </Switch>\r\n  </SidebarLayout>\r\n}\r\n\r\nexport default ClinicaApp","import React, { useState} from \"react\"\r\nimport { Button, Col, Collapse, Form, InputGroup, Table } from \"react-bootstrap\"\r\nimport {FaFilter, FaSearch, FaSync} from \"react-icons/fa\"\r\nimport { Pagination } from \"./Pagination\"\r\nimport { Page } from \"../services/Page\"\r\nimport { User, ProtectedContent } from \"../auth\"\r\nimport { SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG } from \"constants\"\r\n\r\ntype Props<Data> = {\r\n  page: Page\r\n  total: number\r\n  data?: Data[]\r\n  isLoading: boolean,\r\n  hasError: boolean,\r\n  policy: {\r\n    view(user: User): boolean | undefined\r\n    register(user: User): boolean | undefined\r\n  }\r\n  renderLoader: () => React.ReactElement\r\n  renderData: (item: Data, index: number) => React.ReactElement\r\n  renderDataHeaders: () => React.ReactElement\r\n  renderFilterForm?: () => React.ReactElement\r\n  renderCreateButton: () => React.ReactElement\r\n  onRefetch: () => void\r\n  onPageChange: (page: Page) => void\r\n  onSearch?: (search: string) => void\r\n}\r\n\r\nexport function IndexTemplate<Data>({\r\n  total,\r\n  page,\r\n  data,\r\n  isLoading,\r\n  hasError,\r\n  policy,\r\n  onSearch,\r\n  onRefetch,\r\n  onPageChange,\r\n  renderLoader,\r\n  renderData,\r\n  renderDataHeaders,\r\n  renderCreateButton,\r\n  renderFilterForm\r\n}: Props<Data>) {\r\n  \r\n  const [ search, setSearch ] = useState(\"\")\r\n  const [ showFilterForm, setShowFilterForm] = useState(false)\r\n\r\n  const renderRows = ()=>{\r\n    if(data){\r\n      if(data.length === 0){\r\n        return  <tr>\r\n          <td className=\"bg-light text-center\" colSpan={100}>\r\n            No se encontraron resultados\r\n          </td>\r\n      </tr>\r\n      }\r\n      return data.map(renderData)\r\n    }\r\n    if (isLoading) {\r\n      return renderLoader()\r\n    }\r\n    if (hasError) {\r\n      return <tr>\r\n        <td className=\"bg-danger text-light text-center\" colSpan={100}>\r\n          Ocurrió un error al realizar la solicitud\r\n        </td>\r\n      </tr>\r\n    }\r\n    return null\r\n  }\r\n\r\n  return <div>\r\n    <div className=\"d-flex my-2\">\r\n      <Form.Row className=\"ml-auto flex-nowrap\" >\r\n        <ProtectedContent\r\n          authorize={policy.view}\r\n        >\r\n          <Col xs=\"auto\" >\r\n            <Button onClick={()=>{\r\n              onRefetch()\r\n            }}><FaSync /></Button>\r\n          </Col>\r\n          {renderFilterForm ? <Col xs=\"auto\" >\r\n            <Button onClick={()=>{\r\n              setShowFilterForm(visible=>!visible)\r\n            }}><FaFilter /></Button>\r\n          </Col> : null}\r\n        </ProtectedContent>\r\n        <ProtectedContent\r\n          authorize={policy.register}\r\n        >\r\n          <Col xs=\"auto\">\r\n            {renderCreateButton()}\r\n          </Col>\r\n        </ProtectedContent>\r\n      </Form.Row>\r\n    </div>\r\n    <ProtectedContent\r\n      authorize={policy.view}\r\n    >\r\n      {renderFilterForm ? <Collapse in={showFilterForm}>\r\n        <div className=\"mb-2\">\r\n          {renderFilterForm()}\r\n        </div>\r\n      </Collapse> : null}\r\n      <Form.Row className=\"mb-2\">\r\n        {onSearch ? <Col className=\"mb-2\">\r\n          {/* <Form.Row className=\"flex-nowrap\">\r\n            <Col>\r\n              <Form.Control aria-label=\"Busqueda\" type=\"search\" />\r\n            </Col>\r\n            <Col xs={\"auto\"}>\r\n              <Button className=\"ml-2\" type=\"submit\"><FaSearch /></Button>\r\n            </Col>\r\n          </Form.Row> */}\r\n          <InputGroup>\r\n              <Form.Control aria-label=\"Busqueda\" type=\"search\" value={search} onChange={(e)=>{\r\n                setSearch(e.target.value)\r\n              }} />\r\n              <InputGroup.Append>\r\n                <Button onClick={()=>{\r\n                  onSearch(search)\r\n                }}><FaSearch /></Button>\r\n              </InputGroup.Append>\r\n          </InputGroup>\r\n        </Col> : null}\r\n        <Col className=\"ml-auto\" xs={\"auto\"}>\r\n          <div className=\"d-flex flex-row flex-nowrap align-items-center\">\r\n            <span>Mostrar</span>\r\n            <Form.Label htmlFor=\"pageSizeSelector\" srOnly>Tamaño de pagina</Form.Label>\r\n            <Form.Control id=\"pageSizeSelector\" className=\"mx-2\" as=\"select\" value={page.size} onChange={(e) => {\r\n              const value = e.target.value\r\n              onPageChange({\r\n                current: 1,\r\n                size: parseInt(value)\r\n              })\r\n            }}>\r\n              <option value={10}>10</option>\r\n              <option value={20}>20</option>\r\n              <option value={30}>30</option>\r\n              <option value={50}>50</option>\r\n              <option value={100}>100</option>\r\n            </Form.Control>\r\n            <span>filas</span>\r\n          </div>\r\n        </Col>\r\n      </Form.Row>\r\n      <Table responsive>\r\n        <thead>\r\n          {renderDataHeaders()}\r\n        </thead>\r\n        <tbody className=\"text-uppercase\">\r\n          {renderRows()}\r\n        </tbody>\r\n      </Table>\r\n      <Form.Row>\r\n        <Col className=\"mr-auto\" xs=\"auto\">\r\n          {total > 0 ? <span style={{whiteSpace: \"nowrap\"}}>Se encontraron {total} resultados</span> : \"\"}\r\n        </Col>\r\n        <Col className=\"ml-auto\" xs=\"auto\">\r\n          <Pagination\r\n            current={page.current}\r\n            total={Math.ceil(total / page.size)}\r\n            onChange={(current) => onPageChange({ ...page, current })}\r\n          />\r\n        </Col>\r\n      </Form.Row>\r\n    </ProtectedContent>\r\n  </div>\r\n}","import { RefObject, useEffect } from 'react'\r\n\r\ntype AnyEvent = MouseEvent | TouchEvent\r\n\r\nexport function useOnClickOutside<T extends HTMLElement = HTMLElement>(\r\n  ref: RefObject<T>,\r\n  handler: (event: AnyEvent) => void,\r\n) {\r\n  useEffect(() => {\r\n    const listener = (event: AnyEvent) => {\r\n      const el = ref?.current\r\n\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!el || el.contains(event.target as Node) || document.querySelector('html') == event.target) {\r\n        return\r\n      }\r\n      handler(event)\r\n    }\r\n\r\n    document.addEventListener(`mousedown`, listener)\r\n    document.addEventListener(`touchstart`, listener)\r\n\r\n    return () => {\r\n      document.removeEventListener(`mousedown`, listener)\r\n      document.removeEventListener(`touchstart`, listener)\r\n    }\r\n\r\n    // Reload only if ref or handler changes\r\n  }, [ref, handler])\r\n}\r\n\r\nexport default useOnClickOutside\r\n","import { FC, useRef, ComponentProps } from 'react'\r\nimport { useOnClickOutside } from './useOnClickOutside'\r\n\r\ntype Props = {\r\n  onClickOutside: (event: MouseEvent | TouchEvent) => void\r\n} & ComponentProps<\"div\">\r\nexport const ClickOutsideHandler:FC<Props> = ({children, onClickOutside, ...props}) => {\r\n  const containerRef = useRef<HTMLDivElement>(null)\r\n  useOnClickOutside(containerRef, onClickOutside)\r\n  return <div ref={containerRef} {...props}>\r\n    {children}\r\n  </div>\r\n}","import React, { ComponentProps } from 'react'\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport { Link, useRouteMatch } from 'react-router-dom'\r\n\r\ntype MenuItem = {\r\n  id: string,\r\n  title: string,\r\n  path: string,\r\n  icon?: React.ReactNode,\r\n  items?: undefined\r\n} | {\r\n  id: string,\r\n  title: string,\r\n  path?: string,\r\n  icon?: React.ReactNode,\r\n  items: {\r\n    id: string,\r\n    title: string,\r\n    path: string,\r\n    icon?: React.ReactNode,\r\n  }[]\r\n}\r\n\r\nconst SidebarItem = (item: MenuItem)=>{\r\n  const match = useRouteMatch(item.path || \"\")\r\n\r\n  return <>\r\n    {item.path ?\r\n      <ListGroup.Item as={Link} to={item.path} \r\n        action\r\n        active={!!match}\r\n        className=\"text-nowrap sidebar-navitem\"\r\n        style={{\r\n          padding: \".5rem 1rem\",\r\n          borderLeft: !!match ? \"0.25rem solid #f28c2b\" : 0\r\n        }}\r\n        key={item.id}>\r\n          <span className=\"sidebar-navitem-icon\">{item.icon}</span><span className=\"sidebar-navitem-title\">{item.title}</span>\r\n      </ListGroup.Item> : \r\n      <div\r\n        className=\"list-group-item border-0 text-nowrap\"\r\n        style={{\r\n          padding: \".5rem 1rem\"\r\n        }}\r\n        key={item.id}>\r\n          <span className=\"sidebar-navitem-icon\">{item.icon}</span><span className=\"sidebar-navitem-title\">{item.title}</span>\r\n      </div>\r\n    }\r\n    {item.items && item.items.map(subitem=>{\r\n      return <Link to={subitem.path} \r\n        style={{\r\n          padding: \".5rem 1rem\",\r\n          paddingLeft: \"2rem\"\r\n        }}\r\n        className=\"list-group-item list-group-item-action  border-left-3 text-nowrap\" \r\n        key={subitem.id}>\r\n          {subitem.icon || null}<span style={{verticalAlign: 'middle', marginLeft: '0.5rem'}}>{subitem.title}</span>\r\n      </Link>\r\n    })}\r\n  </>\r\n}\r\n\r\nexport type SidebarProps = ComponentProps<\"div\"> & {\r\n  side?: 'left' | 'right',\r\n  header?: string | JSX.Element,\r\n  items?: MenuItem[],\r\n  renderItem?: (item: MenuItem) => JSX.Element\r\n}\r\nexport const Sidebar = (props: SidebarProps) => {\r\n  const {className=\"\", side=\"right\", header=\"\", items=[], renderItem} = props\r\n  const borderClass = {left: 'border-left', right: 'border-right'}\r\n  return <div className={`${className}  ${borderClass[side]}`} id=\"sidebar-wrapper\">\r\n    <div className=\"sidebar-heading\">\r\n      <div className=\"sidebar-heading-content\">{header}</div>\r\n    </div>\r\n    <hr className=\"mx-2\"></hr>\r\n    <div className=\"sidebar-menu\">\r\n      <ListGroup variant=\"flush\">\r\n        {items.map(item=>(\r\n          <SidebarItem key={item.id} {...item} />\r\n        ))}      \r\n      </ListGroup>\r\n    </div>\r\n  </div>\r\n  \r\n}","import React from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { ClickOutsideHandler } from '../../click-outside-handler'\r\nimport { Sidebar, SidebarProps } from './Sidebar'\r\nimport \"./simple-sidebar.css\"\r\n\r\ntype Props = {\r\n  sidebar: SidebarProps\r\n  children: React.ReactNode\r\n}\r\nexport const SidebarLayout = ({sidebar, children}: Props) => {\r\n  const showSidebar = useSelector((state:any) => state.sidebarVisibility)\r\n  const dispatch = useDispatch()\r\n\r\n  const onClickOutsideHandler = React.useCallback((event: MouseEvent | TouchEvent)=>{\r\n    const toggle = document.querySelector('[aria-label=\"Toggle navigation\"]')\r\n    if(!toggle?.contains(event.target as Node)){\r\n      dispatch({\r\n        type: \"CLOSE_SIDEBAR\"\r\n      })\r\n    }\r\n  }, [showSidebar])\r\n  \r\n  return <div className={\"position-relative d-flex flex-grow-1 bg-light\" + (showSidebar ? \"\" : \" collapsed\")}  id=\"wrapper\">\r\n    <ClickOutsideHandler className=\"shadow-sm\" style={{zIndex: 100}} onClickOutside={onClickOutsideHandler}>\r\n      <Sidebar className=\"bg-white shadow-sm\" {...sidebar}/>\r\n    </ClickOutsideHandler>\r\n    <div className=\"overflow-auto\" style={{width: \"100%\"}}>\r\n      <Container className=\"d-flex flex-column\">\r\n        <div className=\"d-flex flex-column bg-white rounded-lg shadow-sm m-2 p-3 flex-grow-1\">\r\n          {children}\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default SidebarLayout"],"names":["FcDebt","props","GenIcon","EmpleadorService","page","filter","apiClient","params","keysToUnderscore","ListaMoraService","idEmpleador","empleador_id","id","ListaMoraFilterForm","useForm","handleSubmit","register","reset","Form","onSubmit","inputs","nombre","numeroPatronal","onApply","as","Col","sm","htmlFor","xs","Button","type","variant","onClick","listaMoraPolicy","index","user","view","context","byRegionalOnly","viewByRegionalOnly","undefined","can","regionalId","registerByRegionalOnly","remove","removeByRegionalOnly","RowOptions","item","queryKey","modal","useModal","queryClient","useQueryClient","quitar","useMutation","onSuccess","close","setQueryData","oldData","data","records","i","useEffect","status","open","state","console","error","Dropdown","VerticalEllipsisDropdownToggle","authorize","className","href","window","confirm","mutate","useState","current","size","setPage","useUser","defaultFilter","setFilter","canView","superUserPolicyEnhancer","buscar","useQuery","enabled","refetchOnWindowFocus","refetchOnReconnect","totalRef","useRef","meta","total","loader","useMemo","rows","push","scope","Breadcrumb","active","IndexTemplate","I","policy","isLoading","isFetching","hasError","isError","renderLoader","renderData","empleadorId","regional","style","textTransform","renderDataHeaders","width","minWidth","renderFilterForm","renderCreateButton","Link","to","onPageChange","onRefetch","refetch","throwOnError","EmpleadorChooser","Modal","title","Table","responsive","empleadores","length","map","empleador","onSelect","colSpan","schema","yup","shape","when","test","value","createError","message","setEmpleador","resolver","yupResolver","watch","setError","clearErrors","setValue","formErrors","trigger","formState","errors","showChooser","setShowChooser","history","useHistory","buscarEmpleador","guardar","invalidateQueries","replace","response","Object","keys","forEach","key","localKey","onChangeNumeroPatronal","onChange","numeroPatronalField","linkAs","linkProps","Alert","isSuccess","renderAlert","InputGroup","hasValidation","isInvalid","e","Spinner","animation","readOnly","show","onHide","SolicitudesAtencionExternaService","regional_id","paciente_id","medico_id","proveedor_id","prestacion","MedicosService","medico","estado","medicoPolicy","edit","editByRegionalOnly","updateStatus","updateStatusByRegionalOnly","numCi","nonEmpty","nullable","is","then","required","otherwise","optional","compCi","uppercase","especialidad","MedicosFilterForm","defaultValues","control","ci","raiz","parseInt","complemento","onFilter","md","lg","padding","paddingTop","marginBottom","fontSize","name","render","field","ref","fieldState","selected","log","height","paddingBottom","label","checked","cambiarEstado","inactive","estadoText","position","pathname","MedicosIndex","path","useLocation","texto","nombreCompleto","MedicoView","locationState","useParams","cargar","initialData","statusText","headers","config","typeError","ciComplemento","default","notRequired","matches","apellidoPaterno","apellidoMaterno","max","trim","nombres","MedicoForm","initialized","location","refetchOnMount","onError","String","filterBy","feedback","onBlur","MedicosTypeahead","defaultOptions","options","setOptions","search","setSearch","_busqueda","useInfiniteQuery","pageParam","getNextPageParam","lastPage","allPages","nextPage","pages","flatMap","clearButton","align","emptyLabel","promptText","searchText","paginationText","labelKey","maxResults","minLength","isFetchingNextPage","onSearch","paginate","onPaginate","fetchNextPage","useCache","renderMenuItemChildren","proveedorPolicy","ProveedoresService","fields","ProveedoresFilterForm","tipo","proveedor","actualizarEstado","p","alignRight","login","ProveedoresIndex","updateFilter","oldFilter","razonSocial","ProveedorView","startsWith","ubicacion","latitud","longitud","Row","nit","direccion","telefono1","telefono2","MapContainer","center","zoom","dragging","scrollWheelZoom","doubleClickZoom","minHeight","TileLayer","attribution","url","Marker","Popup","join","ProveedorEmpresaFieldset","useFormContext","ProveedorMedicoFieldset","ProveedorFieldset","ContactoFieldset","muted","oneOf","ProveedorForm","formMethods","values","general","lat","lng","Array","isArray","contacto","useServerValidation","ProveedoresTypeahead","solicitudAtencionExternaPolicy","emit","emitByRegionalOnly","SolicitudAtencionExternaFilterForm","input","matricula","desde","moment","format","hasta","medicoId","proveedorId","solicitud","urlDm11","SolicitudAtencionExternaIndex","numero","fecha","paciente","titular","AseguradoChooser","asegurados","asegurado","matriculaComplemento","AseguradosService","include","AseguradoCard","aseguradoChooserVisible","showAseguradoChooser","afiliacion","baja","fechaValidezSeguro","fechaBaja","enMora","extincion","fechaExtincion","parentesco","code","getParentesco","dirtyFields","hasErrors","Card","Accordion","eventKey","FormControl","validation","EstadosAfi","EstadosEmp","hoy","estadoAfiSchema","notOneOf","fechaRegistro","bajaAfiSchema","emptyStringTo","min","estadoEmpSchema","toDate","NaN","subtract","SolicitudAtencionExternaForm","setAsegurado","mode","dm11Viewer","registrar","registrarError","defaultActiveKey","inputProps","disabled","ClinicaApp","useRouteMatch","sidebarItems","items","icon","SidebarLayout","sidebar","header","Image","src","exact","ListaMoraItemForm","ListaMoraIndex","showFilterForm","setShowFilterForm","visible","in","target","srOnly","whiteSpace","Math","ceil","useOnClickOutside","handler","listener","event","el","contains","document","querySelector","addEventListener","removeEventListener","ClickOutsideHandler","children","onClickOutside","containerRef","SidebarItem","match","ListGroup","action","borderLeft","subitem","paddingLeft","verticalAlign","marginLeft","Sidebar","side","renderItem","left","right","showSidebar","useSelector","sidebarVisibility","dispatch","useDispatch","onClickOutsideHandler","React","toggle","zIndex","Container"],"sourceRoot":""}