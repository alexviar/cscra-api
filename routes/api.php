<?php

use App\Http\Controllers\EmpleadorController;
use App\Http\Controllers\AseguradosController;
use App\Http\Controllers\EspecialidadesController;
use App\Http\Controllers\ListaMoraController;
use App\Http\Controllers\MedicosController;
use App\Http\Controllers\PermissionController;
use App\Http\Controllers\PrestacionController;
use App\Http\Controllers\ProveedorController;
use App\Http\Controllers\RegionalesController;
use App\Http\Controllers\RoleController;
use App\Http\Controllers\SolicitudAtencionExternaController;
use App\Http\Controllers\UnidadesTerritorialesController;
use App\Http\Controllers\UserController;
use App\Models\Asegurado;
use App\Models\Galeno\AfiliacionBeneficiario;
use App\Models\Galeno\AfiliacionTitular;
use App\Models\Galeno\Afiliado;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Route;
use Illuminate\Support\Facades\Storage;

/*
|--------------------------------------------------------------------------
| API Routes
|--------------------------------------------------------------------------
|
| Here is where you can register API routes for your application. These
| routes are loaded by the RouteServiceProvider within a group which
| is assigned the "api" middleware group. Enjoy building your API!
|
*/

Route::middleware('auth:api')->get('/user', function (Request $request) {
    return $request->user();
});

// Route::get("/foto", function (){
//   $binary = pack("H*", "");
//   Storage::put("foto.jpg", $binary);
// });

/**
 * User routes
 */
Route::middleware("auth:sanctum")->get("usuarios", [UserController::class, "index"]);
Route::middleware("auth:sanctum")->get("usuarios/{id}", [UserController::class, "show"]);
Route::middleware("auth:sanctum")->post("usuarios", [UserController::class, "store"]);
Route::middleware("auth:sanctum")->put("usuarios/{id}/cambiar-contrasena", [UserController::class, "changePassword"]);
Route::middleware("auth:sanctum")->put("usuarios/{id}/bloquear", [UserController::class, "disable"]);
Route::middleware("auth:sanctum")->put("usuarios/{id}/desbloquear", [UserController::class, "enable"]);
Route::middleware("auth:sanctum")->put("usuarios/{id}", [UserController::class, "update"]);

/**
 * Roles routes
 */
Route::middleware("auth:sanctum")->get("roles", [RoleController::class, "index"]);
Route::middleware("auth:sanctum")->get("roles/{id}", [RoleController::class, "show"]);
Route::middleware("auth:sanctum")->post("roles", [RoleController::class, "store"]);
Route::middleware("auth:sanctum")->put("roles/{id}", [RoleController::class, "update"]);
Route::middleware("auth:sanctum")->delete("roles/{id}", [RoleController::class, "destroy"]);

/**
 * Permisos routes
 */
Route::middleware("auth:sanctum")->get("permisos", [PermissionController::class, "index"]);

Route::middleware("auth:sanctum")->get("empleadores", [EmpleadorController::class, "buscar"]);
Route::middleware("auth:sanctum")->get("empleadores/buscar-por-patronal", [EmpleadorController::class, "buscarPorPatronal"]);
Route::middleware("auth:sanctum")->get("asegurados", [AseguradosController::class, "buscar"]);

Route::middleware("auth:sanctum")->get("lista-mora", [ListaMoraController::class, "buscar"]);
Route::middleware("auth:sanctum")->post("lista-mora/agregar", [ListaMoraController::class, "agregar"]);
Route::middleware("auth:sanctum")->post("lista-mora/quitar", [ListaMoraController::class, "quitar"]);

Route::middleware("auth:sanctum")->get("especialidades", [EspecialidadesController::class, "buscar"]);
Route::middleware("auth:sanctum")->get("especialidades/{id}", [EspecialidadesController::class, "ver"]);
Route::middleware("auth:sanctum")->post("especialidades", [EspecialidadesController::class, "registrar"]);
Route::middleware("auth:sanctum")->put("especialidades/{id}", [EspecialidadesController::class, "actualizar"]);
Route::middleware("auth:sanctum")->delete("especialidades/{id}", [EspecialidadesController::class, "eliminar"]);
Route::middleware("auth:sanctum")->post("especialidades/importar", [EspecialidadesController::class, "importar"]);

Route::middleware("auth:sanctum")->get("solicitudes-atencion-externa", [SolicitudAtencionExternaController::class, "buscar"]);
Route::middleware("auth:sanctum")->post("solicitudes-atencion-externa", [SolicitudAtencionExternaController::class, "registrar"]);
Route::middleware("auth:sanctum")->get("formularios/dm11/{numero}", [SolicitudAtencionExternaController::class, "verDm11"])
  ->where('id', '[0-9]{10}')->name("forms.dm11");
Route::middleware("auth:sanctum")->put("solicitudes-atencion-externa/{id}/generar-dm11", [SolicitudAtencionExternaController::class, "generarDm11"])
  ->where('id', '[0-9]{10}');

Route::middleware("auth:sanctum")->get("medicos", [MedicosController::class, "buscar"]);
Route::middleware("auth:sanctum")->get("medicos/{id}", [MedicosController::class, "mostrar"]);
Route::middleware("auth:sanctum")->post("medicos", [MedicosController::class, "registrar"]);
Route::middleware("auth:sanctum")->put("medicos/{id}/cambiar-estado", [MedicosController::class, "cambiarEstado"]);
Route::middleware("auth:sanctum")->put("medicos/{id}", [MedicosController::class, "actualizar"]);
Route::middleware("auth:sanctum")->delete("medicos/{id}", [MedicosController::class, "eliminar"]);

Route::middleware("auth:sanctum")->get("regionales", [RegionalesController::class, "obtener"]);

Route::middleware("auth:sanctum")->get("prestaciones", [PrestacionController::class, "buscar"]);
Route::middleware("auth:sanctum")->get("prestaciones/buscar-nombre", [PrestacionController::class, "buscarPorNombre"]);
Route::middleware("auth:sanctum")->get("prestaciones/{id}", [PrestacionController::class, "ver"]);
Route::middleware("auth:sanctum")->post("prestaciones", [PrestacionController::class, "registrar"]);
Route::middleware("auth:sanctum")->put("prestaciones/{id}", [PrestacionController::class, "actualizar"]);
Route::middleware("auth:sanctum")->delete("prestaciones/{id}", [PrestacionController::class, "eliminar"]);
Route::middleware("auth:sanctum")->post("prestaciones/importar", [PrestacionController::class, "importar"]);


Route::middleware("auth:sanctum")->get("proveedores", [ProveedorController::class, "buscar"]);
Route::middleware("auth:sanctum")->get("proveedores/{id}", [ProveedorController::class, "mostrar"]);
Route::middleware("auth:sanctum")->post("proveedores", [ProveedorController::class, "registrar"]);
Route::middleware("auth:sanctum")->get("proveedores/{idProveedor}/contratos", [ProveedorController::class, "buscarContrato"]);
Route::middleware("auth:sanctum")->post("proveedores/{idProveedor}/contratos", [ProveedorController::class, "registrarContrato"]);
Route::middleware("auth:sanctum")->put("proveedores/{idProveedor}/contratos/{id}/consumir", [ProveedorController::class, "consumirContrato"]);
Route::middleware("auth:sanctum")->put("proveedores/{idProveedor}/contratos/{id}/extender", [ProveedorController::class, "extenderContrato"]);
Route::middleware("auth:sanctum")->put("proveedores/{idProveedor}/contratos/{id}/anular", [ProveedorController::class, "anularContrato"]);
Route::middleware("auth:sanctum")->put("proveedores/{id}", [ProveedorController::class, "actualizar"]);
Route::middleware("auth:sanctum")->get("proveedores/buscar-nombre", [ProveedorController::class, "buscarPorNombre"]);

Route::middleware("auth:sanctum")->get("departamentos", [UnidadesTerritorialesController::class, "getDepartamentos"]);
Route::middleware("auth:sanctum")->get("provincias", [UnidadesTerritorialesController::class, "getProvincias"]);
Route::middleware("auth:sanctum")->get("municipios", [UnidadesTerritorialesController::class, "getMunicipios"]);


